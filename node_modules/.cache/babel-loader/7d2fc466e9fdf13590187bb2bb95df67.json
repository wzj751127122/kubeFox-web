{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\")); // Note non-packaged dependency diff_match_patch\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"diff_match_patch\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\" ? {\n      chunk: \"CodeMirror-merge-l-chunk\",\n      start: \"CodeMirror-merge-l-chunk-start\",\n      end: \"CodeMirror-merge-l-chunk-end\",\n      insert: \"CodeMirror-merge-l-inserted\",\n      del: \"CodeMirror-merge-l-deleted\",\n      connect: \"CodeMirror-merge-l-connect\"\n    } : {\n      chunk: \"CodeMirror-merge-r-chunk\",\n      start: \"CodeMirror-merge-r-chunk-start\",\n      end: \"CodeMirror-merge-r-chunk-end\",\n      insert: \"CodeMirror-merge-r-inserted\",\n      del: \"CodeMirror-merge-r-deleted\",\n      connect: \"CodeMirror-merge-r-connect\"\n    };\n  }\n\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function (pane, orig, options) {\n      this.edit = this.mv.edit;\n      ;\n      (this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({\n        value: orig,\n        readOnly: !this.mv.options.allowEditingOriginals\n      }, copyObj(options)));\n\n      if (this.mv.options.connect == \"align\") {\n        if (!this.edit.state.trackAlignable) this.edit.state.trackAlignable = new TrackAlignable(this.edit);\n        this.orig.state.trackAlignable = new TrackAlignable(this.orig);\n      }\n\n      this.lockButton.title = this.edit.phrase(\"Toggle locked scrolling\");\n      this.lockButton.setAttribute(\"aria-label\", this.lockButton.title);\n      this.orig.state.diffViews = [this];\n      var classLocation = options.chunkClassLocation || \"background\";\n      if (Object.prototype.toString.call(classLocation) != \"[object Array]\") classLocation = [classLocation];\n      this.classes.classLocation = classLocation;\n      this.diff = getDiff(asString(orig), asString(options.value), this.mv.options.ignoreWhitespace);\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n      this.needsScrollSync = null;\n      this.showDifferences = options.showDifferences !== false;\n    },\n    registerEvents: function (otherDv) {\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this, otherDv);\n    },\n    setShowDifferences: function (val) {\n      val = val !== false;\n\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue(), dv.mv.options.ignoreWhitespace);\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n\n  var updating = false;\n\n  function registerUpdate(dv) {\n    var edit = {\n      from: 0,\n      to: 0,\n      marked: []\n    };\n    var orig = {\n      from: 0,\n      to: 0,\n      marked: []\n    };\n    var debounceChange,\n        updatingFast = false;\n\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n\n      ensureDiff(dv);\n\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n\n      if (dv.mv.options.connect == \"align\") alignChunks(dv);\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) syncScroll(dv, dv.needsScrollSync);\n      updating = false;\n    }\n\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      } // Update faster when a line was added/removed\n\n\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n\n    function swapDoc() {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update(\"full\");\n    }\n\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"swapDoc\", swapDoc);\n    dv.orig.on(\"swapDoc\", swapDoc);\n\n    if (dv.mv.options.connect == \"align\") {\n      CodeMirror.on(dv.edit.state.trackAlignable, \"realign\", setDealign);\n      CodeMirror.on(dv.orig.state.trackAlignable, \"realign\", setDealign);\n    }\n\n    dv.edit.on(\"viewportChange\", function () {\n      set(false);\n    });\n    dv.orig.on(\"viewportChange\", function () {\n      set(false);\n    });\n    update();\n    return update;\n  }\n\n  function registerScroll(dv, otherDv) {\n    dv.edit.on(\"scroll\", function () {\n      syncScroll(dv, true) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function () {\n      syncScroll(dv, false) && makeConnections(dv);\n      if (otherDv) syncScroll(otherDv, true) && makeConnections(otherDv);\n    });\n  }\n\n  function syncScroll(dv, toOrig) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) dv.needsScrollSync = toOrig;\n      return false;\n    }\n\n    dv.needsScrollSync = null;\n    if (!dv.lockScroll) return true;\n    var editor,\n        other,\n        now = +new Date();\n\n    if (toOrig) {\n      editor = dv.edit;\n      other = dv.orig;\n    } else {\n      editor = dv.orig;\n      other = dv.edit;\n    } // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n\n\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 250 > now) return false;\n    var sInfo = editor.getScrollInfo();\n\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight,\n          midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      var off = getOffsets(editor, toOrig ? around.edit : around.orig);\n      var offOther = getOffsets(other, toOrig ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = offOther.top - halfScreen + ratio * (offOther.bot - offOther.top);\n      var botDist, mix; // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1) targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {\n      top: editor.heightAtLine(around.before || 0, \"local\"),\n      bot: editor.heightAtLine(bot, \"local\")\n    };\n  }\n\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(dv.lockButton, \"CodeMirror-merge-scrolllock-enabled\");\n  } // Updating the marks for editor content\n\n\n  function removeClass(editor, line, classes) {\n    var locs = classes.classLocation;\n\n    for (var i = 0; i < locs.length; i++) {\n      editor.removeLineClass(line, locs[i], classes.chunk);\n      editor.removeLineClass(line, locs[i], classes.start);\n      editor.removeLineClass(line, locs[i], classes.end);\n    }\n  }\n\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker) mark.clear();else if (mark.parent) removeClass(editor, mark, classes);\n    }\n\n    arr.length = 0;\n  } // FIXME maybe add a margin around viewport to prevent too many updates\n\n\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function () {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from;\n        state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n\n  function addClass(editor, lineNr, classes, main, start, end) {\n    var locs = classes.classLocation,\n        line = editor.getLineHandle(lineNr);\n\n    for (var i = 0; i < locs.length; i++) {\n      if (main) editor.addLineClass(line, locs[i], classes.chunk);\n      if (start) editor.addLineClass(line, locs[i], classes.start);\n      if (end) editor.addLineClass(line, locs[i], classes.end);\n    }\n\n    return line;\n  }\n\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0),\n        bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start),\n          bto = Math.min(to, end);\n\n      for (var i = bfrom; i < bto; ++i) marks.push(addClass(editor, i, classes, true, i == start, i == end - 1)); // When the chunk is empty, make sure a horizontal line shows up\n\n\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom) marks.push(addClass(editor, bfrom - 1, classes, false, false, true));else marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n\n    var chunkStart = 0,\n        pending = false;\n\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i],\n          tp = part[0],\n          str = part[1];\n\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n\n        if (cleanTo > cleanFrom) {\n          if (pending) {\n            markChunk(chunkStart, cleanFrom);\n            pending = false;\n          }\n\n          chunkStart = cleanTo;\n        }\n      } else {\n        pending = true;\n\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos),\n              b = posMin(bot, end);\n          if (!posEq(a, b)) marks.push(editor.markText(a, b, {\n            className: cls\n          }));\n          pos = end;\n        }\n      }\n    }\n\n    if (pending) markChunk(chunkStart, pos.line + 1);\n  } // Updating the gap between editor and original\n\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n\n    if (dv.copyButtons) clear(dv.copyButtons);\n    var vpEdit = dv.edit.getViewport(),\n        vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top;\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top;\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from && ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from) drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0,\n        origStart = 0;\n\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n\n    return origStart + (editLine - editStart);\n  } // Combines information about chunks and widgets/markers to return\n  // an array of lines, in a single editor, that probably need to be\n  // aligned with their counterparts in the editor next to it.\n\n\n  function alignableFor(cm, chunks, isOrig) {\n    var tracker = cm.state.trackAlignable;\n    var start = cm.firstLine(),\n        trackI = 0;\n    var result = [];\n\n    for (var i = 0;; i++) {\n      var chunk = chunks[i];\n      var chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom;\n\n      for (; trackI < tracker.alignable.length; trackI += 2) {\n        var n = tracker.alignable[trackI] + 1;\n        if (n <= start) continue;\n        if (n <= chunkStart) result.push(n);else break;\n      }\n\n      if (!chunk) break;\n      result.push(start = isOrig ? chunk.origTo : chunk.editTo);\n    }\n\n    return result;\n  } // Given information about alignable lines in two editors, fill in\n  // the result (an array of three-element arrays) to reflect the\n  // lines that need to be aligned with each other.\n\n\n  function mergeAlignable(result, origAlignable, chunks, setIndex) {\n    var rI = 0,\n        origI = 0,\n        chunkI = 0,\n        diff = 0;\n\n    outer: for (;; rI++) {\n      var nextR = result[rI],\n          nextO = origAlignable[origI];\n      if (!nextR && nextO == null) break;\n      var rLine = nextR ? nextR[0] : 1e9,\n          oLine = nextO == null ? 1e9 : nextO;\n\n      while (chunkI < chunks.length) {\n        var chunk = chunks[chunkI];\n\n        if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n          origI++;\n          rI--;\n          continue outer;\n        }\n\n        if (chunk.editTo > rLine) {\n          if (chunk.editFrom <= rLine) continue outer;\n          break;\n        }\n\n        diff += chunk.origTo - chunk.origFrom - (chunk.editTo - chunk.editFrom);\n        chunkI++;\n      }\n\n      if (rLine == oLine - diff) {\n        nextR[setIndex] = oLine;\n        origI++;\n      } else if (rLine < oLine - diff) {\n        nextR[setIndex] = rLine + diff;\n      } else {\n        var record = [oLine - diff, null, null];\n        record[setIndex] = oLine;\n        result.splice(rI, 0, record);\n        origI++;\n      }\n    }\n  }\n\n  function findAlignedLines(dv, other) {\n    var alignable = alignableFor(dv.edit, dv.chunks, false),\n        result = [];\n    if (other) for (var i = 0, j = 0; i < other.chunks.length; i++) {\n      var n = other.chunks[i].editTo;\n\n      while (j < alignable.length && alignable[j] < n) j++;\n\n      if (j == alignable.length || alignable[j] != n) alignable.splice(j++, 0, n);\n    }\n\n    for (var i = 0; i < alignable.length; i++) result.push([alignable[i], null, null]);\n\n    mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1);\n    if (other) mergeAlignable(result, alignableFor(other.orig, other.chunks, true), other.chunks, 2);\n    return result;\n  }\n\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function () {\n      alignChunks(dv, force);\n    });\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n\n    var linesToAlign = findAlignedLines(dv, other); // Clear old aligners\n\n    var aligners = dv.mv.aligners;\n\n    for (var i = 0; i < aligners.length; i++) aligners[i].clear();\n\n    aligners.length = 0;\n    var cm = [dv.edit, dv.orig],\n        scroll = [],\n        offset = [];\n    if (other) cm.push(other.orig);\n\n    for (var i = 0; i < cm.length; i++) {\n      scroll.push(cm[i].getScrollInfo().top);\n      offset.push(-cm[i].getScrollerElement().getBoundingClientRect().top);\n    }\n\n    if (offset[0] != offset[1] || cm.length == 3 && offset[1] != offset[2]) alignLines(cm, offset, [0, 0, 0], aligners);\n\n    for (var ln = 0; ln < linesToAlign.length; ln++) alignLines(cm, offset, linesToAlign[ln], aligners);\n\n    for (var i = 0; i < cm.length; i++) cm[i].scrollTo(null, scroll[i]);\n  }\n\n  function alignLines(cm, cmOffset, lines, aligners) {\n    var maxOffset = -1e8,\n        offset = [];\n\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\") - cmOffset[i];\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1) aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n\n  function padAbove(cm, line, size) {\n    var above = true;\n\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\";\n    elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {\n      height: size,\n      above: above,\n      mergeSpacer: true,\n      handleMouseEvents: true\n    });\n  }\n\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\", true) - sTopOrig;\n\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\", true) - sTopEdit;\n\n      if (flip) {\n        var tmp = topLpx;\n        topLpx = topRpx;\n        topRpx = tmp;\n      }\n\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\", true) - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\", true) - sTopEdit;\n\n      if (flip) {\n        var tmp = botLpx;\n        botLpx = botRpx;\n        botRpx = tmp;\n      }\n\n      var curveTop = \" C \" + w / 2 + \" \" + topRpx + \" \" + w / 2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w / 2 + \" \" + botLpx + \" \" + w / 2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")), \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\", \"class\", dv.classes.connect);\n    }\n\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\", \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = dv.edit.phrase(editOriginals ? \"Push to left\" : \"Revert chunk\");\n      copy.chunk = chunk;\n      copy.style.top = (chunk.origTo > chunk.origFrom ? top : dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit) + \"px\";\n      copy.setAttribute(\"role\", \"button\");\n      copy.setAttribute(\"tabindex\", \"0\");\n      copy.setAttribute(\"aria-label\", copy.title);\n\n      if (editOriginals) {\n        var topReverse = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\", \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {\n          editFrom: chunk.origFrom,\n          editTo: chunk.origTo,\n          origFrom: chunk.editFrom,\n          origTo: chunk.editTo\n        };\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n        copyReverse.setAttribute(\"role\", \"button\");\n        copyReverse.setAttribute(\"tabindex\", \"0\");\n        copyReverse.setAttribute(\"aria-label\", copyReverse.title);\n      }\n    }\n  }\n\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0);\n    var origEnd = Pos(chunk.origTo, 0);\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0);\n    var editEnd = Pos(chunk.editTo, 0);\n    var handler = dv.mv.options.revertChunk;\n    if (handler) handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd);else to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd);\n  } // Merge view, containing 0, 1, or 2 diff views.\n\n\n  var MergeView = CodeMirror.MergeView = function (node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n    this.options = options;\n    var origLeft = options.origLeft,\n        origRight = options.origRight == null ? options.orig : options.origRight;\n    var hasLeft = origLeft != null,\n        hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [],\n        left = this.left = null,\n        right = this.right = null;\n    var self = this;\n\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-left\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-editor\");\n    wrap.push(editPane);\n\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-right\");\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n    if (options.collapseIdentical) this.editor().operation(function () {\n      collapseIdenticalStretches(self, options.collapseIdentical);\n    });\n\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n\n    if (left) left.registerEvents(right);\n    if (right) right.registerEvents(left);\n\n    var onResize = function () {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function () {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n\n      if (!p) {\n        clearInterval(resizeInterval);\n        CodeMirror.off(window, \"resize\", onResize);\n      }\n    }, 5000);\n  };\n\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    lock.setAttribute(\"role\", \"button\");\n    lock.setAttribute(\"tabindex\", \"0\");\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function () {\n      setScrollLock(dv, !dv.lockScroll);\n    });\n    CodeMirror.on(lock, \"keyup\", function (e) {\n      e.key === \"Enter\" && setScrollLock(dv, !dv.lockScroll);\n    });\n    var gapElts = [lockWrap];\n\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n\n      function copyButtons(e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      }\n\n      CodeMirror.on(dv.copyButtons, \"click\", copyButtons);\n      CodeMirror.on(dv.copyButtons, \"keyup\", function (e) {\n        e.key === \"Enter\" && copyButtons(e);\n      });\n      gapElts.unshift(dv.copyButtons);\n    }\n\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n\n  MergeView.prototype = {\n    constructor: MergeView,\n    editor: function () {\n      return this.edit;\n    },\n    rightOriginal: function () {\n      return this.right && this.right.orig;\n    },\n    leftOriginal: function () {\n      return this.left && this.left.orig;\n    },\n    setShowDifferences: function (val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function () {\n      if (this.right) {\n        ensureDiff(this.right);\n        return this.right.chunks;\n      }\n    },\n    leftChunks: function () {\n      if (this.left) {\n        ensureDiff(this.left);\n        return this.left.chunks;\n      }\n    }\n  };\n\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;else return obj.getValue();\n  } // Operations on diffs\n\n\n  var dmp;\n\n  function getDiff(a, b, ignoreWhitespace) {\n    if (!dmp) dmp = new diff_match_patch();\n    var diff = dmp.diff_main(a, b); // The library sometimes leaves in empty parts, which confuse the algorithm\n\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n\n      if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n\n    return diff;\n  }\n\n  function getChunks(diff) {\n    var chunks = [];\n    if (!diff.length) return chunks;\n    var startEdit = 0,\n        startOrig = 0;\n    var edit = Pos(0, 0),\n        orig = Pos(0, 0);\n\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i],\n          tp = part[0];\n\n      if (tp == DIFF_EQUAL) {\n        var startOff = !startOfLineClean(diff, i) || edit.line < startEdit || orig.line < startOrig ? 1 : 0;\n        var cleanFromEdit = edit.line + startOff,\n            cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff,\n            cleanToOrig = orig.line + endOff;\n\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({\n            origFrom: startOrig,\n            origTo: cleanFromOrig,\n            editFrom: startEdit,\n            editTo: cleanFromEdit\n          });\n          startEdit = cleanToEdit;\n          startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n\n    if (startEdit <= edit.line || startOrig <= orig.line) chunks.push({\n      origFrom: startOrig,\n      origTo: orig.line + 1,\n      editFrom: startEdit,\n      editTo: edit.line + 1\n    });\n    return chunks;\n  }\n\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if (next.length == 1 && i < diff.length - 2 || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) == 10;\n  }\n\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n\n      if (afterE == null) {\n        if (fromLocal > n) {\n          afterE = chunk.editFrom;\n          afterO = chunk.origFrom;\n        } else if (toLocal > n) {\n          afterE = chunk.editTo;\n          afterO = chunk.origTo;\n        }\n      }\n\n      if (toLocal <= n) {\n        beforeE = chunk.editTo;\n        beforeO = chunk.origTo;\n      } else if (fromLocal <= n) {\n        beforeE = chunk.editFrom;\n        beforeO = chunk.origFrom;\n      }\n    }\n\n    return {\n      edit: {\n        before: beforeE,\n        after: afterE\n      },\n      orig: {\n        before: beforeO,\n        after: afterO\n      }\n    };\n  }\n\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = cm.phrase(\"Identical text collapsed. Click to expand.\");\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n\n    if (mark.explicitlyCleared) clear();\n    CodeMirror.on(widget, \"click\", clear);\n    mark.on(\"clear\", clear);\n    CodeMirror.on(widget, \"click\", clear);\n    return {\n      mark: mark,\n      clear: clear\n    };\n  }\n\n  function collapseStretch(size, editors) {\n    var marks = [];\n\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n\n    return marks[0].mark;\n  }\n\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [],\n        edit = mv.editor(),\n        off = edit.firstLine();\n\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n\n        if (size > margin) {\n          var editors = [{\n            line: line,\n            cm: edit\n          }];\n          if (mv.left) editors.push({\n            line: getMatchingOrigLine(line, mv.left.chunks),\n            cm: mv.left.orig\n          });\n          if (mv.right) editors.push({\n            line: getMatchingOrigLine(line, mv.right.chunks),\n            cm: mv.right.orig\n          });\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  } // General utilities\n\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count) node.removeChild(node.firstChild);\n  }\n\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2) elt.setAttribute(arguments[i], arguments[i + 1]);\n  }\n\n  function copyObj(obj, target) {\n    if (!target) target = {};\n\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n\n    return target;\n  }\n\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos,\n        at = 0;\n\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  } // Tracks collapsed markers and line widgets, in order to be able to\n  // accurately align the content of two editors.\n\n\n  var F_WIDGET = 1,\n      F_WIDGET_BELOW = 2,\n      F_MARKER = 4;\n\n  function TrackAlignable(cm) {\n    this.cm = cm;\n    this.alignable = [];\n    this.height = cm.doc.height;\n    var self = this;\n    cm.on(\"markerAdded\", function (_, marker) {\n      if (!marker.collapsed) return;\n      var found = marker.find(1);\n      if (found != null) self.set(found.line, F_MARKER);\n    });\n    cm.on(\"markerCleared\", function (_, marker, _min, max) {\n      if (max != null && marker.collapsed) self.check(max, F_MARKER, self.hasMarker);\n    });\n    cm.on(\"markerChanged\", this.signal.bind(this));\n    cm.on(\"lineWidgetAdded\", function (_, widget, lineNo) {\n      if (widget.mergeSpacer) return;\n      if (widget.above) self.set(lineNo - 1, F_WIDGET_BELOW);else self.set(lineNo, F_WIDGET);\n    });\n    cm.on(\"lineWidgetCleared\", function (_, widget, lineNo) {\n      if (widget.mergeSpacer) return;\n      if (widget.above) self.check(lineNo - 1, F_WIDGET_BELOW, self.hasWidgetBelow);else self.check(lineNo, F_WIDGET, self.hasWidget);\n    });\n    cm.on(\"lineWidgetChanged\", this.signal.bind(this));\n    cm.on(\"change\", function (_, change) {\n      var start = change.from.line,\n          nBefore = change.to.line - change.from.line;\n      var nAfter = change.text.length - 1,\n          end = start + nAfter;\n      if (nBefore || nAfter) self.map(start, nBefore, nAfter);\n      self.check(end, F_MARKER, self.hasMarker);\n      if (nBefore || nAfter) self.check(change.from.line, F_MARKER, self.hasMarker);\n    });\n    cm.on(\"viewportChange\", function () {\n      if (self.cm.doc.height != self.height) self.signal();\n    });\n  }\n\n  TrackAlignable.prototype = {\n    signal: function () {\n      CodeMirror.signal(this, \"realign\");\n      this.height = this.cm.doc.height;\n    },\n    set: function (n, flags) {\n      var pos = -1;\n\n      for (; pos < this.alignable.length; pos += 2) {\n        var diff = this.alignable[pos] - n;\n\n        if (diff == 0) {\n          if ((this.alignable[pos + 1] & flags) == flags) return;\n          this.alignable[pos + 1] |= flags;\n          this.signal();\n          return;\n        }\n\n        if (diff > 0) break;\n      }\n\n      this.signal();\n      this.alignable.splice(pos, 0, n, flags);\n    },\n    find: function (n) {\n      for (var i = 0; i < this.alignable.length; i += 2) if (this.alignable[i] == n) return i;\n\n      return -1;\n    },\n    check: function (n, flag, pred) {\n      var found = this.find(n);\n      if (found == -1 || !(this.alignable[found + 1] & flag)) return;\n\n      if (!pred.call(this, n)) {\n        this.signal();\n        var flags = this.alignable[found + 1] & ~flag;\n        if (flags) this.alignable[found + 1] = flags;else this.alignable.splice(found, 2);\n      }\n    },\n    hasMarker: function (n) {\n      var handle = this.cm.getLineHandle(n);\n      if (handle.markedSpans) for (var i = 0; i < handle.markedSpans.length; i++) if (handle.markedSpans[i].marker.collapsed && handle.markedSpans[i].to != null) return true;\n      return false;\n    },\n    hasWidget: function (n) {\n      var handle = this.cm.getLineHandle(n);\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++) if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true;\n      return false;\n    },\n    hasWidgetBelow: function (n) {\n      if (n == this.cm.lastLine()) return false;\n      var handle = this.cm.getLineHandle(n + 1);\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++) if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true;\n      return false;\n    },\n    map: function (from, nBefore, nAfter) {\n      var diff = nAfter - nBefore,\n          to = from + nBefore,\n          widgetFrom = -1,\n          widgetTo = -1;\n\n      for (var i = 0; i < this.alignable.length; i += 2) {\n        var n = this.alignable[i];\n        if (n == from && this.alignable[i + 1] & F_WIDGET_BELOW) widgetFrom = i;\n        if (n == to && this.alignable[i + 1] & F_WIDGET_BELOW) widgetTo = i;\n        if (n <= from) continue;else if (n < to) this.alignable.splice(i--, 2);else this.alignable[i] += diff;\n      }\n\n      if (widgetFrom > -1) {\n        var flags = this.alignable[widgetFrom + 1];\n        if (flags == F_WIDGET_BELOW) this.alignable.splice(widgetFrom, 2);else this.alignable[widgetFrom + 1] = flags & ~F_WIDGET_BELOW;\n      }\n\n      if (widgetTo > -1 && nAfter) this.set(from + nAfter, F_WIDGET_BELOW);\n    }\n  };\n\n  function posMin(a, b) {\n    return (a.line - b.line || a.ch - b.ch) < 0 ? a : b;\n  }\n\n  function posMax(a, b) {\n    return (a.line - b.line || a.ch - b.ch) > 0 ? a : b;\n  }\n\n  function posEq(a, b) {\n    return a.line == b.line && a.ch == b.ch;\n  }\n\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = isOrig ? chunk.origFrom : chunk.editFrom;\n      if (from > start) return from;\n    }\n  }\n\n  function goNearbyDiff(cm, dir) {\n    var found = null,\n        views = cm.state.diffViews,\n        line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i],\n          isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found))) found = pos;\n    }\n    if (found != null) cm.setCursor(found, 0);else return CodeMirror.Pass;\n  }\n\n  CodeMirror.commands.goNextDiff = function (cm) {\n    return goNearbyDiff(cm, 1);\n  };\n\n  CodeMirror.commands.goPrevDiff = function (cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","svgNS","DiffView","mv","type","classes","chunk","start","end","insert","del","connect","prototype","constructor","init","pane","orig","options","edit","state","diffViews","push","copyObj","value","readOnly","allowEditingOriginals","trackAlignable","TrackAlignable","lockButton","title","phrase","setAttribute","classLocation","chunkClassLocation","Object","toString","call","diff","getDiff","asString","ignoreWhitespace","chunks","getChunks","diffOutOfDate","dealigned","needsScrollSync","showDifferences","registerEvents","otherDv","forceUpdate","registerUpdate","setScrollLock","registerScroll","setShowDifferences","val","ensureDiff","dv","getValue","signal","updating","from","to","marked","debounceChange","updatingFast","update","mode","svg","clear","copyButtons","clearMarks","updateMarks","DIFF_INSERT","DIFF_DELETE","alignChunks","makeConnections","syncScroll","setDealign","fast","set","clearTimeout","setTimeout","change","_cm","text","length","line","swapDoc","on","toOrig","lockScroll","editor","other","now","Date","scrollSetBy","scrollSetAt","sInfo","getScrollInfo","targetPos","top","halfScreen","clientHeight","midY","mid","lineAtHeight","around","chunkBoundariesAround","off","getOffsets","offOther","ratio","bot","botDist","mix","height","otherInfo","botDistOther","scrollTo","left","after","lastLine","heightAtLine","before","action","addClass","rmClass","removeClass","locs","i","removeLineClass","arr","mark","TextMarker","parent","vp","getViewport","operation","markChanges","lineNr","main","getLineHandle","addLineClass","marks","pos","clipPos","cls","markChunk","bfrom","Math","max","bto","min","chunkStart","pending","part","tp","str","DIFF_EQUAL","cleanFrom","startOfLineClean","moveOver","cleanTo","endOfLineClean","a","posMax","b","posMin","posEq","markText","className","w","gap","offsetWidth","attrs","offsetHeight","vpEdit","vpOrig","outerTop","wrap","getBoundingClientRect","sTopEdit","getScrollerElement","sTopOrig","ch","editFrom","editTo","origFrom","origTo","drawConnectorsForChunk","getMatchingOrigLine","editLine","editStart","origStart","alignableFor","cm","isOrig","tracker","firstLine","trackI","result","alignable","n","mergeAlignable","origAlignable","setIndex","rI","origI","chunkI","outer","nextR","nextO","rLine","oLine","record","splice","findAlignedLines","j","force","curOp","right","linesToAlign","aligners","scroll","offset","alignLines","ln","cmOffset","lines","maxOffset","padAbove","size","above","elt","document","createElement","style","minWidth","addLineWidget","mergeSpacer","handleMouseEvents","flip","topLpx","topRpx","tmp","botLpx","botRpx","curveTop","curveBot","appendChild","createElementNS","copy","editOriginals","topReverse","copyReverse","copyChunk","origEnd","editEnd","handler","revertChunk","replaceRange","getRange","MergeView","node","origLeft","origRight","hasLeft","hasRight","panes","self","leftPane","buildGap","editPane","rightPane","wrapElt","collapseIdentical","collapseIdenticalStretches","onResize","window","resizeInterval","setInterval","p","parentNode","body","clearInterval","lock","lockWrap","e","key","gapElts","revertButtons","target","srcElement","unshift","createSVGRect","rightOriginal","leftOriginal","rightChunks","leftChunks","obj","dmp","diff_match_patch","diff_main","test","startEdit","startOrig","startOff","cleanFromEdit","cleanFromOrig","endOff","cleanToEdit","cleanToOrig","next","charCodeAt","last","nInEdit","beforeE","afterE","beforeO","afterO","fromLocal","toLocal","collapseSingle","widget","inclusiveLeft","inclusiveRight","replacedWith","clearOnEnter","explicitlyCleared","collapseStretch","editors","unclearNearChunks","margin","l","onCollapse","tag","content","cssText","createTextNode","count","childNodes","removeChild","firstChild","arguments","prop","hasOwnProperty","out","at","nl","indexOf","F_WIDGET","F_WIDGET_BELOW","F_MARKER","doc","_","marker","collapsed","found","find","_min","check","hasMarker","bind","lineNo","hasWidgetBelow","hasWidget","nBefore","nAfter","map","flags","flag","pred","handle","markedSpans","widgets","widgetFrom","widgetTo","findPrevDiff","findNextDiff","goNearbyDiff","dir","views","getCursor","setCursor","Pass","commands","goNextDiff","goPrevDiff"],"sources":["/Users/allen/k8s-platform-fe/node_modules/codemirror/addon/merge/merge.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\")); // Note non-packaged dependency diff_match_patch\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"diff_match_patch\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\"\n      ? {chunk: \"CodeMirror-merge-l-chunk\",\n         start: \"CodeMirror-merge-l-chunk-start\",\n         end: \"CodeMirror-merge-l-chunk-end\",\n         insert: \"CodeMirror-merge-l-inserted\",\n         del: \"CodeMirror-merge-l-deleted\",\n         connect: \"CodeMirror-merge-l-connect\"}\n      : {chunk: \"CodeMirror-merge-r-chunk\",\n         start: \"CodeMirror-merge-r-chunk-start\",\n         end: \"CodeMirror-merge-r-chunk-end\",\n         insert: \"CodeMirror-merge-r-inserted\",\n         del: \"CodeMirror-merge-r-deleted\",\n         connect: \"CodeMirror-merge-r-connect\"};\n  }\n\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function(pane, orig, options) {\n      this.edit = this.mv.edit;\n      ;(this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({value: orig, readOnly: !this.mv.options.allowEditingOriginals}, copyObj(options)));\n      if (this.mv.options.connect == \"align\") {\n        if (!this.edit.state.trackAlignable) this.edit.state.trackAlignable = new TrackAlignable(this.edit)\n        this.orig.state.trackAlignable = new TrackAlignable(this.orig)\n      }\n      this.lockButton.title = this.edit.phrase(\"Toggle locked scrolling\");\n      this.lockButton.setAttribute(\"aria-label\", this.lockButton.title);\n\n      this.orig.state.diffViews = [this];\n      var classLocation = options.chunkClassLocation || \"background\";\n      if (Object.prototype.toString.call(classLocation) != \"[object Array]\") classLocation = [classLocation]\n      this.classes.classLocation = classLocation\n\n      this.diff = getDiff(asString(orig), asString(options.value), this.mv.options.ignoreWhitespace);\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n      this.needsScrollSync = null\n\n      this.showDifferences = options.showDifferences !== false;\n    },\n    registerEvents: function(otherDv) {\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this, otherDv);\n    },\n    setShowDifferences: function(val) {\n      val = val !== false;\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue(), dv.mv.options.ignoreWhitespace);\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n\n  var updating = false;\n  function registerUpdate(dv) {\n    var edit = {from: 0, to: 0, marked: []};\n    var orig = {from: 0, to: 0, marked: []};\n    var debounceChange, updatingFast = false;\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n\n      if (dv.mv.options.connect == \"align\")\n        alignChunks(dv);\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) syncScroll(dv, dv.needsScrollSync)\n\n      updating = false;\n    }\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    function swapDoc() {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update(\"full\");\n    }\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"swapDoc\", swapDoc);\n    dv.orig.on(\"swapDoc\", swapDoc);\n    if (dv.mv.options.connect == \"align\") {\n      CodeMirror.on(dv.edit.state.trackAlignable, \"realign\", setDealign)\n      CodeMirror.on(dv.orig.state.trackAlignable, \"realign\", setDealign)\n    }\n    dv.edit.on(\"viewportChange\", function() { set(false); });\n    dv.orig.on(\"viewportChange\", function() { set(false); });\n    update();\n    return update;\n  }\n\n  function registerScroll(dv, otherDv) {\n    dv.edit.on(\"scroll\", function() {\n      syncScroll(dv, true) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function() {\n      syncScroll(dv, false) && makeConnections(dv);\n      if (otherDv) syncScroll(otherDv, true) && makeConnections(otherDv);\n    });\n  }\n\n  function syncScroll(dv, toOrig) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) dv.needsScrollSync = toOrig\n      return false\n    }\n    dv.needsScrollSync = null\n    if (!dv.lockScroll) return true;\n    var editor, other, now = +new Date;\n    if (toOrig) { editor = dv.edit; other = dv.orig; }\n    else { editor = dv.orig; other = dv.edit; }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 250 > now) return false;\n\n    var sInfo = editor.getScrollInfo();\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight, midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      var off = getOffsets(editor, toOrig ? around.edit : around.orig);\n      var offOther = getOffsets(other, toOrig ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = (offOther.top - halfScreen) + ratio * (offOther.bot - offOther.top);\n\n      var botDist, mix;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1)\n          targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {top: editor.heightAtLine(around.before || 0, \"local\"),\n            bot: editor.heightAtLine(bot, \"local\")};\n  }\n\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(dv.lockButton, \"CodeMirror-merge-scrolllock-enabled\");\n  }\n\n  // Updating the marks for editor content\n\n  function removeClass(editor, line, classes) {\n    var locs = classes.classLocation\n    for (var i = 0; i < locs.length; i++) {\n      editor.removeLineClass(line, locs[i], classes.chunk);\n      editor.removeLineClass(line, locs[i], classes.start);\n      editor.removeLineClass(line, locs[i], classes.end);\n    }\n  }\n\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker)\n        mark.clear();\n      else if (mark.parent)\n        removeClass(editor, mark, classes);\n    }\n    arr.length = 0;\n  }\n\n  // FIXME maybe add a margin around viewport to prevent too many updates\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function() {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from; state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n\n  function addClass(editor, lineNr, classes, main, start, end) {\n    var locs = classes.classLocation, line = editor.getLineHandle(lineNr);\n    for (var i = 0; i < locs.length; i++) {\n      if (main) editor.addLineClass(line, locs[i], classes.chunk);\n      if (start) editor.addLineClass(line, locs[i], classes.start);\n      if (end) editor.addLineClass(line, locs[i], classes.end);\n    }\n    return line;\n  }\n\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0), bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start), bto = Math.min(to, end);\n      for (var i = bfrom; i < bto; ++i)\n        marks.push(addClass(editor, i, classes, true, i == start, i == end - 1));\n      // When the chunk is empty, make sure a horizontal line shows up\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom)\n          marks.push(addClass(editor, bfrom - 1, classes, false, false, true));\n        else\n          marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n\n    var chunkStart = 0, pending = false;\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0], str = part[1];\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n        if (cleanTo > cleanFrom) {\n          if (pending) { markChunk(chunkStart, cleanFrom); pending = false }\n          chunkStart = cleanTo;\n        }\n      } else {\n        pending = true\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos), b = posMin(bot, end);\n          if (!posEq(a, b))\n            marks.push(editor.markText(a, b, {className: cls}));\n          pos = end;\n        }\n      }\n    }\n    if (pending) markChunk(chunkStart, pos.line + 1);\n  }\n\n  // Updating the gap between editor and original\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n    if (dv.copyButtons) clear(dv.copyButtons);\n\n    var vpEdit = dv.edit.getViewport(), vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from &&\n          ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from)\n        drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0, origStart = 0;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n    return origStart + (editLine - editStart);\n  }\n\n  // Combines information about chunks and widgets/markers to return\n  // an array of lines, in a single editor, that probably need to be\n  // aligned with their counterparts in the editor next to it.\n  function alignableFor(cm, chunks, isOrig) {\n    var tracker = cm.state.trackAlignable\n    var start = cm.firstLine(), trackI = 0\n    var result = []\n    for (var i = 0;; i++) {\n      var chunk = chunks[i]\n      var chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom\n      for (; trackI < tracker.alignable.length; trackI += 2) {\n        var n = tracker.alignable[trackI] + 1\n        if (n <= start) continue\n        if (n <= chunkStart) result.push(n)\n        else break\n      }\n      if (!chunk) break\n      result.push(start = isOrig ? chunk.origTo : chunk.editTo)\n    }\n    return result\n  }\n\n  // Given information about alignable lines in two editors, fill in\n  // the result (an array of three-element arrays) to reflect the\n  // lines that need to be aligned with each other.\n  function mergeAlignable(result, origAlignable, chunks, setIndex) {\n    var rI = 0, origI = 0, chunkI = 0, diff = 0\n    outer: for (;; rI++) {\n      var nextR = result[rI], nextO = origAlignable[origI]\n      if (!nextR && nextO == null) break\n\n      var rLine = nextR ? nextR[0] : 1e9, oLine = nextO == null ? 1e9 : nextO\n      while (chunkI < chunks.length) {\n        var chunk = chunks[chunkI]\n        if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n          origI++\n          rI--\n          continue outer;\n        }\n        if (chunk.editTo > rLine) {\n          if (chunk.editFrom <= rLine) continue outer;\n          break\n        }\n        diff += (chunk.origTo - chunk.origFrom) - (chunk.editTo - chunk.editFrom)\n        chunkI++\n      }\n      if (rLine == oLine - diff) {\n        nextR[setIndex] = oLine\n        origI++\n      } else if (rLine < oLine - diff) {\n        nextR[setIndex] = rLine + diff\n      } else {\n        var record = [oLine - diff, null, null]\n        record[setIndex] = oLine\n        result.splice(rI, 0, record)\n        origI++\n      }\n    }\n  }\n\n  function findAlignedLines(dv, other) {\n    var alignable = alignableFor(dv.edit, dv.chunks, false), result = []\n    if (other) for (var i = 0, j = 0; i < other.chunks.length; i++) {\n      var n = other.chunks[i].editTo\n      while (j < alignable.length && alignable[j] < n) j++\n      if (j == alignable.length || alignable[j] != n) alignable.splice(j++, 0, n)\n    }\n    for (var i = 0; i < alignable.length; i++)\n      result.push([alignable[i], null, null])\n\n    mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1)\n    if (other)\n      mergeAlignable(result, alignableFor(other.orig, other.chunks, true), other.chunks, 2)\n\n    return result\n  }\n\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function() {\n      alignChunks(dv, force);\n    });\n\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n    var linesToAlign = findAlignedLines(dv, other);\n\n    // Clear old aligners\n    var aligners = dv.mv.aligners;\n    for (var i = 0; i < aligners.length; i++)\n      aligners[i].clear();\n    aligners.length = 0;\n\n    var cm = [dv.edit, dv.orig], scroll = [], offset = []\n    if (other) cm.push(other.orig);\n    for (var i = 0; i < cm.length; i++) {\n      scroll.push(cm[i].getScrollInfo().top);\n      offset.push(-cm[i].getScrollerElement().getBoundingClientRect().top)\n    }\n\n    if (offset[0] != offset[1] || cm.length == 3 && offset[1] != offset[2])\n      alignLines(cm, offset, [0, 0, 0], aligners)\n    for (var ln = 0; ln < linesToAlign.length; ln++)\n      alignLines(cm, offset, linesToAlign[ln], aligners);\n\n    for (var i = 0; i < cm.length; i++)\n      cm[i].scrollTo(null, scroll[i]);\n  }\n\n  function alignLines(cm, cmOffset, lines, aligners) {\n    var maxOffset = -1e8, offset = [];\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\") - cmOffset[i];\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1)\n        aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n\n  function padAbove(cm, line, size) {\n    var above = true;\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\"; elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {height: size, above: above, mergeSpacer: true, handleMouseEvents: true});\n  }\n\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\", true) - sTopOrig;\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = topLpx; topLpx = topRpx; topRpx = tmp; }\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\", true) - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = botLpx; botLpx = botRpx; botRpx = tmp; }\n      var curveTop = \" C \" + w/2 + \" \" + topRpx + \" \" + w/2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w/2 + \" \" + botLpx + \" \" + w/2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")),\n            \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\",\n            \"class\", dv.classes.connect);\n    }\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = dv.edit.phrase(editOriginals ? \"Push to left\" : \"Revert chunk\");\n      copy.chunk = chunk;\n      copy.style.top = (chunk.origTo > chunk.origFrom ? top : dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit) + \"px\";\n      copy.setAttribute(\"role\", \"button\");\n      copy.setAttribute(\"tabindex\", \"0\");\n      copy.setAttribute(\"aria-label\", copy.title);\n\n      if (editOriginals) {\n        var topReverse = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                         \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {editFrom: chunk.origFrom, editTo: chunk.origTo,\n                             origFrom: chunk.editFrom, origTo: chunk.editTo};\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n        copyReverse.setAttribute(\"role\", \"button\");\n        copyReverse.setAttribute(\"tabindex\", \"0\");\n        copyReverse.setAttribute(\"aria-label\", copyReverse.title);\n      }\n    }\n  }\n\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0)\n    var origEnd = Pos(chunk.origTo, 0)\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0)\n    var editEnd = Pos(chunk.editTo, 0)\n    var handler = dv.mv.options.revertChunk\n    if (handler)\n      handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd)\n    else\n      to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd)\n  }\n\n  // Merge view, containing 0, 1, or 2 diff views.\n\n  var MergeView = CodeMirror.MergeView = function(node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n\n    this.options = options;\n    var origLeft = options.origLeft, origRight = options.origRight == null ? options.orig : options.origRight;\n\n    var hasLeft = origLeft != null, hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [], left = this.left = null, right = this.right = null;\n    var self = this;\n\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-left\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-editor\");\n    wrap.push(editPane);\n\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-right\");\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n    if (options.collapseIdentical)\n      this.editor().operation(function() {\n        collapseIdenticalStretches(self, options.collapseIdentical);\n      });\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n    if (left) left.registerEvents(right)\n    if (right) right.registerEvents(left)\n\n\n    var onResize = function() {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function() {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n      if (!p) { clearInterval(resizeInterval); CodeMirror.off(window, \"resize\", onResize); }\n    }, 5000);\n  };\n\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    lock.setAttribute(\"role\", \"button\");\n    lock.setAttribute(\"tabindex\", \"0\");\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function() { setScrollLock(dv, !dv.lockScroll); });\n    CodeMirror.on(lock, \"keyup\", function(e) { e.key === \"Enter\" && setScrollLock(dv, !dv.lockScroll); });\n    var gapElts = [lockWrap];\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n      function copyButtons(e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      }\n      CodeMirror.on(dv.copyButtons, \"click\", copyButtons);\n      CodeMirror.on(dv.copyButtons, \"keyup\", function(e) { e.key === \"Enter\" && copyButtons(e); });\n      gapElts.unshift(dv.copyButtons);\n    }\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n\n  MergeView.prototype = {\n    constructor: MergeView,\n    editor: function() { return this.edit; },\n    rightOriginal: function() { return this.right && this.right.orig; },\n    leftOriginal: function() { return this.left && this.left.orig; },\n    setShowDifferences: function(val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function() {\n      if (this.right) { ensureDiff(this.right); return this.right.chunks; }\n    },\n    leftChunks: function() {\n      if (this.left) { ensureDiff(this.left); return this.left.chunks; }\n    }\n  };\n\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;\n    else return obj.getValue();\n  }\n\n  // Operations on diffs\n  var dmp;\n  function getDiff(a, b, ignoreWhitespace) {\n    if (!dmp) dmp = new diff_match_patch();\n\n    var diff = dmp.diff_main(a, b);\n    // The library sometimes leaves in empty parts, which confuse the algorithm\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n      if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n    return diff;\n  }\n\n  function getChunks(diff) {\n    var chunks = [];\n    if (!diff.length) return chunks;\n    var startEdit = 0, startOrig = 0;\n    var edit = Pos(0, 0), orig = Pos(0, 0);\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0];\n      if (tp == DIFF_EQUAL) {\n        var startOff = !startOfLineClean(diff, i) || edit.line < startEdit || orig.line < startOrig ? 1 : 0;\n        var cleanFromEdit = edit.line + startOff, cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff, cleanToOrig = orig.line + endOff;\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({origFrom: startOrig, origTo: cleanFromOrig,\n                              editFrom: startEdit, editTo: cleanFromEdit});\n          startEdit = cleanToEdit; startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n    if (startEdit <= edit.line || startOrig <= orig.line)\n      chunks.push({origFrom: startOrig, origTo: orig.line + 1,\n                   editFrom: startEdit, editTo: edit.line + 1});\n    return chunks;\n  }\n\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if ((next.length == 1 && i < diff.length - 2) || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) == 10;\n  }\n\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n      if (afterE == null) {\n        if (fromLocal > n) { afterE = chunk.editFrom; afterO = chunk.origFrom; }\n        else if (toLocal > n) { afterE = chunk.editTo; afterO = chunk.origTo; }\n      }\n      if (toLocal <= n) { beforeE = chunk.editTo; beforeO = chunk.origTo; }\n      else if (fromLocal <= n) { beforeE = chunk.editFrom; beforeO = chunk.origFrom; }\n    }\n    return {edit: {before: beforeE, after: afterE}, orig: {before: beforeO, after: afterO}};\n  }\n\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = cm.phrase(\"Identical text collapsed. Click to expand.\");\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n    if (mark.explicitlyCleared) clear();\n    CodeMirror.on(widget, \"click\", clear);\n    mark.on(\"clear\", clear);\n    CodeMirror.on(widget, \"click\", clear);\n    return {mark: mark, clear: clear};\n  }\n\n  function collapseStretch(size, editors) {\n    var marks = [];\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n    return marks[0].mark;\n  }\n\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [], edit = mv.editor(), off = edit.firstLine();\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n        if (size > margin) {\n          var editors = [{line: line, cm: edit}];\n          if (mv.left) editors.push({line: getMatchingOrigLine(line, mv.left.chunks), cm: mv.left.orig});\n          if (mv.right) editors.push({line: getMatchingOrigLine(line, mv.right.chunks), cm: mv.right.orig});\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n\n  // General utilities\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count)\n      node.removeChild(node.firstChild);\n  }\n\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2)\n      elt.setAttribute(arguments[i], arguments[i+1]);\n  }\n\n  function copyObj(obj, target) {\n    if (!target) target = {};\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n    return target;\n  }\n\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos, at = 0;\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  }\n\n  // Tracks collapsed markers and line widgets, in order to be able to\n  // accurately align the content of two editors.\n\n  var F_WIDGET = 1, F_WIDGET_BELOW = 2, F_MARKER = 4\n\n  function TrackAlignable(cm) {\n    this.cm = cm\n    this.alignable = []\n    this.height = cm.doc.height\n    var self = this\n    cm.on(\"markerAdded\", function(_, marker) {\n      if (!marker.collapsed) return\n      var found = marker.find(1)\n      if (found != null) self.set(found.line, F_MARKER)\n    })\n    cm.on(\"markerCleared\", function(_, marker, _min, max) {\n      if (max != null && marker.collapsed)\n        self.check(max, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"markerChanged\", this.signal.bind(this))\n    cm.on(\"lineWidgetAdded\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.set(lineNo - 1, F_WIDGET_BELOW)\n      else self.set(lineNo, F_WIDGET)\n    })\n    cm.on(\"lineWidgetCleared\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.check(lineNo - 1, F_WIDGET_BELOW, self.hasWidgetBelow)\n      else self.check(lineNo, F_WIDGET, self.hasWidget)\n    })\n    cm.on(\"lineWidgetChanged\", this.signal.bind(this))\n    cm.on(\"change\", function(_, change) {\n      var start = change.from.line, nBefore = change.to.line - change.from.line\n      var nAfter = change.text.length - 1, end = start + nAfter\n      if (nBefore || nAfter) self.map(start, nBefore, nAfter)\n      self.check(end, F_MARKER, self.hasMarker)\n      if (nBefore || nAfter) self.check(change.from.line, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"viewportChange\", function() {\n      if (self.cm.doc.height != self.height) self.signal()\n    })\n  }\n\n  TrackAlignable.prototype = {\n    signal: function() {\n      CodeMirror.signal(this, \"realign\")\n      this.height = this.cm.doc.height\n    },\n\n    set: function(n, flags) {\n      var pos = -1\n      for (; pos < this.alignable.length; pos += 2) {\n        var diff = this.alignable[pos] - n\n        if (diff == 0) {\n          if ((this.alignable[pos + 1] & flags) == flags) return\n          this.alignable[pos + 1] |= flags\n          this.signal()\n          return\n        }\n        if (diff > 0) break\n      }\n      this.signal()\n      this.alignable.splice(pos, 0, n, flags)\n    },\n\n    find: function(n) {\n      for (var i = 0; i < this.alignable.length; i += 2)\n        if (this.alignable[i] == n) return i\n      return -1\n    },\n\n    check: function(n, flag, pred) {\n      var found = this.find(n)\n      if (found == -1 || !(this.alignable[found + 1] & flag)) return\n      if (!pred.call(this, n)) {\n        this.signal()\n        var flags = this.alignable[found + 1] & ~flag\n        if (flags) this.alignable[found + 1] = flags\n        else this.alignable.splice(found, 2)\n      }\n    },\n\n    hasMarker: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.markedSpans) for (var i = 0; i < handle.markedSpans.length; i++)\n        if (handle.markedSpans[i].marker.collapsed && handle.markedSpans[i].to != null)\n          return true\n      return false\n    },\n\n    hasWidget: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    hasWidgetBelow: function(n) {\n      if (n == this.cm.lastLine()) return false\n      var handle = this.cm.getLineHandle(n + 1)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    map: function(from, nBefore, nAfter) {\n      var diff = nAfter - nBefore, to = from + nBefore, widgetFrom = -1, widgetTo = -1\n      for (var i = 0; i < this.alignable.length; i += 2) {\n        var n = this.alignable[i]\n        if (n == from && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetFrom = i\n        if (n == to && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetTo = i\n        if (n <= from) continue\n        else if (n < to) this.alignable.splice(i--, 2)\n        else this.alignable[i] += diff\n      }\n      if (widgetFrom > -1) {\n        var flags = this.alignable[widgetFrom + 1]\n        if (flags == F_WIDGET_BELOW) this.alignable.splice(widgetFrom, 2)\n        else this.alignable[widgetFrom + 1] = flags & ~F_WIDGET_BELOW\n      }\n      if (widgetTo > -1 && nAfter)\n        this.set(from + nAfter, F_WIDGET_BELOW)\n    }\n  }\n\n  function posMin(a, b) { return (a.line - b.line || a.ch - b.ch) < 0 ? a : b; }\n  function posMax(a, b) { return (a.line - b.line || a.ch - b.ch) > 0 ? a : b; }\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = (isOrig ? chunk.origFrom : chunk.editFrom);\n      if (from > start) return from;\n    }\n  }\n\n  function goNearbyDiff(cm, dir) {\n    var found = null, views = cm.state.diffViews, line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i], isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found)))\n        found = pos;\n    }\n    if (found != null)\n      cm.setCursor(found, 0);\n    else\n      return CodeMirror.Pass;\n  }\n\n  CodeMirror.commands.goNextDiff = function(cm) {\n    return goNearbyDiff(cm, 1);\n  };\n  CodeMirror.commands.goPrevDiff = function(cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}