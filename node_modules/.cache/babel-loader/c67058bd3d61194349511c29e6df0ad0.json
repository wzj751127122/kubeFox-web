{"ast":null,"code":"import common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport { getNamespecelist } from \"@/api/namespace\";\nimport { DeleteConfigMap, GetConfigMap, GetConfigMapDetail, UpdateConfigMap } from \"@/api/configmap\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      appLoading: false,\n      configMapList: [],\n      configMapTotal: 0,\n      getConfigMapsData: {\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: ''\n        }\n      },\n      //详情\n      configMapDetail: {},\n      getConfigMapDetailData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateConfigMapData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delConfigMapData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      }\n    };\n  },\n\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n\n    onChange(val) {\n      this.contentYaml = val;\n    },\n\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getConfigMaps();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getConfigMaps();\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(() => {\n        done();\n      }).catch(() => {});\n    },\n\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + '...' : value;\n    },\n\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ');\n      return date;\n    },\n\n    restartTotal(e) {\n      let index,\n          sum = 0;\n      let containerStatuses = e.row.status.containerStatuses;\n\n      for (index in containerStatuses) {\n        sum = sum + containerStatuses[index].restartCount;\n      }\n\n      return sum;\n    },\n\n    getNamespaces() {\n      getNamespecelist().then(res => {\n        this.namespaceList = res.data.items;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    getConfigMaps() {\n      this.appLoading = true;\n      this.getConfigMapsData.params.filter_name = this.searchInput;\n      this.getConfigMapsData.params.namespace = this.namespaceValue;\n      this.getConfigMapsData.params.page = this.currentPage;\n      this.getConfigMapsData.params.limit = this.pagesize;\n      GetConfigMap(this.getConfigMapsData.params).then(res => {\n        this.configMapList = res.data.items;\n        this.configMapTotal = res.data.total;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.appLoading = false;\n    },\n\n    getConfigMapDetail(e) {\n      this.getConfigMapDetailData.params.name = e.row.metadata.name;\n      this.getConfigMapDetailData.params.namespace = this.namespaceValue;\n      GetConfigMapDetail(this.getConfigMapDetailData.params).then(res => {\n        this.configMapDetail = res.data;\n        this.contentYaml = this.transYaml(this.configMapDetail);\n        this.yamlDialog = true;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    updateConfigMap() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updateConfigMapData.params.namespace = this.namespaceValue;\n      this.updateConfigMapData.params.content = content;\n      UpdateConfigMap(this.updateConfigMapData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.yamlDialog = false;\n    },\n\n    delConfigMap(e) {\n      this.delConfigMapData.params.configmap_name = e.row.metadata.name;\n      this.delConfigMapData.params.namespace = this.namespaceValue;\n      DeleteConfigMap(this.delConfigMapData.params).then(res => {\n        this.getConfigMaps();\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？';\n      this.$confirm(this.confirmContent, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        fn(obj);\n      }).catch(() => {\n        this.$message.info({\n          message: '已取消操作'\n        });\n      });\n    }\n\n  },\n  watch: {\n    namespaceValue: {\n      handler() {\n        localStorage.setItem('namespace', this.namespaceValue);\n        this.currentPage = 1;\n        this.getConfigMaps();\n      }\n\n    }\n  },\n\n  beforeMount() {\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace');\n    }\n\n    this.getNamespaces();\n    this.getConfigMaps();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["common","yaml2obj","json2yaml","getNamespecelist","DeleteConfigMap","GetConfigMap","GetConfigMapDetail","UpdateConfigMap","data","cmOptions","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","appLoading","configMapList","configMapTotal","getConfigMapsData","params","filter_name","namespace","page","limit","configMapDetail","getConfigMapDetailData","name","yamlDialog","updateConfigMapData","content","delConfigMapData","methods","transYaml","stringify","transObj","load","onChange","val","handleSizeChange","size","getConfigMaps","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","value","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","restartTotal","e","index","sum","containerStatuses","row","status","restartCount","getNamespaces","res","items","$message","error","message","msg","total","getConfigMapDetail","metadata","updateConfigMap","JSON","success","delConfigMap","configmap_name","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","watch","handler","localStorage","setItem","beforeMount","getItem","undefined"],"sourceRoot":"","sources":["/Users/allen/kubemanage-web/src/views/configmap/ConfigMap.vue"],"sourcesContent":["<template>\n    <div class=\"configmap\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"configmap-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <span>命名空间: </span>\n                                    <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                                        <el-option\n                                        v-for=\"(item, index) in namespaceList\"\n                                        :key=\"index\"\n                                        :label=\"item.metadata.name\"\n                                        :value=\"item.metadata.name\">\n                                        </el-option>\n                                    </el-select>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"16\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getConfigMaps()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"configmap-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"configmap-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getConfigMaps()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"configmap-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"configMapList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"ConfigMap名\">\n                                <template v-slot=\"scope\">\n                                    <a class=\"configmap-body-configmapname\">{{ scope.row.metadata.name }}</a>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"标签\">\n                                <template v-slot=\"scope\">\n                                    <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                                        <el-popover\n                                            placement=\"right\"\n                                            :width=\"200\"\n                                            trigger=\"hover\"\n                                            :content=\"key + ':' + val\">\n                                            <template #reference>\n                                                <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                                            </template>\n                                        </el-popover>\n                                    </div>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"DATA\">\n                                <template v-slot=\"scope\">\n                                        <el-popover\n                                            style=\"overflow:auto\"\n                                            placement=\"right\"\n                                            :width=\"400\"\n                                            trigger=\"click\">\n                                            <div style=\"overflow-y:auto;max-height:500px;\">\n                                                <span>{{ scope.row.data }}</span>\n                                            </div>\n                                            <template #reference>\n                                                <el-icon style=\"font-size:18px;cursor:pointer;\"><reading/></el-icon>\n                                            </template>\n                                        </el-popover>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" width=\"200\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getConfigMapDetail(scope)\">YAML</el-button>\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delConfigMap)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"configmap-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"configMapTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n        <codemirror\n            :value=\"contentYaml\"\n            border\n            :options=\"cmOptions\"\n            height=\"500\"\n            style=\"font-size:14px;\"\n            @change=\"onChange\"\n        ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updateConfigMap()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {getNamespecelist} from \"@/api/namespace\";\nimport {DeleteConfigMap, GetConfigMap, GetConfigMapDetail, UpdateConfigMap} from \"@/api/configmap\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            appLoading: false,\n            configMapList: [],\n            configMapTotal: 0,\n            getConfigMapsData: {\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            configMapDetail: {},\n            getConfigMapDetailData: {\n                params: {\n                  name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updateConfigMapData: {\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delConfigMapData: {\n                params: {\n                    name: '',\n                    namespace: ''\n                }\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getConfigMaps()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getConfigMaps()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        restartTotal(e) {\n            let index, sum = 0\n            let containerStatuses = e.row.status.containerStatuses\n            for ( index in containerStatuses) {\n                sum = sum + containerStatuses[index].restartCount \n            }\n            return sum\n        },\n        getNamespaces() {\n          getNamespecelist().then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getConfigMaps() {\n            this.appLoading = true\n            this.getConfigMapsData.params.filter_name = this.searchInput\n            this.getConfigMapsData.params.namespace = this.namespaceValue\n            this.getConfigMapsData.params.page = this.currentPage\n            this.getConfigMapsData.params.limit = this.pagesize\n          GetConfigMap(this.getConfigMapsData.params)\n            .then(res => {\n                this.configMapList = res.data.items\n                this.configMapTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getConfigMapDetail(e) {\n            this.getConfigMapDetailData.params.name = e.row.metadata.name\n            this.getConfigMapDetailData.params.namespace = this.namespaceValue\n          GetConfigMapDetail(this.getConfigMapDetailData.params)\n            .then(res => {\n                this.configMapDetail = res.data\n                this.contentYaml = this.transYaml(this.configMapDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updateConfigMap() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updateConfigMapData.params.namespace = this.namespaceValue\n            this.updateConfigMapData.params.content = content\n          UpdateConfigMap(this.updateConfigMapData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delConfigMap(e) {\n            this.delConfigMapData.params.configmap_name = e.row.metadata.name\n            this.delConfigMapData.params.namespace = this.namespaceValue\n          DeleteConfigMap(this.delConfigMapData.params)\n            .then(res => {\n                this.getConfigMaps()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n    },\n    watch: {\n        namespaceValue: {\n            handler() {\n                localStorage.setItem('namespace', this.namespaceValue)\n                this.currentPage = 1\n                this.getConfigMaps()\n            }\n        },\n    },\n    beforeMount() {\n        if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n            this.namespaceValue = localStorage.getItem('namespace')\n        }\n        this.getNamespaces()\n        this.getConfigMaps()\n    }\n}\n</script>\n\n\n<style scoped>\n    .configmap-head-card,.configmap-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .configmap-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .configmap-body-configmapname {\n        color: #4795EE;\n    }\n    .configmap-body-configmapname:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}