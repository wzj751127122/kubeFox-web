{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0c94bf36\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"pv\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"创建\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"搜索\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"刷新\");\n\nconst _hoisted_5 = {\n  class: \"pv-body-pvname\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"YAML\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"删除\");\n\nconst _hoisted_8 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"取 消\");\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"更 新\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  const _component_codemirror = _resolveComponent(\"codemirror\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n        class: \"pv-head-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '10px'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 2\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n              disabled: \"\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\"\n            }, {\n              default: _withCtx(() => [_hoisted_2]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_input, {\n              class: \"pv-head-search\",\n              clearable: \"\",\n              placeholder: \"请输入\",\n              modelValue: $data.searchInput,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchInput = $event)\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"]), _createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Search\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: _cache[1] || (_cache[1] = $event => $options.getPvs())\n            }, {\n              default: _withCtx(() => [_hoisted_3]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_col, {\n            span: 2,\n            offset: 14\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Refresh\",\n              plain: \"\",\n              onClick: _cache[2] || (_cache[2] = $event => $options.getPvs())\n            }, {\n              default: _withCtx(() => [_hoisted_4]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n        class: \"pv-body-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '5px'\n        }\n      }, {\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          style: {\n            \"width\": \"100%\",\n            \"font-size\": \"12px\",\n            \"margin-bottom\": \"10px\"\n          },\n          data: $data.pvList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            width: \"20\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"left\",\n            label: \"PV名\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"a\", _hoisted_5, _toDisplayString(scope.row.metadata.name), 1\n            /* TEXT */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"状态\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"span\", {\n              class: _normalizeClass([scope.row.status.phase === 'Bound' ? 'success-status' : 'error-status'])\n            }, _toDisplayString(scope.row.status.phase), 3\n            /* TEXT, CLASS */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"spec.accessModes[0]\",\n            label: \"访问模式\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"spec.capacity.storage\",\n            label: \"容量\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"spec.claimRef.name\",\n            label: \"PVC\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            \"min-width\": \"100\",\n            label: \"创建时间\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: \"info\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($options.timeTrans(scope.row.metadata.creationTimestamp)), 1\n              /* TEXT */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"操作\",\n            \"min-width\": \"120\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: $event => $options.getPvDetail(scope)\n            }, {\n              default: _withCtx(() => [_hoisted_6]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Delete\",\n              type: \"danger\",\n              onClick: $event => $options.handleConfirm(scope, '删除', $options.delPv)\n            }, {\n              default: _withCtx(() => [_hoisted_7]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"data\"])), [[_directive_loading, $data.appLoading]]), _createVNode(_component_el_pagination, {\n          class: \"pv-body-pagination\",\n          background: \"\",\n          onSizeChange: $options.handleSizeChange,\n          onCurrentChange: $options.handleCurrentChange,\n          \"current-page\": $data.currentPage,\n          \"page-sizes\": $data.pagesizeList,\n          \"page-size\": $data.pagesize,\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          total: $data.pvTotal\n        }, null, 8\n        /* PROPS */\n        , [\"onSizeChange\", \"onCurrentChange\", \"current-page\", \"page-sizes\", \"page-size\", \"total\"])]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_el_dialog, {\n    title: \"YAML信息\",\n    modelValue: $data.yamlDialog,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.yamlDialog = $event),\n    width: \"45%\",\n    top: \"5%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_8, [_createVNode(_component_el_button, {\n      onClick: _cache[3] || (_cache[3] = $event => $data.yamlDialog = false)\n    }, {\n      default: _withCtx(() => [_hoisted_9]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      disabled: \"\",\n      type: \"primary\",\n      onClick: _cache[4] || (_cache[4] = $event => $options.updatePv())\n    }, {\n      default: _withCtx(() => [_hoisted_10]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_codemirror, {\n      value: $data.contentYaml,\n      border: \"\",\n      options: $data.cmOptions,\n      height: \"500\",\n      style: {\n        \"font-size\": \"14px\"\n      },\n      onChange: $options.onChange\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"options\", \"onChange\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_createVNode","_component_el_row","_component_el_col","span","_createElementVNode","_component_el_card","shadow","padding","_component_el_button","disabled","style","icon","type","_component_el_input","clearable","placeholder","$data","$event","plain","onClick","$options","offset","_createBlock","_component_el_table","data","_component_el_table_column","width","align","label","scope","_toDisplayString","row","metadata","name","status","phase","prop","_component_el_tag","creationTimestamp","size","_component_el_pagination","background","onSizeChange","onCurrentChange","layout","total","_component_el_dialog","title","top","footer","_component_codemirror","value","border","options","height","onChange"],"sourceRoot":"","sources":["/Users/allen/k8s-platform-fe/src/views/persistentvolume/PersistentVolume.vue"],"sourcesContent":["<template>\n    <div class=\"pv\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pv-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"pv-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getPvs()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"14\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getPvs()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pv-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"pvList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"PV名\">\n                                <template v-slot=\"scope\">\n                                    <a class=\"pv-body-pvname\">{{ scope.row.metadata.name }}</a>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"状态\">\n                                <template v-slot=\"scope\">\n                                    <span :class=\"[scope.row.status.phase === 'Bound' ? 'success-status' : 'error-status']\">{{ scope.row.status.phase }}</span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center prop=\"spec.accessModes[0]\" label=\"访问模式\"></el-table-column>\n                            <el-table-column align=center prop=\"spec.capacity.storage\" label=\"容量\"></el-table-column>\n                            <el-table-column align=center prop=\"spec.claimRef.name\" label=\"PVC\"></el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" min-width=\"120\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getPvDetail(scope)\">YAML</el-button>\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delPv)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"pv-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"pvTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button disabled type=\"primary\" @click=\"updatePv()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {DeletePersistentVolume, GetPersistentVolume, GetPersistentVolumeDetail, UpdatePersistentVolume} from \"@/api/pv\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            namespaceListUrl: common.k8sNamespaceList,\n            appLoading: false,\n            pvList: [],\n            pvTotal: 0,\n            getPvsData: {\n                url: common.k8sPvList,\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            pvDetail: {},\n            getPvDetailData: {\n                url: common.k8sPvDetail,\n                params: {\n                    name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updatePvData: {\n                url: common.k8sPvUpdate,\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delPvData: {\n                url: common.k8spvDel,\n                params: {\n                    name: '',\n                    namespace: '',\n                }\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getPvs()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getPvs()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        specTrans(str) {\n            if ( str.indexOf('Ki') == -1 ) {\n                return str\n            }\n            let num = str.slice(0,-2) / 1024 / 1024\n            return num.toFixed(0)\n        },\n        getNamespaces() {\n          getNamespecelist()\n            .then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getPvs() {\n            this.appLoading = true\n            this.getPvsData.params.filter_name = this.searchInput\n            this.getPvsData.params.namespace = this.namespaceValue\n            this.getPvsData.params.page = this.currentPage\n            this.getPvsData.params.limit = this.pagesize\n          GetPersistentVolume(this.getPvsData.params)\n            .then(res => {\n                this.pvList = res.data.items\n                this.pvTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getPvDetail(e) {\n            this.getPvDetailData.params.name = e.row.metadata.name\n            this.getPvDetailData.params.namespace = this.namespaceValue\n          GetPersistentVolumeDetail(this.getPvDetailData.params)\n            .then(res => {\n                this.pvDetail = res.data\n                this.contentYaml = this.transYaml(this.pvDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updatePv() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updatePvData.params.namespace = this.namespaceValue\n            this.updatePvData.params.content = content\n          UpdatePersistentVolume(this.updatePvData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delPv(e) {\n            this.delPvData.params.name = e.row.metadata.name\n            this.delPvData.params.namespace = this.namespaceValue\n          DeletePersistentVolume(this.delPvData.params)\n            .then(res => {\n                this.getPvs()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n    },\n    beforeMount() {\n        this.getPvs()\n    }\n}\n</script>\n\n\n<style scoped>\n    .pv-head-card,.pv-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .pv-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .pv-body-pvname {\n        color: #4795EE;\n    }\n    .pv-body-pvname:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n    .success-status {\n        color: rgb(27, 202, 21);\n    }\n    .warning-status {\n        color: rgb(233, 200, 16);\n    }\n    .error-status {\n        color: rgb(226, 23, 23);\n    }\n</style>"]},"metadata":{},"sourceType":"module"}