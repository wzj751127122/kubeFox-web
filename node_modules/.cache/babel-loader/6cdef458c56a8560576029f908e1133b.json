{"ast":null,"code":"import common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport { DeleteNode, GetNodeDetail, getNodeList, UpdateNode } from \"@/api/node\";\nimport { getNamespecelist } from \"@/api/namespace\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      appLoading: false,\n      nodeList: [],\n      nodeTotal: 0,\n      getNodesData: {\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: ''\n        }\n      },\n      //详情\n      nodeDetail: {},\n      getNodeDetailData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateNodeData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delNodeData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      }\n    };\n  },\n\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n\n    onChange(val) {\n      this.contentYaml = val;\n    },\n\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getNodes();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getNodes();\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(() => {\n        done();\n      }).catch(() => {});\n    },\n\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + '...' : value;\n    },\n\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ');\n      return date;\n    },\n\n    specTrans(str) {\n      if (str.indexOf('Ki') == -1) {\n        return str;\n      }\n\n      let num = str.slice(0, -2) / 1024 / 1024;\n      return num.toFixed(0);\n    },\n\n    getNamespaces() {\n      getNamespecelist().then(res => {\n        this.namespaceList = res.data.items;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    getNodes() {\n      this.appLoading = true;\n      this.getNodesData.params.filter_name = this.searchInput;\n      this.getNodesData.params.page = this.currentPage;\n      this.getNodesData.params.limit = this.pagesize;\n      getNodeList(this.getNodesData.params).then(res => {\n        this.nodeList = res.data.items;\n        this.nodeTotal = res.data.total;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.appLoading = false;\n    },\n\n    getNodeDetail(e) {\n      this.getNodeDetailData.params.name = e.row.metadata.name;\n      this.getNodeDetailData.params.namespace = this.namespaceValue;\n      GetNodeDetail(this.getNodeDetailData.params).then(res => {\n        this.nodeDetail = res.data;\n        this.contentYaml = this.transYaml(this.nodeDetail);\n        this.yamlDialog = true;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    updateNode() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updateNodeData.params.namespace = this.namespaceValue;\n      this.updateNodeData.params.content = content;\n      UpdateNode(this.updateNodeData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.yamlDialog = false;\n    },\n\n    delNode(e) {\n      this.delNodeData.params.name = e.row.metadata.name;\n      this.delNodeData.params.namespace = this.namespaceValue;\n      DeleteNode(this.delNodeData.params).then(res => {\n        this.getNodes();\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？';\n      this.$confirm(this.confirmContent, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        fn(obj);\n      }).catch(() => {\n        this.$message.info({\n          message: '已取消操作'\n        });\n      });\n    }\n\n  },\n\n  beforeMount() {\n    this.getNodes();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["common","yaml2obj","json2yaml","DeleteNode","GetNodeDetail","getNodeList","UpdateNode","getNamespecelist","data","cmOptions","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","appLoading","nodeList","nodeTotal","getNodesData","params","filter_name","namespace","page","limit","nodeDetail","getNodeDetailData","name","yamlDialog","updateNodeData","content","delNodeData","methods","transYaml","stringify","transObj","load","onChange","val","handleSizeChange","size","getNodes","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","value","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","specTrans","str","indexOf","num","slice","toFixed","getNamespaces","res","items","$message","error","message","msg","total","getNodeDetail","e","row","metadata","updateNode","JSON","success","delNode","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","beforeMount"],"sourceRoot":"","sources":["/Users/allen/k8s-platform-fe/src/views/node/Node.vue"],"sourcesContent":["<template>\n    <div class=\"node\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"node-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"node-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getNodes()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"14\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getNodes()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"node-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"nodeList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"Node名\">\n                                <template v-slot=\"scope\">\n                                    <p class=\"node-body-nodename\">{{ scope.row.metadata.name }}</p>\n                                    <p class=\"node-body-ip\">{{ scope.row.status.addresses[0].address }}</p>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"规格\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"warning\">{{ scope.row.status.capacity.cpu }}核{{ specTrans(scope.row.status.capacity.memory) }}G</el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"POD-CIDR\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.spec.podCIDR }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"版本\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.status.nodeInfo.kubeletVersion }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" min-width=\"120\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getNodeDetail(scope)\">YAML</el-button>\n                                    <el-button disabled size=\"small\" style=\"border-radius:2px;\" icon=\"Document\" type=\"warning\" plain @click=\"handleConfirm(scope, '删除', delIngress)\">详情</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"node-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"nodeTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button disabled type=\"primary\" @click=\"updateNode()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {DeleteNode, GetNodeDetail, getNodeList, UpdateNode} from \"@/api/node\";\nimport {getNamespecelist} from \"@/api/namespace\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            appLoading: false,\n            nodeList: [],\n            nodeTotal: 0,\n            getNodesData: {\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            nodeDetail: {},\n            getNodeDetailData: {\n                params: {\n                    name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updateNodeData: {\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delNodeData: {\n                params: {\n                    name: '',\n                    namespace: '',\n                }\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getNodes()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getNodes()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        specTrans(str) {\n            if ( str.indexOf('Ki') == -1 ) {\n                return str\n            }\n            let num = str.slice(0,-2) / 1024 / 1024\n            return num.toFixed(0)\n        },\n        getNamespaces() {\n          getNamespecelist().then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getNodes() {\n            this.appLoading = true\n            this.getNodesData.params.filter_name = this.searchInput\n            this.getNodesData.params.page = this.currentPage\n            this.getNodesData.params.limit = this.pagesize\n          getNodeList(this.getNodesData.params)\n            .then(res => {\n                this.nodeList = res.data.items\n                this.nodeTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getNodeDetail(e) {\n            this.getNodeDetailData.params.name = e.row.metadata.name\n            this.getNodeDetailData.params.namespace = this.namespaceValue\n          GetNodeDetail(this.getNodeDetailData.params)\n            .then(res => {\n                this.nodeDetail = res.data\n                this.contentYaml = this.transYaml(this.nodeDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updateNode() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updateNodeData.params.namespace = this.namespaceValue\n            this.updateNodeData.params.content = content\n          UpdateNode(this.updateNodeData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delNode(e) {\n            this.delNodeData.params.name = e.row.metadata.name\n            this.delNodeData.params.namespace = this.namespaceValue\n          DeleteNode(this.delNodeData.params)\n            .then(res => {\n                this.getNodes()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n    },\n    beforeMount() {\n        this.getNodes()\n    }\n}\n</script>\n\n\n<style scoped>\n    .node-head-card,.node-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .node-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .node-body-nodename {\n        margin: 0px;\n        color: #4795EE;\n    }\n    .node-body-ip {\n        margin: 0px;\n        color: rgb(145, 145, 145);\n    }\n    .node-body-nodename:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}