{"ast":null,"code":"import common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport { getNamespecelist } from \"@/api/namespace\";\nimport { GetPersistentVolumeClaim, GetPersistentVolumeClaimDetail, UpdatePersistentVolumeClaim } from \"@/api/pvc\";\nimport { DeleteSecret } from \"@/api/secret\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      namespaceListUrl: common.k8sNamespaceList,\n      appLoading: false,\n      pvcList: [],\n      pvcTotal: 0,\n      getPvcsData: {\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: ''\n        }\n      },\n      //详情\n      pvcDetail: {},\n      getPvcDetailData: {\n        params: {\n          pvc_name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updatePvcData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delPvcData: {\n        params: {\n          pvc_name: '',\n          namespace: ''\n        }\n      }\n    };\n  },\n\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n\n    onChange(val) {\n      this.contentYaml = val;\n    },\n\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getPvcs();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getPvcs();\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(() => {\n        done();\n      }).catch(() => {});\n    },\n\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + '...' : value;\n    },\n\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ');\n      return date;\n    },\n\n    restartTotal(e) {\n      let index,\n          sum = 0;\n      let containerStatuses = e.row.status.containerStatuses;\n\n      for (index in containerStatuses) {\n        sum = sum + containerStatuses[index].restartCount;\n      }\n\n      return sum;\n    },\n\n    getNamespaces() {\n      getNamespecelist().then(res => {\n        this.namespaceList = res.data.items;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    getPvcs() {\n      this.appLoading = true;\n      this.getPvcsData.params.filter_name = this.searchInput;\n      this.getPvcsData.params.namespace = this.namespaceValue;\n      this.getPvcsData.params.page = this.currentPage;\n      this.getPvcsData.params.limit = this.pagesize;\n      GetPersistentVolumeClaim(this.getPvcsData.params).then(res => {\n        this.pvcList = res.data.items;\n        this.pvcTotal = res.data.total;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.appLoading = false;\n    },\n\n    getPvcDetail(e) {\n      this.getPvcDetailData.params.pvc_name = e.row.metadata.name;\n      this.getPvcDetailData.params.namespace = this.namespaceValue;\n      GetPersistentVolumeClaimDetail(this.getPvcDetailData.params).then(res => {\n        this.pvcDetail = res.data;\n        this.contentYaml = this.transYaml(this.pvcDetail);\n        this.yamlDialog = true;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    updatePvc() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updatePvcData.params.namespace = this.namespaceValue;\n      this.updatePvcData.params.content = content;\n      UpdatePersistentVolumeClaim(this.updatePvcData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.yamlDialog = false;\n    },\n\n    delPvc(e) {\n      this.delPvcData.params.pvc_name = e.row.metadata.name;\n      this.delPvcData.params.namespace = this.namespaceValue;\n      DeleteSecret(this.delPvcData.params).then(res => {\n        this.getPvcs();\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？';\n      this.$confirm(this.confirmContent, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        fn(obj);\n      }).catch(() => {\n        this.$message.info({\n          message: '已取消操作'\n        });\n      });\n    }\n\n  },\n  watch: {\n    namespaceValue: {\n      handler() {\n        localStorage.setItem('namespace', this.namespaceValue);\n        this.currentPage = 1;\n        this.getPvcs();\n      }\n\n    }\n  },\n\n  beforeMount() {\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace');\n    }\n\n    this.getNamespaces();\n    this.getPvcs();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["common","yaml2obj","json2yaml","getNamespecelist","GetPersistentVolumeClaim","GetPersistentVolumeClaimDetail","UpdatePersistentVolumeClaim","DeleteSecret","data","cmOptions","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","namespaceListUrl","k8sNamespaceList","appLoading","pvcList","pvcTotal","getPvcsData","params","filter_name","namespace","page","limit","pvcDetail","getPvcDetailData","pvc_name","yamlDialog","updatePvcData","content","delPvcData","methods","transYaml","stringify","transObj","load","onChange","val","handleSizeChange","size","getPvcs","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","value","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","restartTotal","e","index","sum","containerStatuses","row","status","restartCount","getNamespaces","res","items","$message","error","message","msg","total","getPvcDetail","metadata","name","updatePvc","JSON","success","delPvc","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","watch","handler","localStorage","setItem","beforeMount","getItem","undefined"],"sourceRoot":"","sources":["/Users/allen/k8s-platform-fe/src/views/persistentvolumeclaim/PersistentVolumeClaim.vue"],"sourcesContent":["<template>\n    <div class=\"pvc\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pvc-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <span>命名空间: </span>\n                                    <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                                        <el-option\n                                        v-for=\"(item, index) in namespaceList\"\n                                        :key=\"index\"\n                                        :label=\"item.metadata.name\"\n                                        :value=\"item.metadata.name\">\n                                        </el-option>\n                                    </el-select>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"16\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getPvcs()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pvc-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"pvc-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getPvcs()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pvc-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"pvcList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"PVC名\">\n                                <template v-slot=\"scope\">\n                                    <a class=\"pvc-body-pvcname\">{{ scope.row.metadata.name }}</a>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"标签\">\n                                <template v-slot=\"scope\">\n                                    <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                                        <el-popover\n                                            placement=\"right\"\n                                            :width=\"200\"\n                                            trigger=\"hover\"\n                                            :content=\"key + ':' + val\">\n                                            <template #reference>\n                                                <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                                            </template>\n                                        </el-popover>\n                                    </div>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"状态\">\n                                <template v-slot=\"scope\">\n                                    <span :class=\"[scope.row.status.phase === 'Bound' ? 'success-status' : 'error-status']\">{{ scope.row.status.phase }}</span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center prop=\"status.capacity.storage\" label=\"容量\">\n                            </el-table-column>\n                            <el-table-column align=center prop=\"status.accessModes[0]\" label=\"访问模式\">\n                            </el-table-column>\n                            <el-table-column align=center prop=\"spec.storageClassName\" label=\"StorageClass\">\n                            </el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" width=\"200\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getPvcDetail(scope)\">YAML</el-button>\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delPvc)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"pvc-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"pvcTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updatePvc()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {getNamespecelist} from \"@/api/namespace\";\nimport {GetPersistentVolumeClaim, GetPersistentVolumeClaimDetail, UpdatePersistentVolumeClaim} from \"@/api/pvc\";\nimport {DeleteSecret} from \"@/api/secret\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            namespaceListUrl: common.k8sNamespaceList,\n            appLoading: false,\n            pvcList: [],\n            pvcTotal: 0,\n            getPvcsData: {\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            pvcDetail: {},\n            getPvcDetailData: {\n                params: {\n                    pvc_name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updatePvcData: {\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delPvcData: {\n                params: {\n                    pvc_name: '',\n                    namespace: '',\n                }\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getPvcs()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getPvcs()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        restartTotal(e) {\n            let index, sum = 0\n            let containerStatuses = e.row.status.containerStatuses\n            for ( index in containerStatuses) {\n                sum = sum + containerStatuses[index].restartCount \n            }\n            return sum\n        },\n        getNamespaces() {\n          getNamespecelist().then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getPvcs() {\n            this.appLoading = true\n            this.getPvcsData.params.filter_name = this.searchInput\n            this.getPvcsData.params.namespace = this.namespaceValue\n            this.getPvcsData.params.page = this.currentPage\n            this.getPvcsData.params.limit = this.pagesize\n          GetPersistentVolumeClaim(this.getPvcsData.params)\n            .then(res => {\n                this.pvcList = res.data.items\n                this.pvcTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getPvcDetail(e) {\n            this.getPvcDetailData.params.pvc_name = e.row.metadata.name\n            this.getPvcDetailData.params.namespace = this.namespaceValue\n          GetPersistentVolumeClaimDetail(this.getPvcDetailData.params)\n            .then(res => {\n                this.pvcDetail = res.data\n                this.contentYaml = this.transYaml(this.pvcDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updatePvc() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updatePvcData.params.namespace = this.namespaceValue\n            this.updatePvcData.params.content = content\n          UpdatePersistentVolumeClaim( this.updatePvcData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delPvc(e) {\n            this.delPvcData.params.pvc_name = e.row.metadata.name\n            this.delPvcData.params.namespace = this.namespaceValue\n          DeleteSecret(this.delPvcData.params)\n            .then(res => {\n                this.getPvcs()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n    },\n    watch: {\n        namespaceValue: {\n            handler() {\n                localStorage.setItem('namespace', this.namespaceValue)\n                this.currentPage = 1\n                this.getPvcs()\n            }\n        },\n    },\n    beforeMount() {\n        if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n            this.namespaceValue = localStorage.getItem('namespace')\n        }\n        this.getNamespaces()\n        this.getPvcs()\n    }\n}\n</script>\n\n\n<style scoped>\n    .pvc-head-card,.pvc-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .pvc-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .pvc-body-pvcname {\n        color: #4795EE;\n    }\n    .pvc-body-pvcname:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n    .success-status {\n        color: rgb(27, 202, 21);\n    }\n    .warning-status {\n        color: rgb(233, 200, 16);\n    }\n    .error-status {\n        color: rgb(226, 23, 23);\n    }\n</style>"]},"metadata":{},"sourceType":"module"}