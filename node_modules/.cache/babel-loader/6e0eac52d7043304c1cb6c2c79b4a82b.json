{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-926899d2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"node\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"创建\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"搜索\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"刷新\");\n\nconst _hoisted_5 = {\n  class: \"node-body-nodename\"\n};\nconst _hoisted_6 = {\n  class: \"node-body-ip\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"YAML\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"详情\");\n\nconst _hoisted_9 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"取 消\");\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"更 新\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  const _component_codemirror = _resolveComponent(\"codemirror\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n        class: \"node-head-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '10px'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 2\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n              disabled: \"\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\"\n            }, {\n              default: _withCtx(() => [_hoisted_2]),\n              _: 1\n            })])]),\n            _: 1\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_input, {\n              class: \"node-head-search\",\n              clearable: \"\",\n              placeholder: \"请输入\",\n              modelValue: $data.searchInput,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchInput = $event)\n            }, null, 8, [\"modelValue\"]), _createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Search\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: _cache[1] || (_cache[1] = $event => $options.getNodes())\n            }, {\n              default: _withCtx(() => [_hoisted_3]),\n              _: 1\n            })])]),\n            _: 1\n          }), _createVNode(_component_el_col, {\n            span: 2,\n            offset: 14\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Refresh\",\n              plain: \"\",\n              onClick: _cache[2] || (_cache[2] = $event => $options.getNodes())\n            }, {\n              default: _withCtx(() => [_hoisted_4]),\n              _: 1\n            })])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      })])]),\n      _: 1\n    }), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n        class: \"node-body-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '5px'\n        }\n      }, {\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          style: {\n            \"width\": \"100%\",\n            \"font-size\": \"12px\",\n            \"margin-bottom\": \"10px\"\n          },\n          data: $data.nodeList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            width: \"20\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"left\",\n            label: \"Node名\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"p\", _hoisted_5, _toDisplayString(scope.row.metadata.name), 1), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(scope.row.status.addresses[0].address), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"规格\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: \"warning\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.status.capacity.cpu) + \"核\" + _toDisplayString($options.specTrans(scope.row.status.capacity.memory)) + \"G\", 1)]),\n              _: 2\n            }, 1024)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"POD-CIDR\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"span\", null, _toDisplayString(scope.row.spec.podCIDR), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"版本\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"span\", null, _toDisplayString(scope.row.status.nodeInfo.kubeletVersion), 1)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            \"min-width\": \"100\",\n            label: \"创建时间\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: \"info\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($options.timeTrans(scope.row.metadata.creationTimestamp)), 1)]),\n              _: 2\n            }, 1024)]),\n            _: 1\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"操作\",\n            \"min-width\": \"120\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: $event => $options.getNodeDetail(scope)\n            }, {\n              default: _withCtx(() => [_hoisted_7]),\n              _: 2\n            }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n              disabled: \"\",\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Document\",\n              type: \"warning\",\n              plain: \"\",\n              onClick: $event => $options.handleConfirm(scope, '删除', _ctx.delIngress)\n            }, {\n              default: _withCtx(() => [_hoisted_8]),\n              _: 2\n            }, 1032, [\"onClick\"])]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"data\"])), [[_directive_loading, $data.appLoading]]), _createVNode(_component_el_pagination, {\n          class: \"node-body-pagination\",\n          background: \"\",\n          onSizeChange: $options.handleSizeChange,\n          onCurrentChange: $options.handleCurrentChange,\n          \"current-page\": $data.currentPage,\n          \"page-sizes\": $data.pagesizeList,\n          \"page-size\": $data.pagesize,\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          total: $data.nodeTotal\n        }, null, 8, [\"onSizeChange\", \"onCurrentChange\", \"current-page\", \"page-sizes\", \"page-size\", \"total\"])]),\n        _: 1\n      })])]),\n      _: 1\n    })]),\n    _: 1\n  }), _createVNode(_component_el_dialog, {\n    title: \"YAML信息\",\n    modelValue: $data.yamlDialog,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.yamlDialog = $event),\n    width: \"45%\",\n    top: \"5%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_9, [_createVNode(_component_el_button, {\n      onClick: _cache[3] || (_cache[3] = $event => $data.yamlDialog = false)\n    }, {\n      default: _withCtx(() => [_hoisted_10]),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      disabled: \"\",\n      type: \"primary\",\n      onClick: _cache[4] || (_cache[4] = $event => $options.updateNode())\n    }, {\n      default: _withCtx(() => [_hoisted_11]),\n      _: 1\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_codemirror, {\n      value: $data.contentYaml,\n      border: \"\",\n      options: $data.cmOptions,\n      height: \"500\",\n      style: {\n        \"font-size\": \"14px\"\n      },\n      onChange: $options.onChange\n    }, null, 8, [\"value\", \"options\", \"onChange\"])]),\n    _: 1\n  }, 8, [\"modelValue\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_createVNode","_component_el_row","_component_el_col","span","_createElementVNode","_component_el_card","shadow","padding","_component_el_button","disabled","style","icon","type","_component_el_input","clearable","placeholder","$data","$event","plain","onClick","$options","offset","_createBlock","_component_el_table","data","_component_el_table_column","width","align","label","scope","_toDisplayString","row","metadata","name","status","addresses","address","_component_el_tag","capacity","cpu","memory","spec","podCIDR","nodeInfo","kubeletVersion","creationTimestamp","size","_ctx","_component_el_pagination","background","onSizeChange","onCurrentChange","layout","total","_component_el_dialog","title","top","footer","_component_codemirror","value","border","options","height","onChange"],"sourceRoot":"","sources":["/Users/allen/kubemanage-web/src/views/node/Node.vue"],"sourcesContent":["<template>\n    <div class=\"node\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"node-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"node-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getNodes()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"14\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getNodes()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"node-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"nodeList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"Node名\">\n                                <template v-slot=\"scope\">\n                                    <p class=\"node-body-nodename\">{{ scope.row.metadata.name }}</p>\n                                    <p class=\"node-body-ip\">{{ scope.row.status.addresses[0].address }}</p>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"规格\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"warning\">{{ scope.row.status.capacity.cpu }}核{{ specTrans(scope.row.status.capacity.memory) }}G</el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"POD-CIDR\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.spec.podCIDR }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"版本\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.status.nodeInfo.kubeletVersion }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" min-width=\"120\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getNodeDetail(scope)\">YAML</el-button>\n                                    <el-button disabled size=\"small\" style=\"border-radius:2px;\" icon=\"Document\" type=\"warning\" plain @click=\"handleConfirm(scope, '删除', delIngress)\">详情</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"node-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"nodeTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button disabled type=\"primary\" @click=\"updateNode()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {DeleteNode, GetNodeDetail, getNodeList, UpdateNode} from \"@/api/node\";\nimport {getNamespecelist} from \"@/api/namespace\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            appLoading: false,\n            nodeList: [],\n            nodeTotal: 0,\n            getNodesData: {\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            nodeDetail: {},\n            getNodeDetailData: {\n                params: {\n                    name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updateNodeData: {\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delNodeData: {\n                params: {\n                    name: '',\n                    namespace: '',\n                }\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getNodes()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getNodes()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        specTrans(str) {\n            if ( str.indexOf('Ki') == -1 ) {\n                return str\n            }\n            let num = str.slice(0,-2) / 1024 / 1024\n            return num.toFixed(0)\n        },\n        getNamespaces() {\n          getNamespecelist().then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getNodes() {\n            this.appLoading = true\n            this.getNodesData.params.filter_name = this.searchInput\n            this.getNodesData.params.page = this.currentPage\n            this.getNodesData.params.limit = this.pagesize\n          getNodeList(this.getNodesData.params)\n            .then(res => {\n                this.nodeList = res.data.items\n                this.nodeTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getNodeDetail(e) {\n            this.getNodeDetailData.params.name = e.row.metadata.name\n            this.getNodeDetailData.params.namespace = this.namespaceValue\n          GetNodeDetail(this.getNodeDetailData.params)\n            .then(res => {\n                this.nodeDetail = res.data\n                this.contentYaml = this.transYaml(this.nodeDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updateNode() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updateNodeData.params.namespace = this.namespaceValue\n            this.updateNodeData.params.content = content\n          UpdateNode(this.updateNodeData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delNode(e) {\n            this.delNodeData.params.name = e.row.metadata.name\n            this.delNodeData.params.namespace = this.namespaceValue\n          DeleteNode(this.delNodeData.params)\n            .then(res => {\n                this.getNodes()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n    },\n    beforeMount() {\n        this.getNodes()\n    }\n}\n</script>\n\n\n<style scoped>\n    .node-head-card,.node-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .node-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .node-body-nodename {\n        margin: 0px;\n        color: #4795EE;\n    }\n    .node-body-ip {\n        margin: 0px;\n        color: rgb(145, 145, 145);\n    }\n    .node-body-nodename:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}