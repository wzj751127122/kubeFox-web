{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport router from \"@/router\"; // 新建axios对象\n\nconst httpClient = axios.create({\n  VUE_APP_BASE_API: '/api',\n  timeout: 10000,\n\n  validateStatus(status) {\n    return status >= 200 && status < 504;\n  }\n\n});\nhttpClient.defaults.retry = 1;\nhttpClient.defaults.retryDelay = 1000;\nhttpClient.defaults.shoudRetry = true; // 是否重试\n// 请求拦截器\n\nhttpClient.interceptors.request.use(config => {\n  // 添加header\n  config.headers[\"Content-Type\"] = 'application/json;charset=UTF-8';\n  config.headers[\"Accept-Language\"] = 'zh-CN';\n  config.headers[\"token\"] = localStorage.getItem(\"token\"); // 处理post请求\n\n  if (config.method === 'POST') {\n    if (!config.data) {\n      config.data = [];\n    }\n  }\n\n  return config;\n}, err => {\n  return Promise.reject(err);\n}); // 响应拦截器\n\nhttpClient.interceptors.response.use(response => {\n  if (response.status !== 200 || response.data.code !== 200) {\n    if (response.data.code === 11002) {\n      ElMessage({\n        message: '登录已过期，请重新登陆',\n        type: 'warning'\n      });\n      localStorage.removeItem('token');\n      router.push('/login');\n      return;\n    }\n\n    return Promise.reject(response.data);\n  } else {\n    return response.data;\n  }\n}, err => {\n  return Promise.resolve(err);\n});\nexport default httpClient;","map":{"version":3,"names":["axios","ElMessage","router","httpClient","create","VUE_APP_BASE_API","timeout","validateStatus","status","defaults","retry","retryDelay","shoudRetry","interceptors","request","use","config","headers","localStorage","getItem","method","data","err","Promise","reject","response","code","message","type","removeItem","push","resolve"],"sources":["/Users/allen/kubemanage-web/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport router from \"@/router\";\n\n\n// 新建axios对象\nconst  httpClient = axios.create({\n    VUE_APP_BASE_API: '/api',\n    timeout: 10000,\n    validateStatus(status) {\n        return status >= 200 && status < 504\n    }\n})\n\nhttpClient.defaults.retry = 1\nhttpClient.defaults.retryDelay = 1000\nhttpClient.defaults.shoudRetry = true // 是否重试\n\n// 请求拦截器\nhttpClient.interceptors.request.use(\n    config => {\n        // 添加header\n        config.headers[\"Content-Type\"] = 'application/json;charset=UTF-8'\n        config.headers[\"Accept-Language\"] = 'zh-CN'\n        config.headers[\"token\"] = localStorage.getItem(\"token\")\n        // 处理post请求\n        if (config.method === 'POST') {\n            if (!config.data) {\n                config.data = []\n            }\n        }\n        return config\n    },\n    err => {\n        return Promise.reject(err)\n    }\n)\n\n\n// 响应拦截器\nhttpClient.interceptors.response.use(\n    response => {\n        if (response.status !== 200 || response.data.code !== 200 ) {\n            if (response.data.code === 11002 ) {\n                ElMessage({\n                    message: '登录已过期，请重新登陆',\n                    \n                    type: 'warning',\n                })\n                localStorage.removeItem('token')\n                router.push('/login')\n                return\n            }\n            return Promise.reject(response.data)\n        }else {\n            return response.data\n        }\n    },\n    err => {\n        return Promise.resolve(err)\n    }\n)\n\n\nexport default httpClient"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAGA;;AACA,MAAOC,UAAU,GAAGH,KAAK,CAACI,MAAN,CAAa;EAC7BC,gBAAgB,EAAE,MADW;EAE7BC,OAAO,EAAE,KAFoB;;EAG7BC,cAAc,CAACC,MAAD,EAAS;IACnB,OAAOA,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAAjC;EACH;;AAL4B,CAAb,CAApB;AAQAL,UAAU,CAACM,QAAX,CAAoBC,KAApB,GAA4B,CAA5B;AACAP,UAAU,CAACM,QAAX,CAAoBE,UAApB,GAAiC,IAAjC;AACAR,UAAU,CAACM,QAAX,CAAoBG,UAApB,GAAiC,IAAjC,C,CAAsC;AAEtC;;AACAT,UAAU,CAACU,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CACIC,MAAM,IAAI;EACN;EACAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC;EACAD,MAAM,CAACC,OAAP,CAAe,iBAAf,IAAoC,OAApC;EACAD,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B,CAJM,CAKN;;EACA,IAAIH,MAAM,CAACI,MAAP,KAAkB,MAAtB,EAA8B;IAC1B,IAAI,CAACJ,MAAM,CAACK,IAAZ,EAAkB;MACdL,MAAM,CAACK,IAAP,GAAc,EAAd;IACH;EACJ;;EACD,OAAOL,MAAP;AACH,CAbL,EAcIM,GAAG,IAAI;EACH,OAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,CAhBL,E,CAoBA;;AACAnB,UAAU,CAACU,YAAX,CAAwBY,QAAxB,CAAiCV,GAAjC,CACIU,QAAQ,IAAI;EACR,IAAIA,QAAQ,CAACjB,MAAT,KAAoB,GAApB,IAA2BiB,QAAQ,CAACJ,IAAT,CAAcK,IAAd,KAAuB,GAAtD,EAA4D;IACxD,IAAID,QAAQ,CAACJ,IAAT,CAAcK,IAAd,KAAuB,KAA3B,EAAmC;MAC/BzB,SAAS,CAAC;QACN0B,OAAO,EAAE,aADH;QAGNC,IAAI,EAAE;MAHA,CAAD,CAAT;MAKAV,YAAY,CAACW,UAAb,CAAwB,OAAxB;MACA3B,MAAM,CAAC4B,IAAP,CAAY,QAAZ;MACA;IACH;;IACD,OAAOP,OAAO,CAACC,MAAR,CAAeC,QAAQ,CAACJ,IAAxB,CAAP;EACH,CAZD,MAYM;IACF,OAAOI,QAAQ,CAACJ,IAAhB;EACH;AACJ,CAjBL,EAkBIC,GAAG,IAAI;EACH,OAAOC,OAAO,CAACQ,OAAR,CAAgBT,GAAhB,CAAP;AACH,CApBL;AAwBA,eAAenB,UAAf"},"metadata":{},"sourceType":"module"}