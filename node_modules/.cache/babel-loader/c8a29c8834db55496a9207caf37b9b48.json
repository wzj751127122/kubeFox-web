{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n(function () {\n  \"use strict\";\n\n  var typeOf = require('remedial').typeOf;\n\n  function stringify(data) {\n    var handlers,\n        indentLevel = '';\n    handlers = {\n      \"undefined\": function () {\n        // objects will not have `undefined` converted to `null`\n        // as this may have unintended consequences\n        // For arrays, however, this behavior seems appropriate\n        return 'null';\n      },\n      \"null\": function () {\n        return 'null';\n      },\n      \"number\": function (x) {\n        return x;\n      },\n      \"boolean\": function (x) {\n        return x ? 'true' : 'false';\n      },\n      \"string\": function (x) {\n        // to avoid the string \"true\" being confused with the\n        // the literal `true`, we always wrap strings in quotes\n        return JSON.stringify(x);\n      },\n      \"array\": function (x) {\n        var output = '';\n\n        if (0 === x.length) {\n          output += '[]';\n          return output;\n        }\n\n        indentLevel = indentLevel.replace(/$/, '  ');\n        x.forEach(function (y) {\n          // TODO how should `undefined` be handled?\n          var handler = handlers[typeOf(y)];\n\n          if (!handler) {\n            throw new Error('what the crap: ' + typeOf(y));\n          }\n\n          output += '\\n' + indentLevel + '- ' + handler(y);\n        });\n        indentLevel = indentLevel.replace(/  /, '');\n        return output;\n      },\n      \"object\": function (x) {\n        var output = '';\n\n        if (0 === Object.keys(x).length) {\n          output += '{}';\n          return output;\n        }\n\n        indentLevel = indentLevel.replace(/$/, '  ');\n        Object.keys(x).forEach(function (k) {\n          var val = x[k],\n              handler = handlers[typeOf(val)];\n\n          if ('undefined' === typeof val) {\n            // the user should do\n            // delete obj.key\n            // and not\n            // obj.key = undefined\n            // but we'll error on the side of caution\n            return;\n          }\n\n          if (!handler) {\n            throw new Error('what the crap: ' + typeOf(val));\n          }\n\n          output += '\\n' + indentLevel + k + ': ' + handler(val);\n        });\n        indentLevel = indentLevel.replace(/  /, '');\n        return output;\n      },\n      \"function\": function () {\n        // TODO this should throw or otherwise be ignored\n        return '[object Function]';\n      }\n    };\n    return '---' + handlers[typeOf(data)](data) + '\\n';\n  }\n\n  module.exports.stringify = stringify;\n})();","map":{"version":3,"names":["typeOf","require","stringify","data","handlers","indentLevel","x","JSON","output","length","replace","forEach","y","handler","Error","Object","keys","k","val","module","exports"],"sources":["/Users/allen/k8s-platform-fe/node_modules/json2yaml/index.js"],"sourcesContent":["(function () {\n  \"use strict\";\n\n  var typeOf = require('remedial').typeOf\n    ;\n\n  function stringify(data) {\n    var handlers\n      , indentLevel = ''\n      ;\n\n    handlers = {\n        \"undefined\": function () {\n          // objects will not have `undefined` converted to `null`\n          // as this may have unintended consequences\n          // For arrays, however, this behavior seems appropriate\n          return 'null';\n        }\n      , \"null\": function () {\n          return 'null';\n        }\n      , \"number\": function (x) {\n          return x;\n        }\n      , \"boolean\": function (x) {\n          return x ? 'true' : 'false';\n        }\n      , \"string\": function (x) {\n          // to avoid the string \"true\" being confused with the\n          // the literal `true`, we always wrap strings in quotes\n          return JSON.stringify(x);\n        }\n      , \"array\": function (x) {\n          var output = ''\n            ;\n\n          if (0 === x.length) {\n            output += '[]';\n            return output;\n          }\n\n          indentLevel = indentLevel.replace(/$/, '  ');\n          x.forEach(function (y) {\n            // TODO how should `undefined` be handled?\n            var handler = handlers[typeOf(y)]\n              ;\n\n            if (!handler) {\n              throw new Error('what the crap: ' + typeOf(y));\n            }\n\n            output += '\\n' + indentLevel + '- ' + handler(y);\n             \n          });\n          indentLevel = indentLevel.replace(/  /, '');\n          \n          return output;\n        }\n      , \"object\": function (x) {\n          var output = ''\n            ;\n\n          if (0 === Object.keys(x).length) {\n            output += '{}';\n            return output;\n          }\n\n          indentLevel = indentLevel.replace(/$/, '  ');\n          Object.keys(x).forEach(function (k) {\n            var val = x[k]\n              , handler = handlers[typeOf(val)]\n              ;\n\n            if ('undefined' === typeof val) {\n              // the user should do\n              // delete obj.key\n              // and not\n              // obj.key = undefined\n              // but we'll error on the side of caution\n              return;\n            }\n\n            if (!handler) {\n              throw new Error('what the crap: ' + typeOf(val));\n            }\n\n            output += '\\n' + indentLevel + k + ': ' + handler(val);\n          });\n          indentLevel = indentLevel.replace(/  /, '');\n\n          return output;\n        }\n      , \"function\": function () {\n          // TODO this should throw or otherwise be ignored\n          return '[object Function]';\n        }\n    };\n\n    return '---' + handlers[typeOf(data)](data) + '\\n';\n  }\n\n  module.exports.stringify = stringify;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}