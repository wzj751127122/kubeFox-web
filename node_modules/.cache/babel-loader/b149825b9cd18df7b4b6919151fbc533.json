{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"yaml\", function () {\n    var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\n    var keywordRegex = new RegExp(\"\\\\b((\" + cons.join(\")|(\") + \"))$\", 'i');\n    return {\n      token: function (stream, state) {\n        var ch = stream.peek();\n        var esc = state.escaped;\n        state.escaped = false;\n        /* comments */\n\n        if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/)) return \"string\";\n\n        if (state.literal && stream.indentation() > state.keyCol) {\n          stream.skipToEnd();\n          return \"string\";\n        } else if (state.literal) {\n          state.literal = false;\n        }\n\n        if (stream.sol()) {\n          state.keyCol = 0;\n          state.pair = false;\n          state.pairStart = false;\n          /* document start */\n\n          if (stream.match('---')) {\n            return \"def\";\n          }\n          /* document end */\n\n\n          if (stream.match('...')) {\n            return \"def\";\n          }\n          /* array list item */\n\n\n          if (stream.match(/\\s*-\\s+/)) {\n            return 'meta';\n          }\n        }\n        /* inline pairs/lists */\n\n\n        if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n          if (ch == '{') state.inlinePairs++;else if (ch == '}') state.inlinePairs--;else if (ch == '[') state.inlineList++;else state.inlineList--;\n          return 'meta';\n        }\n        /* list separator */\n\n\n        if (state.inlineList > 0 && !esc && ch == ',') {\n          stream.next();\n          return 'meta';\n        }\n        /* pairs separator */\n\n\n        if (state.inlinePairs > 0 && !esc && ch == ',') {\n          state.keyCol = 0;\n          state.pair = false;\n          state.pairStart = false;\n          stream.next();\n          return 'meta';\n        }\n        /* start of value of a pair */\n\n\n        if (state.pairStart) {\n          /* block literals */\n          if (stream.match(/^\\s*(\\||\\>)\\s*/)) {\n            state.literal = true;\n            return 'meta';\n          }\n\n          ;\n          /* references */\n\n          if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) {\n            return 'variable-2';\n          }\n          /* numbers */\n\n\n          if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) {\n            return 'number';\n          }\n\n          if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) {\n            return 'number';\n          }\n          /* keywords */\n\n\n          if (stream.match(keywordRegex)) {\n            return 'keyword';\n          }\n        }\n        /* pairs (associative arrays) -> key */\n\n\n        if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n          state.pair = true;\n          state.keyCol = stream.indentation();\n          return \"atom\";\n        }\n\n        if (state.pair && stream.match(/^:\\s*/)) {\n          state.pairStart = true;\n          return 'meta';\n        }\n        /* nothing found, continue */\n\n\n        state.pairStart = false;\n        state.escaped = ch == '\\\\';\n        stream.next();\n        return null;\n      },\n      startState: function () {\n        return {\n          pair: false,\n          pairStart: false,\n          keyCol: 0,\n          inlinePairs: 0,\n          inlineList: 0,\n          literal: false,\n          escaped: false\n        };\n      },\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-yaml\", \"yaml\");\n  CodeMirror.defineMIME(\"text/yaml\", \"yaml\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","cons","keywordRegex","RegExp","join","token","stream","state","ch","peek","esc","escaped","pos","test","string","charAt","skipToEnd","match","literal","indentation","keyCol","sol","pair","pairStart","inlinePairs","inlineList","next","startState","lineComment","fold","defineMIME"],"sources":["/Users/allen/kubemanage-web/node_modules/codemirror/mode/yaml/yaml.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"yaml\", function() {\n\n  var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\n  var keywordRegex = new RegExp(\"\\\\b((\"+cons.join(\")|(\")+\"))$\", 'i');\n\n  return {\n    token: function(stream, state) {\n      var ch = stream.peek();\n      var esc = state.escaped;\n      state.escaped = false;\n      /* comments */\n      if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/))\n        return \"string\";\n\n      if (state.literal && stream.indentation() > state.keyCol) {\n        stream.skipToEnd(); return \"string\";\n      } else if (state.literal) { state.literal = false; }\n      if (stream.sol()) {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        /* document start */\n        if(stream.match('---')) { return \"def\"; }\n        /* document end */\n        if (stream.match('...')) { return \"def\"; }\n        /* array list item */\n        if (stream.match(/\\s*-\\s+/)) { return 'meta'; }\n      }\n      /* inline pairs/lists */\n      if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n        if (ch == '{')\n          state.inlinePairs++;\n        else if (ch == '}')\n          state.inlinePairs--;\n        else if (ch == '[')\n          state.inlineList++;\n        else\n          state.inlineList--;\n        return 'meta';\n      }\n\n      /* list separator */\n      if (state.inlineList > 0 && !esc && ch == ',') {\n        stream.next();\n        return 'meta';\n      }\n      /* pairs separator */\n      if (state.inlinePairs > 0 && !esc && ch == ',') {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        stream.next();\n        return 'meta';\n      }\n\n      /* start of value of a pair */\n      if (state.pairStart) {\n        /* block literals */\n        if (stream.match(/^\\s*(\\||\\>)\\s*/)) { state.literal = true; return 'meta'; };\n        /* references */\n        if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) { return 'variable-2'; }\n        /* numbers */\n        if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) { return 'number'; }\n        if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) { return 'number'; }\n        /* keywords */\n        if (stream.match(keywordRegex)) { return 'keyword'; }\n      }\n\n      /* pairs (associative arrays) -> key */\n      if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n        state.pair = true;\n        state.keyCol = stream.indentation();\n        return \"atom\";\n      }\n      if (state.pair && stream.match(/^:\\s*/)) { state.pairStart = true; return 'meta'; }\n\n      /* nothing found, continue */\n      state.pairStart = false;\n      state.escaped = (ch == '\\\\');\n      stream.next();\n      return null;\n    },\n    startState: function() {\n      return {\n        pair: false,\n        pairStart: false,\n        keyCol: 0,\n        inlinePairs: 0,\n        inlineList: 0,\n        literal: false,\n        escaped: false\n      };\n    },\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-yaml\", \"yaml\");\nCodeMirror.defineMIME(\"text/yaml\", \"yaml\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}