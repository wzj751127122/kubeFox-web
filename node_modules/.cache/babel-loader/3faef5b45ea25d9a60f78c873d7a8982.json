{"ast":null,"code":"import common from \"../common/Config\";\nimport httpClient from '../../utils/request';\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport { getNamespecelist } from \"@/api/namespace\";\nimport { DeleteDaemonSet, GetDaemonSet, GetDaemonSetDetail, UpdateDaemonSet } from \"@/api/daemonset\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      appLoading: false,\n      daemonSetList: [],\n      daemonSetTotal: 0,\n      getDaemonSetsData: {\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: ''\n        }\n      },\n      //详情\n      daemonSetDetail: {},\n      getDaemonSetDetailData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateDaemonSetData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delDaemonSetData: {\n        params: {\n          daemonset_name: '',\n          namespace: ''\n        }\n      }\n    };\n  },\n\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n\n    onChange(val) {\n      this.contentYaml = val;\n    },\n\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getDaemonSets();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getDaemonSets();\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(() => {\n        done();\n      }).catch(() => {});\n    },\n\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + '...' : value;\n    },\n\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ');\n      return date;\n    },\n\n    restartTotal(e) {\n      let index,\n          sum = 0;\n      let containerStatuses = e.row.status.containerStatuses;\n\n      for (index in containerStatuses) {\n        sum = sum + containerStatuses[index].restartCount;\n      }\n\n      return sum;\n    },\n\n    getNamespaces() {\n      getNamespecelist().then(res => {\n        this.namespaceList = res.data.items;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    getDaemonSets() {\n      this.appLoading = true;\n      this.getDaemonSetsData.params.filter_name = this.searchInput;\n      this.getDaemonSetsData.params.namespace = this.namespaceValue;\n      this.getDaemonSetsData.params.page = this.currentPage;\n      this.getDaemonSetsData.params.limit = this.pagesize;\n      GetDaemonSet(this.getDaemonSetsData.params).then(res => {\n        this.daemonSetList = res.data.items;\n        this.daemonSetTotal = res.data.total;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.appLoading = false;\n    },\n\n    getDaemonSetDetail(e) {\n      this.getDaemonSetDetailData.params.name = e.row.metadata.name;\n      this.getDaemonSetDetailData.params.namespace = this.namespaceValue;\n      GetDaemonSetDetail(this.getDaemonSetDetailData.params).then(res => {\n        this.daemonSetDetail = res.data;\n        this.contentYaml = this.transYaml(this.daemonSetDetail);\n        this.yamlDialog = true;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    updateDaemonSet() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updateDaemonSetData.params.namespace = this.namespaceValue;\n      this.updateDaemonSetData.params.content = content;\n      UpdateDaemonSet(this.updateDaemonSetData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.yamlDialog = false;\n    },\n\n    delDaemonSet(e) {\n      this.delDaemonSetData.params.daemonset_name = e.row.metadata.name;\n      this.delDaemonSetData.params.namespace = this.namespaceValue;\n      DeleteDaemonSet(this.delDaemonSetData.params).then(res => {\n        this.getDaemonSets();\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？';\n      this.$confirm(this.confirmContent, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        fn(obj);\n      }).catch(() => {\n        this.$message.info({\n          message: '已取消操作'\n        });\n      });\n    }\n\n  },\n  watch: {\n    namespaceValue: {\n      handler() {\n        localStorage.setItem('namespace', this.namespaceValue);\n        this.currentPage = 1;\n        this.getDaemonSets();\n      }\n\n    }\n  },\n\n  beforeMount() {\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace');\n    }\n\n    this.getNamespaces();\n    this.getDaemonSets();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["common","httpClient","yaml2obj","json2yaml","getNamespecelist","DeleteDaemonSet","GetDaemonSet","GetDaemonSetDetail","UpdateDaemonSet","data","cmOptions","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","appLoading","daemonSetList","daemonSetTotal","getDaemonSetsData","params","filter_name","namespace","page","limit","daemonSetDetail","getDaemonSetDetailData","name","yamlDialog","updateDaemonSetData","content","delDaemonSetData","daemonset_name","methods","transYaml","stringify","transObj","load","onChange","val","handleSizeChange","size","getDaemonSets","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","value","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","restartTotal","e","index","sum","containerStatuses","row","status","restartCount","getNamespaces","res","items","$message","error","message","msg","total","getDaemonSetDetail","metadata","updateDaemonSet","JSON","success","delDaemonSet","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","watch","handler","localStorage","setItem","beforeMount","getItem","undefined"],"sourceRoot":"","sources":["/Users/allen/kubemanage-web/src/views/daemonset/DaemonSet.vue"],"sourcesContent":["<template>\n  <div class=\"daemonset\">\n    <el-row>\n      <el-col :span=\"24\">\n        <div>\n          <el-card class=\"daemonset-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n            <el-row>\n              <el-col :span=\"6\">\n                <div>\n                  <span>命名空间: </span>\n                  <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                    <el-option\n                        v-for=\"(item, index) in namespaceList\"\n                        :key=\"index\"\n                        :label=\"item.metadata.name\"\n                        :value=\"item.metadata.name\">\n                    </el-option>\n                  </el-select>\n                </div>\n              </el-col>\n              <el-col :span=\"2\" :offset=\"16\">\n                <div>\n                  <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getDaemonSets()\">刷新</el-button>\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <el-col :span=\"24\">\n        <div>\n          <el-card class=\"daemonset-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n            <el-row>\n              <el-col :span=\"2\">\n                <div>\n                  <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                </div>\n              </el-col>\n              <el-col :span=\"6\">\n                <div>\n                  <el-input class=\"daemonset-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                  <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getDaemonSets()\">搜索</el-button>\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <el-col :span=\"24\">\n        <div>\n          <el-card class=\"daemonset-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n            <el-table\n                style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                :data=\"daemonSetList\"\n                v-loading=\"appLoading\">\n              <el-table-column width=\"20\"></el-table-column>\n              <el-table-column align=left label=\"DaemonSet名\">\n                <template v-slot=\"scope\">\n                  <a class=\"daemonset-body-daemonsetname\">{{ scope.row.metadata.name }}</a>\n                </template>\n              </el-table-column>\n              <el-table-column align=center label=\"标签\">\n                <template v-slot=\"scope\">\n                  <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                    <el-popover\n                        placement=\"right\"\n                        :width=\"200\"\n                        trigger=\"hover\"\n                        :content=\"key + ':' + val\">\n                      <template #reference>\n                        <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                      </template>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column align=center label=\"容器组\">\n                <template v-slot=\"scope\">\n                  <span>{{ scope.row.status.numberAvailable>0?scope.row.status.numberAvailable:0  }} / {{ scope.row.status.desiredNumberScheduled>0?scope.row.status.desiredNumberScheduled:0 }} </span>\n                </template>\n              </el-table-column>\n              <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                <template v-slot=\"scope\">\n                  <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column align=center label=\"镜像\">\n                <template v-slot=\"scope\">\n                  <div v-for=\"(val, key) in scope.row.spec.template.spec.containers\" :key=\"key\">\n                    <el-popover\n                        placement=\"right\"\n                        :width=\"200\"\n                        trigger=\"hover\"\n                        :content=\"val.image\">\n                      <template #reference>\n                        <el-tag style=\"margin-bottom: 5px\">{{ ellipsis(val.image.split('/')[2]==undefined?val.image:val.image.split('/')[2]) }}</el-tag>\n                      </template>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column align=center label=\"操作\" width=\"200\">\n                <template v-slot=\"scope\">\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getDaemonSetDetail(scope)\">YAML</el-button>\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delDaemonSet)\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n                class=\"daemonset-body-pagination\"\n                background\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n                :current-page=\"currentPage\"\n                :page-sizes=\"pagesizeList\"\n                :page-size=\"pagesize\"\n                layout=\"total, sizes, prev, pager, next, jumper\"\n                :total=\"daemonSetTotal\">\n            </el-pagination>\n          </el-card>\n        </div>\n      </el-col>\n    </el-row>\n    <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n      <codemirror\n          :value=\"contentYaml\"\n          border\n          :options=\"cmOptions\"\n          height=\"500\"\n          style=\"font-size:14px;\"\n          @change=\"onChange\"\n      ></codemirror>\n      <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updateDaemonSet()\">更 新</el-button>\n                </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport httpClient from '../../utils/request';\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {getNamespecelist} from \"@/api/namespace\";\nimport {DeleteDaemonSet, GetDaemonSet, GetDaemonSetDetail, UpdateDaemonSet} from \"@/api/daemonset\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      appLoading: false,\n      daemonSetList: [],\n      daemonSetTotal: 0,\n      getDaemonSetsData: {\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: '',\n        }\n      },\n      //详情\n      daemonSetDetail: {},\n      getDaemonSetDetailData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateDaemonSetData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delDaemonSetData: {\n        params: {\n          daemonset_name: '',\n          namespace: '',\n        }\n      }\n    }\n  },\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content)\n    },\n    transObj(content) {\n      return yaml2obj.load(content)\n    },\n    onChange(val) {\n      this.contentYaml = val\n    },\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getDaemonSets()\n    },\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getDaemonSets()\n    },\n    handleClose(done) {\n      this.$confirm('确认关闭？')\n          .then(() => {\n            done();\n          })\n          .catch(() => {});\n    },\n    ellipsis(value) {\n      return value.length>15?value.substring(0,15)+'...':value\n    },\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ')\n      return date\n    },\n    restartTotal(e) {\n      let index, sum = 0\n      let containerStatuses = e.row.status.containerStatuses\n      for ( index in containerStatuses) {\n        sum = sum + containerStatuses[index].restartCount\n      }\n      return sum\n    },\n    getNamespaces() {\n      getNamespecelist().then(res => {\n            this.namespaceList = res.data.items\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    getDaemonSets() {\n      this.appLoading = true\n      this.getDaemonSetsData.params.filter_name = this.searchInput\n      this.getDaemonSetsData.params.namespace = this.namespaceValue\n      this.getDaemonSetsData.params.page = this.currentPage\n      this.getDaemonSetsData.params.limit = this.pagesize\n      GetDaemonSet(this.getDaemonSetsData.params).then(res => {\n            this.daemonSetList = res.data.items\n            this.daemonSetTotal = res.data.total\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      this.appLoading = false\n    },\n    getDaemonSetDetail(e) {\n      this.getDaemonSetDetailData.params.name = e.row.metadata.name\n      this.getDaemonSetDetailData.params.namespace = this.namespaceValue\n      GetDaemonSetDetail(this.getDaemonSetDetailData.params)\n          .then(res => {\n            this.daemonSetDetail = res.data\n            this.contentYaml = this.transYaml(this.daemonSetDetail)\n            this.yamlDialog = true\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    updateDaemonSet() {\n      let content = JSON.stringify(this.transObj(this.contentYaml))\n      this.updateDaemonSetData.params.namespace = this.namespaceValue\n      this.updateDaemonSetData.params.content = content\n      UpdateDaemonSet(this.updateDaemonSetData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      this.yamlDialog = false\n    },\n    delDaemonSet(e) {\n      this.delDaemonSetData.params.daemonset_name = e.row.metadata.name\n      this.delDaemonSetData.params.namespace = this.namespaceValue\n      DeleteDaemonSet(this.delDaemonSetData.params)\n          .then(res => {\n            this.getDaemonSets()\n            this.$message.success({\n              message: res.msg\n            })\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n      this.$confirm(this.confirmContent,'提示',{\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n      })\n          .then(() => {\n            fn(obj)\n          })\n          .catch(() => {\n            this.$message.info({\n              message: '已取消操作'\n            })\n          })\n    },\n  },\n  watch: {\n    namespaceValue: {\n      handler() {\n        localStorage.setItem('namespace', this.namespaceValue)\n        this.currentPage = 1\n        this.getDaemonSets()\n      }\n    },\n  },\n  beforeMount() {\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace')\n    }\n    this.getNamespaces()\n    this.getDaemonSets()\n  }\n}\n</script>\n\n\n<style scoped>\n.daemonset-head-card,.daemonset-body-card {\n  border-radius: 1px;\n  margin-bottom: 5px;\n}\n.daemonset-head-search {\n  width:160px;\n  margin-right:10px;\n}\n.daemonset-body-daemonsetname {\n  color: #4795EE;\n}\n.daemonset-body-daemonsetname:hover {\n  color: rgb(84, 138, 238);\n  cursor: pointer;\n  font-weight: bold;\n}\n</style>"]},"metadata":{},"sourceType":"module"}