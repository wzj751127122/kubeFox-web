{"ast":null,"code":"import moment from 'moment';\nimport { login } from \"@/api/login\";\nexport default {\n  data() {\n    return {\n      //加载等待动画\n      loginLoading: false,\n      //登录验证的后端接口\n      loginData: {\n        username: '',\n        password: ''\n      },\n      //校验规则\n      loginDataRules: {\n        username: [{\n          required: true,\n          message: '请填写用户名',\n          trigger: 'change'\n        }],\n        password: [{\n          required: true,\n          message: '请填写密码',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    //登录方法\n    handleLogin() {\n      login(this.loginData).then(res => {\n        //账号密码校验成功后的一系列操作\n        localStorage.setItem('username', this.loginData.username);\n        localStorage.setItem('loginDate', moment().format('YYYY-MM-DD HH:mm:ss')); //存放token\n\n        localStorage.setItem('token', res.data.token); //跳转至根路径\n\n        this.$router.push('/');\n        this.$message.success({\n          message: \"登录成功\"\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6BA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAAQC,KAAR,QAAoB,aAApB;AACA,eAAc;EACVC,IAAI,GAAG;IACH,OAAO;MACH;MACAC,YAAY,EAAE,KAFX;MAGH;MACAC,SAAS,EAAE;QACPC,QAAQ,EAAE,EADH;QAEPC,QAAQ,EAAE;MAFH,CAJR;MAQH;MACAC,cAAc,EAAE;QACZF,QAAQ,EAAE,CAAC;UACPG,QAAQ,EAAE,IADH;UAEPC,OAAO,EAAE,QAFF;UAGPC,OAAO,EAAE;QAHF,CAAD,CADE;QAMZJ,QAAQ,EAAE,CAAC;UACPE,QAAQ,EAAE,IADH;UAEPC,OAAO,EAAE,OAFF;UAGPC,OAAO,EAAE;QAHF,CAAD;MANE;IATb,CAAP;EAsBH,CAxBS;;EAyBVC,OAAO,EAAE;IACL;IACAC,WAAW,GAAG;MACZX,KAAK,CAAC,KAAKG,SAAN,CAAL,CACGS,IADH,CACQC,GAAE,IAAK;QACT;QACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,KAAKZ,SAAL,CAAeC,QAAhD;QACAU,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkChB,MAAM,GAAGiB,MAAT,CAAgB,qBAAhB,CAAlC,EAHS,CAIT;;QACAF,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACZ,IAAJ,CAASgB,KAAvC,EALS,CAMT;;QACA,KAAKC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;QACA,KAAKC,QAAL,CAAcC,OAAd,CAAsB;UAClBb,OAAO,EAAE;QADS,CAAtB;MAGH,CAZH,EAaGc,KAbH,CAaST,GAAE,IAAK;QACV,KAAKO,QAAL,CAAcG,KAAd,CAAoB;UACpBf,OAAO,EAAEK,GAAG,CAACW;QADO,CAApB;MAGH,CAjBH;IAkBF;;EArBK;AAzBC,CAAd","names":["moment","login","data","loginLoading","loginData","username","password","loginDataRules","required","message","trigger","methods","handleLogin","then","res","localStorage","setItem","format","token","$router","push","$message","success","catch","error","msg"],"sourceRoot":"","sources":["/Users/allen/k8s-platform-fe/src/views/login/Login.vue"],"sourcesContent":["<template>\n    <div class=\"login\">\n        <!-- 用户登录卡片 -->\n        <el-card class=\"login-card\">\n            <template #header>\n                <div class=\"login-card-header\">\n                    <span>用户登录</span>\n                </div>\n            </template>\n            <!-- 表单 -->\n            <el-form :model=\"loginData\" :rules=\"loginDataRules\" ref=\"loginData\">\n                <el-form-item prop=\"username\">\n                    <!-- 用户名 -->\n                    <el-input prefix-icon=\"UserFilled\" v-model.trim=\"loginData.username\" maxlength=\"32\" placeholder=\"请输入账号\" clearable></el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <!-- 密码 -->\n                    <el-input prefix-icon=\"Lock\" v-model.trim=\"loginData.password\" maxlength=\"16\" show-password placeholder=\"请输入密码\" clearable></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <!-- 登录按钮 -->\n                    <el-button type=\"primary\" style=\"width: 100%;border-radius: 2px\" :loading=\"loginLoading\" @click=\"handleLogin\">登 录</el-button>\n                </el-form-item>\n            </el-form>\n        </el-card>\n    </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport {login} from \"@/api/login\";\nexport default{\n    data() {\n        return {\n            //加载等待动画\n            loginLoading: false,\n            //登录验证的后端接口\n            loginData: {\n                username: '',\n                password: ''\n            },\n            //校验规则\n            loginDataRules: {\n                username: [{\n                    required: true,\n                    message: '请填写用户名',\n                    trigger: 'change'\n                }],\n                password: [{\n                    required: true,\n                    message: '请填写密码',\n                    trigger: 'change'\n                }],\n            }\n        }\n    },\n    methods: {\n        //登录方法\n        handleLogin() {\n          login(this.loginData)\n            .then(res => {\n                //账号密码校验成功后的一系列操作\n                localStorage.setItem('username', this.loginData.username);\n                localStorage.setItem('loginDate', moment().format('YYYY-MM-DD HH:mm:ss'));\n                //存放token\n                localStorage.setItem('token', res.data.token);\n                //跳转至根路径\n                this.$router.push('/');\n                this.$message.success({\n                    message: \"登录成功\"\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .login {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n      background: aquamarine url(../../assets/img/login3.webp);\n      background-size: 100%;\n    }\n    .login-card {\n        position: absolute;\n        left: 40%;\n        top: 30%;\n        width: 350px;\n        border-radius: 5px;\n        background: rgb(255, 255, 255);\n        overflow: hidden;\n    }\n    .login-card-header {\n        text-align: center;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module"}