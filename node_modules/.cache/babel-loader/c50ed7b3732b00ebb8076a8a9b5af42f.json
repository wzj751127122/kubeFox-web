{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-499671bd\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"pvc\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"命名空间: \", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"刷新\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"创建\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"搜索\");\n\nconst _hoisted_6 = {\n  class: \"pvc-body-pvcname\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"YAML\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"删除\");\n\nconst _hoisted_9 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"取 消\");\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"更 新\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n\n  const _component_el_popover = _resolveComponent(\"el-popover\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  const _component_codemirror = _resolveComponent(\"codemirror\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n        class: \"pvc-head-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '10px'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_hoisted_2, _createVNode(_component_el_select, {\n              modelValue: $data.namespaceValue,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.namespaceValue = $event),\n              filterable: \"\",\n              placeholder: \"请选择\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.namespaceList, (item, index) => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: index,\n                  label: item.metadata.name,\n                  value: item.metadata.name\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_col, {\n            span: 2,\n            offset: 16\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Refresh\",\n              plain: \"\",\n              onClick: _cache[1] || (_cache[1] = $event => $options.getPvcs())\n            }, {\n              default: _withCtx(() => [_hoisted_3]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n        class: \"pvc-head-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '10px'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 2\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n              disabled: \"\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\"\n            }, {\n              default: _withCtx(() => [_hoisted_4]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_input, {\n              class: \"pvc-head-search\",\n              clearable: \"\",\n              placeholder: \"请输入\",\n              modelValue: $data.searchInput,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.searchInput = $event)\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"]), _createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Search\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: _cache[3] || (_cache[3] = $event => $options.getPvcs())\n            }, {\n              default: _withCtx(() => [_hoisted_5]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_card, {\n        class: \"pvc-body-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '5px'\n        }\n      }, {\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          style: {\n            \"width\": \"100%\",\n            \"font-size\": \"12px\",\n            \"margin-bottom\": \"10px\"\n          },\n          data: $data.pvcList\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            width: \"20\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"left\",\n            label: \"PVC名\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"a\", _hoisted_6, _toDisplayString(scope.row.metadata.name), 1\n            /* TEXT */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"标签\"\n          }, {\n            default: _withCtx(scope => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(scope.row.metadata.labels, (val, key) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: key\n              }, [_createVNode(_component_el_popover, {\n                placement: \"right\",\n                width: 200,\n                trigger: \"hover\",\n                content: key + ':' + val\n              }, {\n                reference: _withCtx(() => [_createVNode(_component_el_tag, {\n                  style: {\n                    \"margin-bottom\": \"5px\"\n                  },\n                  type: \"warning\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString($options.ellipsis(key + \":\" + val)), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1032\n              /* PROPS, DYNAMIC_SLOTS */\n              , [\"content\"])]);\n            }), 128\n            /* KEYED_FRAGMENT */\n            ))]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"状态\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"span\", {\n              class: _normalizeClass([scope.row.status.phase === 'Bound' ? 'success-status' : 'error-status'])\n            }, _toDisplayString(scope.row.status.phase), 3\n            /* TEXT, CLASS */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"status.capacity.storage\",\n            label: \"容量\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"status.accessModes[0]\",\n            label: \"访问模式\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            prop: \"spec.storageClassName\",\n            label: \"StorageClass\"\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            \"min-width\": \"100\",\n            label: \"创建时间\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: \"info\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($options.timeTrans(scope.row.metadata.creationTimestamp)), 1\n              /* TEXT */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"操作\",\n            width: \"200\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: $event => $options.getPvcDetail(scope)\n            }, {\n              default: _withCtx(() => [_hoisted_7]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Delete\",\n              type: \"danger\",\n              onClick: $event => $options.handleConfirm(scope, '删除', $options.delPvc)\n            }, {\n              default: _withCtx(() => [_hoisted_8]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"data\"])), [[_directive_loading, $data.appLoading]]), _createVNode(_component_el_pagination, {\n          class: \"pvc-body-pagination\",\n          background: \"\",\n          onSizeChange: $options.handleSizeChange,\n          onCurrentChange: $options.handleCurrentChange,\n          \"current-page\": $data.currentPage,\n          \"page-sizes\": $data.pagesizeList,\n          \"page-size\": $data.pagesize,\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          total: $data.pvcTotal\n        }, null, 8\n        /* PROPS */\n        , [\"onSizeChange\", \"onCurrentChange\", \"current-page\", \"page-sizes\", \"page-size\", \"total\"])]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_el_dialog, {\n    title: \"YAML信息\",\n    modelValue: $data.yamlDialog,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.yamlDialog = $event),\n    width: \"45%\",\n    top: \"5%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_9, [_createVNode(_component_el_button, {\n      onClick: _cache[4] || (_cache[4] = $event => $data.yamlDialog = false)\n    }, {\n      default: _withCtx(() => [_hoisted_10]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[5] || (_cache[5] = $event => $options.updatePvc())\n    }, {\n      default: _withCtx(() => [_hoisted_11]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_codemirror, {\n      value: $data.contentYaml,\n      border: \"\",\n      options: $data.cmOptions,\n      height: \"500\",\n      style: {\n        \"font-size\": \"14px\"\n      },\n      onChange: $options.onChange\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"options\", \"onChange\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_el_row","_component_el_col","span","_component_el_card","shadow","padding","_hoisted_2","_component_el_select","$data","$event","filterable","placeholder","_Fragment","_renderList","item","index","_createBlock","_component_el_option","key","label","metadata","name","value","offset","_component_el_button","style","icon","plain","onClick","$options","disabled","type","_component_el_input","clearable","_component_el_table","data","_component_el_table_column","width","align","scope","_toDisplayString","row","labels","val","_component_el_popover","placement","trigger","content","reference","_component_el_tag","status","phase","prop","creationTimestamp","size","_component_el_pagination","background","onSizeChange","onCurrentChange","layout","total","_component_el_dialog","title","top","footer","_component_codemirror","border","options","height","onChange"],"sourceRoot":"","sources":["/Users/allen/k8s-platform-fe/src/views/persistentvolumeclaim/PersistentVolumeClaim.vue"],"sourcesContent":["<template>\n    <div class=\"pvc\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pvc-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <span>命名空间: </span>\n                                    <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                                        <el-option\n                                        v-for=\"(item, index) in namespaceList\"\n                                        :key=\"index\"\n                                        :label=\"item.metadata.name\"\n                                        :value=\"item.metadata.name\">\n                                        </el-option>\n                                    </el-select>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"16\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getPvcs()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pvc-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"pvc-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getPvcs()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pvc-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"pvcList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"PVC名\">\n                                <template v-slot=\"scope\">\n                                    <a class=\"pvc-body-pvcname\">{{ scope.row.metadata.name }}</a>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"标签\">\n                                <template v-slot=\"scope\">\n                                    <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                                        <el-popover\n                                            placement=\"right\"\n                                            :width=\"200\"\n                                            trigger=\"hover\"\n                                            :content=\"key + ':' + val\">\n                                            <template #reference>\n                                                <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                                            </template>\n                                        </el-popover>\n                                    </div>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"状态\">\n                                <template v-slot=\"scope\">\n                                    <span :class=\"[scope.row.status.phase === 'Bound' ? 'success-status' : 'error-status']\">{{ scope.row.status.phase }}</span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center prop=\"status.capacity.storage\" label=\"容量\">\n                            </el-table-column>\n                            <el-table-column align=center prop=\"status.accessModes[0]\" label=\"访问模式\">\n                            </el-table-column>\n                            <el-table-column align=center prop=\"spec.storageClassName\" label=\"StorageClass\">\n                            </el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" width=\"200\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getPvcDetail(scope)\">YAML</el-button>\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delPvc)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"pvc-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"pvcTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updatePvc()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {getNamespecelist} from \"@/api/namespace\";\nimport {GetPersistentVolumeClaim, GetPersistentVolumeClaimDetail, UpdatePersistentVolumeClaim} from \"@/api/pvc\";\nimport {DeleteSecret} from \"@/api/secret\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            namespaceListUrl: common.k8sNamespaceList,\n            appLoading: false,\n            pvcList: [],\n            pvcTotal: 0,\n            getPvcsData: {\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            pvcDetail: {},\n            getPvcDetailData: {\n                params: {\n                    pvc_name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updatePvcData: {\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delPvcData: {\n                params: {\n                    pvc_name: '',\n                    namespace: '',\n                }\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getPvcs()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getPvcs()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        restartTotal(e) {\n            let index, sum = 0\n            let containerStatuses = e.row.status.containerStatuses\n            for ( index in containerStatuses) {\n                sum = sum + containerStatuses[index].restartCount \n            }\n            return sum\n        },\n        getNamespaces() {\n          getNamespecelist().then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getPvcs() {\n            this.appLoading = true\n            this.getPvcsData.params.filter_name = this.searchInput\n            this.getPvcsData.params.namespace = this.namespaceValue\n            this.getPvcsData.params.page = this.currentPage\n            this.getPvcsData.params.limit = this.pagesize\n          GetPersistentVolumeClaim(this.getPvcsData.params)\n            .then(res => {\n                this.pvcList = res.data.items\n                this.pvcTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getPvcDetail(e) {\n            this.getPvcDetailData.params.pvc_name = e.row.metadata.name\n            this.getPvcDetailData.params.namespace = this.namespaceValue\n          GetPersistentVolumeClaimDetail(this.getPvcDetailData.params)\n            .then(res => {\n                this.pvcDetail = res.data\n                this.contentYaml = this.transYaml(this.pvcDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updatePvc() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updatePvcData.params.namespace = this.namespaceValue\n            this.updatePvcData.params.content = content\n          UpdatePersistentVolumeClaim( this.updatePvcData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delPvc(e) {\n            this.delPvcData.params.pvc_name = e.row.metadata.name\n            this.delPvcData.params.namespace = this.namespaceValue\n          DeleteSecret(this.delPvcData.params)\n            .then(res => {\n                this.getPvcs()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n    },\n    watch: {\n        namespaceValue: {\n            handler() {\n                localStorage.setItem('namespace', this.namespaceValue)\n                this.currentPage = 1\n                this.getPvcs()\n            }\n        },\n    },\n    beforeMount() {\n        if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n            this.namespaceValue = localStorage.getItem('namespace')\n        }\n        this.getNamespaces()\n        this.getPvcs()\n    }\n}\n</script>\n\n\n<style scoped>\n    .pvc-head-card,.pvc-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .pvc-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .pvc-body-pvcname {\n        color: #4795EE;\n    }\n    .pvc-body-pvcname:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n    .success-status {\n        color: rgb(27, 202, 21);\n    }\n    .warning-status {\n        color: rgb(233, 200, 16);\n    }\n    .error-status {\n        color: rgb(226, 23, 23);\n    }\n</style>"]},"metadata":{},"sourceType":"module"}