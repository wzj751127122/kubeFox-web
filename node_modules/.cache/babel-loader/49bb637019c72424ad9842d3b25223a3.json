{"ast":null,"code":"import common from \"../common/Config\";\nimport httpClient from '../../utils/request';\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport { getNamespecelist } from \"@/api/namespace\";\nimport { CreateService, DeleteService, GetService, GetServiceDetail, UpdateService } from \"@/api/service\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      appLoading: false,\n      serviceList: [],\n      serviceTotal: 0,\n      getServicesData: {\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: ''\n        }\n      },\n      //详情\n      serviceDetail: {},\n      getServiceDetailData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateServiceData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delServiceData: {\n        params: {\n          name: '',\n          namespace: ''\n        }\n      },\n      //创建\n      fullscreenLoading: false,\n      direction: 'rtl',\n      createServiceDrawer: false,\n      createService: {\n        name: '',\n        namespace: '',\n        type: 'ClusterIP',\n        container_port: '',\n        port: '',\n        node_port: '',\n        label: {},\n        label_str: ''\n      },\n      createServiceData: {\n        params: {}\n      },\n      createServiceRules: {\n        name: [{\n          required: true,\n          message: '请填写名称',\n          trigger: 'change'\n        }],\n        namespace: [{\n          required: true,\n          message: '请选择命名空间',\n          trigger: 'change'\n        }],\n        port: [{\n          required: true,\n          message: '请填写Service端口',\n          trigger: 'change'\n        }],\n        node_port: [{\n          required: true,\n          message: '请填写NodePort',\n          trigger: 'change'\n        }],\n        label_str: [{\n          required: true,\n          message: '请填写标签',\n          trigger: 'change'\n        }],\n        container_port: [{\n          required: true,\n          message: '请填写容器端口',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n\n    onChange(val) {\n      this.contentYaml = val;\n    },\n\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getServices();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getServices();\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(() => {\n        done();\n      }).catch(() => {});\n    },\n\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + '...' : value;\n    },\n\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ');\n      return date;\n    },\n\n    restartTotal(e) {\n      let index,\n          sum = 0;\n      let containerStatuses = e.row.status.containerStatuses;\n\n      for (index in containerStatuses) {\n        sum = sum + containerStatuses[index].restartCount;\n      }\n\n      return sum;\n    },\n\n    getNamespaces() {\n      getNamespecelist().then(res => {\n        this.namespaceList = res.data.items;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    getServices() {\n      this.appLoading = true;\n      this.getServicesData.params.filter_name = this.searchInput;\n      this.getServicesData.params.namespace = this.namespaceValue;\n      this.getServicesData.params.page = this.currentPage;\n      this.getServicesData.params.limit = this.pagesize;\n      GetService(this.getServicesData.params).then(res => {\n        this.serviceList = res.data.items;\n        this.serviceTotal = res.data.total;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.appLoading = false;\n    },\n\n    getServiceDetail(e) {\n      this.getServiceDetailData.params.name = e.row.metadata.name;\n      this.getServiceDetailData.params.namespace = this.namespaceValue;\n      GetServiceDetail(this.getServiceDetailData.params).then(res => {\n        this.serviceDetail = res.data;\n        this.contentYaml = this.transYaml(this.serviceDetail);\n        this.yamlDialog = true;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    updateService() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updateServiceData.params.namespace = this.namespaceValue;\n      this.updateServiceData.params.content = content;\n      UpdateService(this.updateServiceData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.yamlDialog = false;\n    },\n\n    delService(e) {\n      this.delServiceData.params.name = e.row.metadata.name;\n      this.delServiceData.params.namespace = this.namespaceValue;\n      DeleteService(this.delServiceData.params).then(res => {\n        this.getServices();\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？';\n      this.$confirm(this.confirmContent, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        fn(obj);\n      }).catch(() => {\n        this.$message.info({\n          message: '已取消操作'\n        });\n      });\n    },\n\n    createServiceFunc() {\n      let reg = new RegExp(\"(^[A-Za-z]+=[A-Za-z0-9]+).*\");\n\n      if (!reg.test(this.createService.label_str)) {\n        this.$message.warning({\n          message: \"标签填写异常，请确认后重新填写\"\n        });\n        return;\n      }\n\n      this.fullscreenLoading = true;\n      let label = new Map();\n      let a = this.createService.label_str.split(\",\");\n      a.forEach(item => {\n        let b = item.split(\"=\");\n        label[b[0]] = b[1];\n      });\n      this.createServiceData.params = this.createService;\n      this.createServiceData.params.label = label;\n      this.createServiceData.params.container_port = parseInt(this.createService.container_port);\n      this.createServiceData.params.port = parseInt(this.createService.port);\n      this.createServiceData.params.node_port = parseInt(this.createService.node_port);\n      CreateService(this.createServiceData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n        this.getServices();\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.resetForm('createService');\n      this.fullscreenLoading = false;\n      this.createServiceDrawer = false;\n    },\n\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.createServiceFunc();\n        } else {\n          return false;\n        }\n      });\n    }\n\n  },\n  watch: {\n    namespaceValue: {\n      handler() {\n        localStorage.setItem('namespace', this.namespaceValue);\n        this.currentPage = 1;\n        this.getServices();\n      }\n\n    }\n  },\n\n  beforeMount() {\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace');\n    }\n\n    this.getNamespaces();\n    this.getServices();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["common","httpClient","yaml2obj","json2yaml","getNamespecelist","CreateService","DeleteService","GetService","GetServiceDetail","UpdateService","data","cmOptions","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","appLoading","serviceList","serviceTotal","getServicesData","params","filter_name","namespace","page","limit","serviceDetail","getServiceDetailData","name","yamlDialog","updateServiceData","content","delServiceData","fullscreenLoading","direction","createServiceDrawer","createService","type","container_port","port","node_port","label","label_str","createServiceData","createServiceRules","required","message","trigger","methods","transYaml","stringify","transObj","load","onChange","val","handleSizeChange","size","getServices","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","value","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","restartTotal","e","index","sum","containerStatuses","row","status","restartCount","getNamespaces","res","items","$message","error","msg","total","getServiceDetail","metadata","updateService","JSON","success","delService","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","createServiceFunc","reg","RegExp","test","warning","Map","a","split","forEach","item","b","parseInt","resetForm","formName","$refs","resetFields","submitForm","validate","valid","watch","handler","localStorage","setItem","beforeMount","getItem","undefined"],"sourceRoot":"","sources":["/Users/allen/k8s-platform-fe/src/views/service/Service.vue"],"sourcesContent":["<template>\n    <div class=\"service\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"service-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <span>命名空间: </span>\n                                    <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                                        <el-option\n                                        v-for=\"(item, index) in namespaceList\"\n                                        :key=\"index\"\n                                        :label=\"item.metadata.name\"\n                                        :value=\"item.metadata.name\">\n                                        </el-option>\n                                    </el-select>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"16\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getServices()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"service-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" @click=\"createServiceDrawer = true\" v-loading.fullscreen.lock=\"fullscreenLoading\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"service-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getServices()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"service-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"serviceList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"Service名\">\n                                <template v-slot=\"scope\">\n                                    <a class=\"service-body-servicename\">{{ scope.row.metadata.name }}</a>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"标签\" min-width='120'>\n                                <template v-slot=\"scope\">\n                                    <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                                        <el-popover\n                                            placement=\"right\"\n                                            :width=\"200\"\n                                            trigger=\"hover\"\n                                            :content=\"key + ':' + val\">\n                                            <template #reference>\n                                                <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                                            </template>\n                                        </el-popover>\n                                    </div>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"类型\">\n                                <template v-slot=\"scope\">\n                                    <span style=\"font-weight:bold;\">{{ scope.row.spec.type }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"CLUSTER-IP\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.spec.clusterIP }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"EXTERNAL-IP\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.status.loadBalancer.ingress ? scope.row.status.loadBalancer.ingress[0].ip : '' }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"端口\">\n                                <template v-slot=\"scope\">\n                                    <span v-if=\"!scope.row.spec.ports[0].nodePort\">{{ scope.row.spec.ports[0].port }}/{{ scope.row.spec.ports[0].protocol }}</span>\n                                    <span v-if=\"scope.row.spec.ports[0].nodePort\">{{ scope.row.spec.ports[0].port }}:{{ scope.row.spec.ports[0].nodePort }}/{{ scope.row.spec.ports[0].protocol }}</span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" width=\"200\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getServiceDetail(scope)\">YAML</el-button>\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delService)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"service-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"serviceTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updateService()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n        <el-drawer\n            v-model=\"createServiceDrawer\"\n            :direction=\"direction\"\n            :before-close=\"handleClose\">\n            <template #title>\n                <h4>创建Service</h4>\n            </template>\n            <template #default>\n                <el-row type=\"flex\" justify=\"center\">\n                    <el-col :span=\"20\">\n                        <el-form ref=\"createService\" :rules=\"createServiceRules\" :model=\"createService\" label-width=\"80px\">\n                            <el-form-item class=\"service-create-form\" label=\"名称\" prop=\"name\">\n                                <el-input v-model=\"createService.name\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"service-create-form\" label=\"命名空间\" prop=\"namespace\">\n                                <el-select v-model=\"createService.namespace\" filterable placeholder=\"请选择\">\n                                    <el-option\n                                    v-for=\"(item, index) in namespaceList\"\n                                    :key=\"index\"\n                                    :label=\"item.metadata.name\"\n                                    :value=\"item.metadata.name\">\n                                    </el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item class=\"service-create-form\" label=\"类型\" prop=\"type\">\n                                <el-select v-model=\"createService.type\" placeholder=\"请选择\">\n                                    <el-option value=\"ClusterIP\" label=\"ClusterIP\"></el-option>\n                                    <el-option value=\"NodePort\" label=\"NodePort\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item class=\"deploy-create-form\" label=\"容器端口\" prop=\"container_port\">\n                                <el-input v-model=\"createService.container_port\" placeholder=\"示例: 80\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"service-create-form\" label=\"Service端口\" prop=\"port\">\n                                <el-input v-model=\"createService.port\" placeholder=\"示例: 80\"></el-input>\n                            </el-form-item>\n                            <el-form-item v-if=\"createService.type == 'NodePort'\" class=\"service-create-form\" label=\"NodePort\" prop=\"node_port\">\n                                <el-input v-model=\"createService.node_port\" placeholder=\"示例: 30001\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"SERVICE-create-form\" label=\"标签\" prop=\"label_str\">\n                                <el-input v-model=\"createService.label_str\" placeholder=\"示例: project=ms,app=gateway\"></el-input>\n                            </el-form-item>\n                        </el-form>\n                    </el-col>\n                </el-row>\n            </template>\n            <template #footer>\n                <el-button @click=\"createServiceDrawer = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"submitForm('createService')\">立即创建</el-button>\n            </template>\n        </el-drawer>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport httpClient from '../../utils/request';\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {getNamespecelist} from \"@/api/namespace\";\nimport {CreateService, DeleteService, GetService, GetServiceDetail, UpdateService} from \"@/api/service\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            appLoading: false,\n            serviceList: [],\n            serviceTotal: 0,\n            getServicesData: {\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            serviceDetail: {},\n            getServiceDetailData: {\n                params: {\n                    name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updateServiceData: {\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delServiceData: {\n                params: {\n                    name: '',\n                    namespace: '',\n                }\n            },\n            //创建\n            fullscreenLoading: false,\n            direction: 'rtl',\n            createServiceDrawer: false,\n            createService: {\n                name: '',\n                namespace: '',\n                type: 'ClusterIP',\n                container_port: '',\n                port: '',\n                node_port: '',\n                label: {},\n                label_str: ''\n            },\n            createServiceData: {\n                params: {}\n            },\n            createServiceRules: {\n                name: [{\n                    required: true,\n                    message: '请填写名称',\n                    trigger: 'change'\n                }],\n                namespace: [{\n                    required: true,\n                    message: '请选择命名空间',\n                    trigger: 'change'\n                }],\n                port: [{\n                    required: true,\n                    message: '请填写Service端口',\n                    trigger: 'change'\n                }],\n                node_port: [{\n                    required: true,\n                    message: '请填写NodePort',\n                    trigger: 'change'\n                }],\n                label_str: [{\n                    required: true,\n                    message: '请填写标签',\n                    trigger: 'change'\n                }],\n                container_port: [{\n                    required: true,\n                    message: '请填写容器端口',\n                    trigger: 'change'\n                }],\n            },\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getServices()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getServices()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        restartTotal(e) {\n            let index, sum = 0\n            let containerStatuses = e.row.status.containerStatuses\n            for ( index in containerStatuses) {\n                sum = sum + containerStatuses[index].restartCount \n            }\n            return sum\n        },\n        getNamespaces() {\n          getNamespecelist().then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getServices() {\n            this.appLoading = true\n            this.getServicesData.params.filter_name = this.searchInput\n            this.getServicesData.params.namespace = this.namespaceValue\n            this.getServicesData.params.page = this.currentPage\n            this.getServicesData.params.limit = this.pagesize\n          GetService(this.getServicesData.params).then(res => {\n                this.serviceList = res.data.items\n                this.serviceTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getServiceDetail(e) {\n            this.getServiceDetailData.params.name = e.row.metadata.name\n            this.getServiceDetailData.params.namespace = this.namespaceValue\n          GetServiceDetail(this.getServiceDetailData.params).then(res => {\n                this.serviceDetail = res.data\n                this.contentYaml = this.transYaml(this.serviceDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updateService() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updateServiceData.params.namespace = this.namespaceValue\n            this.updateServiceData.params.content = content\n          UpdateService(this.updateServiceData.params).then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delService(e) {\n            this.delServiceData.params.name = e.row.metadata.name\n            this.delServiceData.params.namespace = this.namespaceValue\n          DeleteService(this.delServiceData.params).then(res => {\n                this.getServices()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n        createServiceFunc() {\n            let reg = new RegExp(\"(^[A-Za-z]+=[A-Za-z0-9]+).*\")\n            if (!reg.test(this.createService.label_str)) {\n                this.$message.warning({\n                    message: \"标签填写异常，请确认后重新填写\"\n                })\n                return\n            }\n            this.fullscreenLoading = true\n            let label = new Map()\n            let a = (this.createService.label_str).split(\",\")\n            a.forEach(item => {\n                let b = item.split(\"=\")\n                label[b[0]] = b[1]\n            })\n            this.createServiceData.params = this.createService\n            this.createServiceData.params.label = label\n            this.createServiceData.params.container_port = parseInt(this.createService.container_port)\n            this.createServiceData.params.port = parseInt(this.createService.port)\n            this.createServiceData.params.node_port = parseInt(this.createService.node_port)\n          CreateService(this.createServiceData.params).then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n                this.getServices()\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.resetForm('createService')\n            this.fullscreenLoading = false\n            this.createServiceDrawer = false\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields()\n        },\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.createServiceFunc()\n                } else {\n                    return false;\n                }\n            })\n        }\n    },\n    watch: {\n        namespaceValue: {\n            handler() {\n                localStorage.setItem('namespace', this.namespaceValue)\n                this.currentPage = 1\n                this.getServices()\n            }\n        },\n    },\n    beforeMount() {\n        if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n            this.namespaceValue = localStorage.getItem('namespace')\n        }\n        this.getNamespaces()\n        this.getServices()\n    }\n}\n</script>\n\n\n<style scoped>\n    .service-head-card,.service-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .service-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .service-body-servicename {\n        color: #4795EE;\n    }\n    .service-body-servicename:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}