{"ast":null,"code":"import common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport { getNamespecelist } from \"@/api/namespace\";\nimport { CreateIngress, DeleteIngress, GetIngress, GetIngressDetail, UpdateIngress } from \"@/api/ingress\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      namespaceListUrl: common.k8sNamespaceList,\n      appLoading: false,\n      ingressList: [],\n      ingressTotal: 0,\n      getIngresssData: {\n        url: common.k8sIngressList,\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: ''\n        }\n      },\n      //详情\n      ingressDetail: {},\n      getIngressDetailData: {\n        url: common.k8sIngressDetail,\n        params: {\n          ingress_name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateIngressData: {\n        url: common.k8sIngressUpdate,\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delIngressData: {\n        url: common.k8sIngressDel,\n        params: {\n          ingress_name: '',\n          namespace: ''\n        }\n      },\n      //创建\n      fullscreenLoading: false,\n      direction: 'rtl',\n      createIngressDrawer: false,\n      createIngress: {\n        name: '',\n        namespace: '',\n        label_str: '',\n        host: '',\n        path: '',\n        path_type: '',\n        service_name: '',\n        service_port: '',\n        hosts: {}\n      },\n      createIngressData: {\n        params: {}\n      },\n      createIngressRules: {\n        name: [{\n          required: true,\n          message: '请填写名称',\n          trigger: 'change'\n        }],\n        namespace: [{\n          required: true,\n          message: '请选择命名空间',\n          trigger: 'change'\n        }],\n        host: [{\n          required: true,\n          message: '请填写域名',\n          trigger: 'change'\n        }],\n        path: [{\n          required: true,\n          message: '请填写路径',\n          trigger: 'change'\n        }],\n        service_port: [{\n          required: true,\n          message: '请填写Service端口',\n          trigger: 'change'\n        }],\n        label_str: [{\n          required: true,\n          message: '请填写标签',\n          trigger: 'change'\n        }],\n        path_type: [{\n          required: true,\n          message: '请选择匹配类型',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n\n    onChange(val) {\n      this.contentYaml = val;\n    },\n\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getIngresss();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getIngresss();\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(() => {\n        done();\n      }).catch(() => {});\n    },\n\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + '...' : value;\n    },\n\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ');\n      return date;\n    },\n\n    restartTotal(e) {\n      let index,\n          sum = 0;\n      let containerStatuses = e.row.status.containerStatuses;\n\n      for (index in containerStatuses) {\n        sum = sum + containerStatuses[index].restartCount;\n      }\n\n      return sum;\n    },\n\n    getNamespaces() {\n      getNamespecelist().then(res => {\n        this.namespaceList = res.data.items;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    getIngresss() {\n      this.appLoading = true;\n      this.getIngresssData.params.filter_name = this.searchInput;\n      this.getIngresssData.params.namespace = this.namespaceValue;\n      this.getIngresssData.params.page = this.currentPage;\n      this.getIngresssData.params.limit = this.pagesize;\n      GetIngress(this.getIngresssData.params).then(res => {\n        this.ingressList = res.data.items;\n        this.ingressTotal = res.data.total;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.appLoading = false;\n    },\n\n    getIngressDetail(e) {\n      this.getIngressDetailData.params.ingress_name = e.row.metadata.name;\n      this.getIngressDetailData.params.namespace = this.namespaceValue;\n      GetIngressDetail(this.getIngressDetailData.params).then(res => {\n        this.ingressDetail = res.data;\n        this.contentYaml = this.transYaml(this.ingressDetail);\n        this.yamlDialog = true;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    updateIngress() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updateIngressData.params.namespace = this.namespaceValue;\n      this.updateIngressData.params.content = content;\n      UpdateIngress(this.updateIngressData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.yamlDialog = false;\n    },\n\n    delIngress(e) {\n      this.delIngressData.params.ingress_name = e.row.metadata.name;\n      this.delIngressData.params.namespace = this.namespaceValue;\n      DeleteIngress(this.delIngressData.params).then(res => {\n        this.getIngresss();\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？';\n      this.$confirm(this.confirmContent, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        fn(obj);\n      }).catch(() => {\n        this.$message.info({\n          message: '已取消操作'\n        });\n      });\n    },\n\n    createIngressFunc() {\n      //处理标签\n      let reg = new RegExp(\"(^[A-Za-z]+=[A-Za-z0-9]+).*\");\n\n      if (!reg.test(this.createIngress.label_str)) {\n        this.$message.warning({\n          message: \"标签填写异常，请确认后重新填写\"\n        });\n        return;\n      }\n\n      this.fullscreenLoading = true;\n      let label = new Map();\n      let a = this.createIngress.label_str.split(\",\");\n      a.forEach(item => {\n        let b = item.split(\"=\");\n        label[b[0]] = b[1];\n      }); //处理Hosts\n\n      let hosts = new Map();\n      let httpPaths = [];\n      let httpPath = {\n        path: this.createIngress.path,\n        path_type: this.createIngress.path_type,\n        service_name: this.createIngress.name,\n        service_port: parseInt(this.createIngress.service_port)\n      };\n      httpPaths.push(httpPath);\n      hosts[this.createIngress.host] = httpPaths;\n      this.createIngressData.params = this.createIngress;\n      this.createIngressData.params.label = label;\n      this.createIngressData.params.hosts = hosts;\n      CreateIngress(this.createIngressData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n        this.getIngresss();\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.resetForm('createIngress');\n      this.fullscreenLoading = false;\n      this.createIngressDrawer = false;\n    },\n\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.createIngressFunc();\n        } else {\n          return false;\n        }\n      });\n    }\n\n  },\n  watch: {\n    namespaceValue: {\n      handler() {\n        localStorage.setItem('namespace', this.namespaceValue);\n        this.currentPage = 1;\n        this.getIngresss();\n      }\n\n    }\n  },\n\n  beforeMount() {\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace');\n    }\n\n    this.getNamespaces();\n    this.getIngresss();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["common","yaml2obj","json2yaml","getNamespecelist","CreateIngress","DeleteIngress","GetIngress","GetIngressDetail","UpdateIngress","data","cmOptions","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","namespaceListUrl","k8sNamespaceList","appLoading","ingressList","ingressTotal","getIngresssData","url","k8sIngressList","params","filter_name","namespace","page","limit","ingressDetail","getIngressDetailData","k8sIngressDetail","ingress_name","yamlDialog","updateIngressData","k8sIngressUpdate","content","delIngressData","k8sIngressDel","fullscreenLoading","direction","createIngressDrawer","createIngress","name","label_str","host","path","path_type","service_name","service_port","hosts","createIngressData","createIngressRules","required","message","trigger","methods","transYaml","stringify","transObj","load","onChange","val","handleSizeChange","size","getIngresss","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","value","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","restartTotal","e","index","sum","containerStatuses","row","status","restartCount","getNamespaces","res","items","$message","error","msg","total","getIngressDetail","metadata","updateIngress","JSON","success","delIngress","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","createIngressFunc","reg","RegExp","test","warning","label","Map","a","split","forEach","item","b","httpPaths","httpPath","parseInt","push","resetForm","formName","$refs","resetFields","submitForm","validate","valid","watch","handler","localStorage","setItem","beforeMount","getItem","undefined"],"sourceRoot":"","sources":["/Users/allen/k8s-platform-fe/src/views/ingress/Ingress.vue"],"sourcesContent":["<template>\n    <div class=\"ingress\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"ingress-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <span>命名空间: </span>\n                                    <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                                        <el-option\n                                        v-for=\"(item, index) in namespaceList\"\n                                        :key=\"index\"\n                                        :label=\"item.metadata.name\"\n                                        :value=\"item.metadata.name\">\n                                        </el-option>\n                                    </el-select>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"16\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getIngresss()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"ingress-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" @click=\"createIngressDrawer = true\" v-loading.fullscreen.lock=\"fullscreenLoading\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"ingress-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getIngresss()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"ingress-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"ingressList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"10\"></el-table-column>\n                            <el-table-column align=left label=\"Ingress名\">\n                                <template v-slot=\"scope\">\n                                    <a class=\"ingress-body-ingressname\">{{ scope.row.metadata.name }}</a>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"标签\" min-width='120'>\n                                <template v-slot=\"scope\">\n                                    <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                                        <el-popover\n                                            placement=\"right\"\n                                            :width=\"200\"\n                                            trigger=\"hover\"\n                                            :content=\"key + ':' + val\">\n                                            <template #reference>\n                                                <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                                            </template>\n                                        </el-popover>\n                                    </div>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"Host\" min-width='120'>\n                                <template v-slot=\"scope\">\n                                    <div v-for=\"(item, index) in scope.row.spec.rules\" :key=\"index\">\n                                        <el-popover\n                                            placement=\"right\"\n                                            :width=\"200\"\n                                            trigger=\"hover\"\n                                            :content=\"item.host\">\n                                            <template #reference>\n                                                <el-tag style=\"margin-bottom: 5px\" type=\"danger\">{{ ellipsis(item.host) }}</el-tag>\n                                            </template>\n                                        </el-popover>\n                                    </div>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"Path\">\n                                <template v-slot=\"scope\">\n                                    <div v-for=\"(item, index) in scope.row.spec.rules\" :key=\"index\">\n                                        <el-popover\n                                            placement=\"right\"\n                                            :width=\"100\"\n                                            trigger=\"hover\"\n                                            :content=\"item.http.paths[0].path\">\n                                            <template #reference>\n                                                <el-tag style=\"margin-bottom: 5px\" type=\"danger\">{{ item.http.paths[0].path }}</el-tag>\n                                            </template>\n                                        </el-popover>\n                                    </div>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"EXTERNAL-IP\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.status.loadBalancer.ingress ? scope.row.status.loadBalancer.ingress[0].ip : '' }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"TLS\">\n                                <template v-slot=\"scope\">\n                                    <span>{{ scope.row.spec.tls ? 'YES' : '' }} </span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" width=\"200\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getIngressDetail(scope)\">YAML</el-button>\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delIngress)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"ingress-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"ingressTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updateIngress()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n        <el-drawer\n            v-model=\"createIngressDrawer\"\n            :direction=\"direction\"\n            :before-close=\"handleClose\">\n            <template #title>\n                <h4>创建Ingress</h4>\n            </template>\n            <template #default>\n                <el-row type=\"flex\" justify=\"center\">\n                    <el-col :span=\"20\">\n                        <el-form ref=\"createIngress\" :rules=\"createIngressRules\" :model=\"createIngress\" label-width=\"80px\">\n                            <el-form-item class=\"ingress-create-form\" label=\"名称\" prop=\"name\">\n                                <el-input v-model=\"createIngress.name\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"ingress-create-form\" label=\"命名空间\" prop=\"namespace\">\n                                <el-select v-model=\"createIngress.namespace\" filterable placeholder=\"请选择\">\n                                    <el-option\n                                    v-for=\"(item, index) in namespaceList\"\n                                    :key=\"index\"\n                                    :label=\"item.metadata.name\"\n                                    :value=\"item.metadata.name\">\n                                    </el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item class=\"SERVICE-create-form\" label=\"标签\" prop=\"label_str\">\n                                <el-input v-model=\"createIngress.label_str\" placeholder=\"示例: project=ms,app=gateway\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"deploy-create-form\" label=\"域名\" prop=\"host\">\n                                <el-input v-model=\"createIngress.host\" placeholder=\"示例: www.example.com\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"ingress-create-form\" label=\"Path\" prop=\"path\">\n                                <el-input v-model=\"createIngress.path\" placeholder=\"示例: /abc\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"deploy-create-form\" label=\"匹配类型\" prop=\"path_type\">\n                                <el-select v-model=\"createIngress.path_type\" placeholder=\"请选择\">\n                                    <el-option value=\"Prefix\" label=\"Prefix\"></el-option>\n                                    <el-option value=\"Exact\" label=\"Exact\"></el-option>\n                                    <el-option value=\"ImplementationSpecific\" label=\"ImplementationSpecific\"></el-option>\n                                </el-select>\n                            </el-form-item>\n                            <el-form-item class=\"ingress-create-form\" label=\"Service名\" prop=\"service_name\">\n                                <el-input disabled v-model=\"createIngress.name\"></el-input>\n                            </el-form-item>\n                            <el-form-item class=\"ingress-create-form\" label=\"Service端口\" prop=\"service_port\">\n                                <el-input v-model=\"createIngress.service_port\" placeholder=\"示例: 80\"></el-input>\n                            </el-form-item>\n                        </el-form>\n                    </el-col>\n                </el-row>\n            </template>\n            <template #footer>\n                <el-button @click=\"createIngressDrawer = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"submitForm('createIngress')\">立即创建</el-button>\n            </template>\n        </el-drawer>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {getNamespecelist} from \"@/api/namespace\";\nimport {CreateIngress, DeleteIngress, GetIngress, GetIngressDetail, UpdateIngress} from \"@/api/ingress\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            namespaceListUrl: common.k8sNamespaceList,\n            appLoading: false,\n            ingressList: [],\n            ingressTotal: 0,\n            getIngresssData: {\n                url: common.k8sIngressList,\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            ingressDetail: {},\n            getIngressDetailData: {\n                url: common.k8sIngressDetail,\n                params: {\n                    ingress_name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updateIngressData: {\n                url: common.k8sIngressUpdate,\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delIngressData: {\n                url: common.k8sIngressDel,\n                params: {\n                    ingress_name: '',\n                    namespace: '',\n                }\n            },\n            //创建\n            fullscreenLoading: false,\n            direction: 'rtl',\n            createIngressDrawer: false,\n            createIngress: {\n                name: '',\n                namespace: '',\n                label_str: '',\n                host: '',\n                path: '',\n                path_type: '',\n                service_name: '',\n                service_port: '',\n                hosts: {}\n            },\n            createIngressData: {\n                params: {}\n            },\n            createIngressRules: {\n                name: [{\n                    required: true,\n                    message: '请填写名称',\n                    trigger: 'change'\n                }],\n                namespace: [{\n                    required: true,\n                    message: '请选择命名空间',\n                    trigger: 'change'\n                }],\n                host: [{\n                    required: true,\n                    message: '请填写域名',\n                    trigger: 'change'\n                }],\n                path: [{\n                    required: true,\n                    message: '请填写路径',\n                    trigger: 'change'\n                }],\n                service_port: [{\n                    required: true,\n                    message: '请填写Service端口',\n                    trigger: 'change'\n                }],\n                label_str: [{\n                    required: true,\n                    message: '请填写标签',\n                    trigger: 'change'\n                }],\n                path_type: [{\n                    required: true,\n                    message: '请选择匹配类型',\n                    trigger: 'change'\n                }],\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getIngresss()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getIngresss()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        restartTotal(e) {\n            let index, sum = 0\n            let containerStatuses = e.row.status.containerStatuses\n            for ( index in containerStatuses) {\n                sum = sum + containerStatuses[index].restartCount \n            }\n            return sum\n        },\n        getNamespaces() {\n          getNamespecelist().then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getIngresss() {\n            this.appLoading = true\n            this.getIngresssData.params.filter_name = this.searchInput\n            this.getIngresssData.params.namespace = this.namespaceValue\n            this.getIngresssData.params.page = this.currentPage\n            this.getIngresssData.params.limit = this.pagesize\n          GetIngress(this.getIngresssData.params).then(res => {\n                this.ingressList = res.data.items\n                this.ingressTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getIngressDetail(e) {\n            this.getIngressDetailData.params.ingress_name = e.row.metadata.name\n            this.getIngressDetailData.params.namespace = this.namespaceValue\n          GetIngressDetail(this.getIngressDetailData.params).then(res => {\n                this.ingressDetail = res.data\n                this.contentYaml = this.transYaml(this.ingressDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updateIngress() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updateIngressData.params.namespace = this.namespaceValue\n            this.updateIngressData.params.content = content\n          UpdateIngress(this.updateIngressData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delIngress(e) {\n            this.delIngressData.params.ingress_name = e.row.metadata.name\n            this.delIngressData.params.namespace = this.namespaceValue\n          DeleteIngress(this.delIngressData.params)\n            .then(res => {\n                this.getIngresss()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n        createIngressFunc() {\n            //处理标签\n            let reg = new RegExp(\"(^[A-Za-z]+=[A-Za-z0-9]+).*\")\n            if (!reg.test(this.createIngress.label_str)) {\n                this.$message.warning({\n                    message: \"标签填写异常，请确认后重新填写\"\n                })\n                return\n            }\n            this.fullscreenLoading = true\n            let label = new Map()\n            let a = (this.createIngress.label_str).split(\",\")\n            a.forEach(item => {\n                let b = item.split(\"=\")\n                label[b[0]] = b[1]\n            })\n            //处理Hosts\n            let hosts = new Map()\n            let httpPaths = []\n            let httpPath = {\n                path: this.createIngress.path,\n                path_type: this.createIngress.path_type,\n                service_name: this.createIngress.name,\n                service_port: parseInt(this.createIngress.service_port)\n            }\n            httpPaths.push(httpPath)\n            hosts[this.createIngress.host] = httpPaths\n\n            this.createIngressData.params = this.createIngress\n            this.createIngressData.params.label = label\n            this.createIngressData.params.hosts = hosts\n          CreateIngress(this.createIngressData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n                this.getIngresss()\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.resetForm('createIngress')\n            this.fullscreenLoading = false\n            this.createIngressDrawer = false\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields()\n        },\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    this.createIngressFunc()\n                } else {\n                    return false;\n                }\n            })\n        }\n    },\n    watch: {\n        namespaceValue: {\n            handler() {\n                localStorage.setItem('namespace', this.namespaceValue)\n                this.currentPage = 1\n                this.getIngresss()\n            }\n        },\n    },\n    beforeMount() {\n        if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n            this.namespaceValue = localStorage.getItem('namespace')\n        }\n        this.getNamespaces()\n        this.getIngresss()\n    }\n}\n</script>\n\n\n<style scoped>\n    .ingress-head-card,.ingress-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .ingress-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .ingress-body-ingressname {\n        color: #4795EE;\n    }\n    .ingress-body-ingressname:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}