{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-27a74b45\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"deploy\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"命名空间: \", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"刷新\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"创建\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"搜索\");\n\nconst _hoisted_6 = {\n  class: \"deploy-body-deployname\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"YAML\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"扩缩\");\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"重启\");\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"删除\");\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"创建Deployment\", -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\"立即创建\");\n\nconst _hoisted_14 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createTextVNode(\"取 消\");\n\nconst _hoisted_16 = /*#__PURE__*/_createTextVNode(\"更 新\");\n\nconst _hoisted_17 = {\n  style: {\n    \"text-align\": \"center\"\n  }\n};\n\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"实例数: \", -1\n/* HOISTED */\n));\n\nconst _hoisted_19 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_20 = /*#__PURE__*/_createTextVNode(\"取 消\");\n\nconst _hoisted_21 = /*#__PURE__*/_createTextVNode(\"更 新\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n\n  const _component_el_popover = _resolveComponent(\"el-popover\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n\n  const _component_WarningFilled = _resolveComponent(\"WarningFilled\");\n\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n\n  const _component_codemirror = _resolveComponent(\"codemirror\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 头部1 \"), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createCommentVNode(\" 包一层卡片 \"), _createVNode(_component_el_card, {\n        class: \"deploy-head-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '10px'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createCommentVNode(\" 命名空间的下拉框 \"), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_hoisted_2, _createCommentVNode(\" 下拉框 \"), _createCommentVNode(\" filterable：带搜索功能 \"), _createCommentVNode(\" placeholder 默认提示 \"), _createCommentVNode(\" label 显示内容 \"), _createCommentVNode(\" value 绑定到v-model的值中 \"), _createVNode(_component_el_select, {\n              modelValue: $data.namespaceValue,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.namespaceValue = $event),\n              filterable: \"\",\n              placeholder: \"请选择\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.namespaceList, (item, index) => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: index,\n                  label: item.metadata.name,\n                  value: item.metadata.name\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])])]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 刷新按钮 \"), _createVNode(_component_el_col, {\n            span: 2,\n            offset: 16\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createCommentVNode(\" 每次刷新，都重新调一次list接口，刷新表格中的数据 \"), _createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Refresh\",\n              plain: \"\",\n              onClick: _cache[1] || (_cache[1] = $event => $options.getDeployments())\n            }, {\n              default: _withCtx(() => [_hoisted_3]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" 头部2 \"), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createCommentVNode(\" 包一层卡片 \"), _createVNode(_component_el_card, {\n        class: \"deploy-head-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '10px'\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createCommentVNode(\" 创建按钮 \"), _createVNode(_component_el_col, {\n            span: 2\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createCommentVNode(\" 点击后打开抽屉，填入创建deployment需要的数据 \"), _withDirectives((_openBlock(), _createBlock(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\",\n              onClick: _cache[2] || (_cache[2] = $event => $data.createDeploymentDrawer = true)\n            }, {\n              default: _withCtx(() => [_hoisted_4]),\n              _: 1\n              /* STABLE */\n\n            })), [[_directive_loading, $data.fullscreenLoading, void 0, {\n              fullscreen: true,\n              lock: true\n            }]])])]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 搜索框和搜索按钮 \"), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_input, {\n              class: \"deploy-head-search\",\n              clearable: \"\",\n              placeholder: \"请输入\",\n              modelValue: $data.searchInput,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.searchInput = $event)\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"]), _createVNode(_component_el_button, {\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Search\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: _cache[4] || (_cache[4] = $event => $options.getDeployments())\n            }, {\n              default: _withCtx(() => [_hoisted_5]),\n              _: 1\n              /* STABLE */\n\n            })])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" 数据表格 \"), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createCommentVNode(\" 包一层卡片 \"), _createVNode(_component_el_card, {\n        class: \"deploy-body-card\",\n        shadow: \"never\",\n        \"body-style\": {\n          padding: '5px'\n        }\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 数据表格 \"), _createCommentVNode(\" v-loading用于加载时的loading动画 \"), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          style: {\n            \"width\": \"100%\",\n            \"font-size\": \"12px\",\n            \"margin-bottom\": \"10px\"\n          },\n          data: $data.deploymentList\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 最左侧留出20px的宽度，更加没关 \"), _createVNode(_component_el_table_column, {\n            width: \"20\"\n          }), _createCommentVNode(\" deployment名字 \"), _createVNode(_component_el_table_column, {\n            align: \"left\",\n            label: \"Deployment名\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"a\", _hoisted_6, _toDisplayString(scope.row.metadata.name), 1\n            /* TEXT */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 标签 \"), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"标签\"\n          }, {\n            default: _withCtx(scope => [_createCommentVNode(\" for循环，每个label只显示固定长度，鼠标悬停后气泡弹出框显示完整长度 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(scope.row.metadata.labels, (val, key) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: key\n              }, [_createCommentVNode(\" 气泡弹出框 \"), _createCommentVNode(\" placement 弹出位置 \"), _createCommentVNode(\" trigger 触发条件 \"), _createCommentVNode(\" content 弹出框内容 \"), _createVNode(_component_el_popover, {\n                placement: \"right\",\n                width: 200,\n                trigger: \"hover\",\n                content: key + ':' + val\n              }, {\n                reference: _withCtx(() => [_createCommentVNode(\" ellipsis方法用于剪裁字符串 \"), _createVNode(_component_el_tag, {\n                  style: {\n                    \"margin-bottom\": \"5px\"\n                  },\n                  type: \"warning\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString($options.ellipsis(key + \":\" + val)), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1032\n              /* PROPS, DYNAMIC_SLOTS */\n              , [\"content\"])]);\n            }), 128\n            /* KEYED_FRAGMENT */\n            ))]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 容器组 \"), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"容器组\"\n          }, {\n            default: _withCtx(scope => [_createElementVNode(\"span\", null, _toDisplayString(scope.row.status.availableReplicas > 0 ? scope.row.status.availableReplicas : 0) + \" / \" + _toDisplayString(scope.row.spec.replicas > 0 ? scope.row.spec.replicas : 0), 1\n            /* TEXT */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 创建时间 \"), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            \"min-width\": \"100\",\n            label: \"创建时间\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: \"info\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($options.timeTrans(scope.row.metadata.creationTimestamp)), 1\n              /* TEXT */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            )]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 容器镜像 \"), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"镜像\"\n          }, {\n            default: _withCtx(scope => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(scope.row.spec.template.spec.containers, (val, key) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: key\n              }, [_createVNode(_component_el_popover, {\n                placement: \"right\",\n                width: 200,\n                trigger: \"hover\",\n                content: val.image\n              }, {\n                reference: _withCtx(() => [_createVNode(_component_el_tag, {\n                  style: {\n                    \"margin-bottom\": \"5px\"\n                  }\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString($options.ellipsis(val.image.split('/')[2] == undefined ? val.image : val.image.split('/')[2])), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1032\n              /* PROPS, DYNAMIC_SLOTS */\n              , [\"content\"])]);\n            }), 128\n            /* KEYED_FRAGMENT */\n            ))]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 操作列，放按钮 \"), _createVNode(_component_el_table_column, {\n            align: \"center\",\n            label: \"操作\",\n            width: \"400\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Edit\",\n              type: \"primary\",\n              plain: \"\",\n              onClick: $event => $options.getDeploymentDetail(scope)\n            }, {\n              default: _withCtx(() => [_hoisted_7]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Plus\",\n              type: \"primary\",\n              onClick: $event => $options.handleScale(scope)\n            }, {\n              default: _withCtx(() => [_hoisted_8]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"RefreshLeft\",\n              type: \"primary\",\n              onClick: $event => $options.handleConfirm(scope, '重启', $options.restartDeployment)\n            }, {\n              default: _withCtx(() => [_hoisted_9]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"]), _createVNode(_component_el_button, {\n              size: \"small\",\n              style: {\n                \"border-radius\": \"2px\"\n              },\n              icon: \"Delete\",\n              type: \"danger\",\n              onClick: $event => $options.handleConfirm(scope, '删除', $options.delDeployment)\n            }, {\n              default: _withCtx(() => [_hoisted_10]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"onClick\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"data\"])), [[_directive_loading, $data.appLoading]]), _createCommentVNode(\" 分页配置 \"), _createCommentVNode(\" background 背景色灰 \"), _createCommentVNode(\" size-change 单页大小改变后触发 \"), _createCommentVNode(\" current-change 页数改变后触发 \"), _createCommentVNode(\" current-page 当前页 \"), _createCommentVNode(\" page-size 单页大小 \"), _createCommentVNode(\" layout 分页器支持的功能 \"), _createCommentVNode(\" total 数据总条数 \"), _createVNode(_component_el_pagination, {\n          class: \"deploy-body-pagination\",\n          background: \"\",\n          onSizeChange: $options.handleSizeChange,\n          onCurrentChange: $options.handleCurrentChange,\n          \"current-page\": $data.currentPage,\n          \"page-sizes\": $data.pagesizeList,\n          \"page-size\": $data.pagesize,\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          total: $data.deploymentTotal\n        }, null, 8\n        /* PROPS */\n        , [\"onSizeChange\", \"onCurrentChange\", \"current-page\", \"page-sizes\", \"page-size\", \"total\"])]),\n        _: 1\n        /* STABLE */\n\n      })])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }), _createCommentVNode(\" 抽屉：创建Deployment的表单 \"), _createCommentVNode(\" v-model 值是bool，用于显示与隐藏 \"), _createCommentVNode(\" direction 显示的位置 \"), _createCommentVNode(\" before-close 关闭时触发，点击关闭或者点击空白都会触发 \"), _createVNode(_component_el_drawer, {\n    modelValue: $data.createDeploymentDrawer,\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.createDeploymentDrawer = $event),\n    direction: $data.direction,\n    \"before-close\": $options.handleClose\n  }, {\n    title: _withCtx(() => [_hoisted_11]),\n    default: _withCtx(() => [_createCommentVNode(\" flex布局,居中 \"), _createVNode(_component_el_row, {\n      type: \"flex\",\n      justify: \"center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 20\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" ref绑定控件后，js中才能用this.$ref获取该控件 \"), _createCommentVNode(\" rules 定义form表单校验规则 \"), _createVNode(_component_el_form, {\n          ref: \"createDeployment\",\n          rules: $data.createDeploymentRules,\n          model: $data.createDeployment,\n          \"label-width\": \"80px\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" prop用于rules中的校验规则的key \"), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"名称\",\n            prop: \"name\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.createDeployment.name,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.createDeployment.name = $event)\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"命名空间\",\n            prop: \"namespace\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $data.createDeployment.namespace,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.createDeployment.namespace = $event),\n              filterable: \"\",\n              placeholder: \"请选择\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.namespaceList, (item, index) => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: index,\n                  label: item.metadata.name,\n                  value: item.metadata.name\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 数字输入框，最小为1，最大为10 \"), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"副本数\",\n            prop: \"replicas\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input_number, {\n              modelValue: $data.createDeployment.replicas,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.createDeployment.replicas = $event),\n              min: 1,\n              max: 10\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"]), _createCommentVNode(\" 气泡弹出框用于提醒上限 \"), _createVNode(_component_el_popover, {\n              placement: \"top\",\n              width: 100,\n              trigger: \"hover\",\n              content: \"申请副本数上限为10个\"\n            }, {\n              reference: _withCtx(() => [_createVNode(_component_el_icon, {\n                style: {\n                  \"width\": \"2em\",\n                  \"font-size\": \"18px\",\n                  \"color\": \"#4795EE\"\n                }\n              }, {\n                default: _withCtx(() => [_createVNode(_component_WarningFilled)]),\n                _: 1\n                /* STABLE */\n\n              })]),\n              _: 1\n              /* STABLE */\n\n            })]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"镜像\",\n            prop: \"image\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.createDeployment.image,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.createDeployment.image = $event)\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"标签\",\n            prop: \"label_str\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.createDeployment.label_str,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.createDeployment.label_str = $event),\n              placeholder: \"示例: project=ms,app=gateway\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createCommentVNode(\" 下拉框，用于规格的选择，之后用/分割，得到cpu和内存 \"), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"资源配额\",\n            prop: \"resource\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $data.createDeployment.resource,\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.createDeployment.resource = $event),\n              placeholder: \"请选择\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_option, {\n                value: \"0.5/1\",\n                label: \"0.5C1G\"\n              }), _createVNode(_component_el_option, {\n                value: \"1/2\",\n                label: \"1C2G\"\n              }), _createVNode(_component_el_option, {\n                value: \"2/4\",\n                label: \"2C4G\"\n              }), _createVNode(_component_el_option, {\n                value: \"4/8\",\n                label: \"4C8G\"\n              })]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"容器端口\",\n            prop: \"container_port\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.createDeployment.container_port,\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.createDeployment.container_port = $event),\n              placeholder: \"示例: 80\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"健康检查\",\n            prop: \"health\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_switch, {\n              modelValue: $data.createDeployment.health_check,\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.createDeployment.health_check = $event)\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            class: \"deploy-create-form\",\n            label: \"检查路径\",\n            prop: \"healthPath\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $data.createDeployment.health_path,\n              \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.createDeployment.health_path = $event),\n              placeholder: \"示例: /health\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"rules\", \"model\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    footer: _withCtx(() => [_createCommentVNode(\" 点击后赋值false，隐藏抽屉 \"), _createVNode(_component_el_button, {\n      onClick: _cache[14] || (_cache[14] = $event => $data.createDeploymentDrawer = false)\n    }, {\n      default: _withCtx(() => [_hoisted_12]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[15] || (_cache[15] = $event => $options.submitForm('createDeployment'))\n    }, {\n      default: _withCtx(() => [_hoisted_13]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"direction\", \"before-close\"]), _createCommentVNode(\" 展示YAML信息的弹框 \"), _createVNode(_component_el_dialog, {\n    title: \"YAML信息\",\n    modelValue: $data.yamlDialog,\n    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $data.yamlDialog = $event),\n    width: \"45%\",\n    top: \"2%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_14, [_createVNode(_component_el_button, {\n      onClick: _cache[18] || (_cache[18] = $event => this.yamlDialog = false)\n    }, {\n      default: _withCtx(() => [_hoisted_15]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[19] || (_cache[19] = $event => $options.updateDeployment())\n    }, {\n      default: _withCtx(() => [_hoisted_16]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_codemirror, {\n      value: $data.contentYaml,\n      \"onUpdate:value\": _cache[17] || (_cache[17] = $event => $data.contentYaml = $event),\n      border: \"\",\n      options: $data.cmOptions,\n      style: {\n        height: '500px'\n      },\n      autofocus: true,\n      \"tab-size\": 2,\n      onChange: $options.onChange\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"options\", \"onChange\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createCommentVNode(\" 调整副本数的弹框 \"), _createVNode(_component_el_dialog, {\n    title: \"副本数调整\",\n    modelValue: $data.scaleDialog,\n    \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => $data.scaleDialog = $event),\n    width: \"25%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_19, [_createVNode(_component_el_button, {\n      onClick: _cache[22] || (_cache[22] = $event => $data.scaleDialog = false)\n    }, {\n      default: _withCtx(() => [_hoisted_20]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[23] || (_cache[23] = $event => $options.scaleDeployment())\n    }, {\n      default: _withCtx(() => [_hoisted_21]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _createVNode(_component_el_input_number, {\n      step: 1,\n      modelValue: $data.scaleNum,\n      \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $data.scaleNum = $event),\n      min: 0,\n      max: 30,\n      label: \"描述文字\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\"])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","style","_createElementBlock","_createVNode","_component_el_row","_createCommentVNode","_component_el_col","span","_component_el_card","shadow","padding","_hoisted_2","_component_el_select","$data","$event","filterable","placeholder","_Fragment","_renderList","item","index","_createBlock","_component_el_option","key","label","metadata","name","value","offset","_component_el_button","icon","plain","onClick","$options","type","_component_el_input","clearable","_component_el_table","data","_component_el_table_column","width","align","scope","_toDisplayString","row","labels","val","_component_el_popover","placement","trigger","content","reference","_component_el_tag","status","availableReplicas","spec","replicas","creationTimestamp","template","containers","image","split","undefined","size","_component_el_pagination","background","onSizeChange","onCurrentChange","layout","total","_component_el_drawer","direction","title","_hoisted_11","default","justify","_component_el_form","ref","rules","model","_component_el_form_item","prop","namespace","_component_el_input_number","min","max","_component_el_icon","_component_WarningFilled","label_str","resource","container_port","_component_el_switch","health_check","health_path","footer","_component_el_dialog","top","yamlDialog","_component_codemirror","border","options","height","autofocus","onChange","_hoisted_18","step"],"sourceRoot":"","sources":["/Users/allen/kubemanage-web/src/views/deployment/Deployment.vue"],"sourcesContent":["<template>\n  <div class=\"deploy\">\n    <el-row>\n      <!-- 头部1 -->\n      <el-col :span=\"24\">\n        <div>\n          <!-- 包一层卡片 -->\n          <el-card class=\"deploy-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n            <el-row>\n              <!-- 命名空间的下拉框 -->\n              <el-col :span=\"6\">\n                <div>\n                  <span>命名空间: </span>\n                  <!-- 下拉框 -->\n                  <!-- filterable：带搜索功能 -->\n                  <!-- placeholder 默认提示 -->\n                  <!-- label 显示内容 -->\n                  <!-- value 绑定到v-model的值中 -->\n                  <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                    <el-option\n                        v-for=\"(item, index) in namespaceList\"\n                        :key=\"index\"\n                        :label=\"item.metadata.name\"\n                        :value=\"item.metadata.name\">\n                    </el-option>\n                  </el-select>\n                </div>\n              </el-col>\n              <!-- 刷新按钮 -->\n              <el-col :span=\"2\" :offset=\"16\">\n                <div>\n                  <!-- 每次刷新，都重新调一次list接口，刷新表格中的数据 -->\n                  <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getDeployments()\">刷新</el-button>\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <!-- 头部2 -->\n      <el-col :span=\"24\">\n        <div>\n          <!-- 包一层卡片 -->\n          <el-card class=\"deploy-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n            <el-row>\n              <!-- 创建按钮 -->\n              <el-col :span=\"2\">\n                <div>\n                  <!-- 点击后打开抽屉，填入创建deployment需要的数据 -->\n                  <el-button style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" @click=\"createDeploymentDrawer = true\" v-loading.fullscreen.lock=\"fullscreenLoading\">创建</el-button>\n                </div>\n              </el-col>\n              <!-- 搜索框和搜索按钮 -->\n              <el-col :span=\"6\">\n                <div>\n                  <el-input class=\"deploy-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                  <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getDeployments()\">搜索</el-button>\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <!-- 数据表格 -->\n      <el-col :span=\"24\">\n        <div>\n          <!-- 包一层卡片 -->\n          <el-card class=\"deploy-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n            <!-- 数据表格 -->\n            <!-- v-loading用于加载时的loading动画 -->\n            <el-table\n                style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                :data=\"deploymentList\"\n                v-loading=\"appLoading\">\n              <!-- 最左侧留出20px的宽度，更加没关 -->\n              <el-table-column width=\"20\"></el-table-column>\n              <!-- deployment名字 -->\n              <el-table-column align=left label=\"Deployment名\">\n                <!-- 插槽，scope.row获取当前行的数据 -->\n                <template v-slot=\"scope\">\n                  <a class=\"deploy-body-deployname\">{{ scope.row.metadata.name }}</a>\n                </template>\n              </el-table-column>\n              <!-- 标签 -->\n              <el-table-column align=center label=\"标签\">\n                <template v-slot=\"scope\">\n                  <!-- for循环，每个label只显示固定长度，鼠标悬停后气泡弹出框显示完整长度 -->\n                  <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                    <!-- 气泡弹出框 -->\n                    <!-- placement 弹出位置 -->\n                    <!-- trigger 触发条件 -->\n                    <!-- content 弹出框内容 -->\n                    <el-popover\n                        placement=\"right\"\n                        :width=\"200\"\n                        trigger=\"hover\"\n                        :content=\"key + ':' + val\">\n                      <template #reference>\n                        <!-- ellipsis方法用于剪裁字符串 -->\n                        <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                      </template>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <!-- 容器组 -->\n              <el-table-column align=center label=\"容器组\">\n                <!-- 可用数量/总数量,三元运算，若值大于0则显示值，否则显示0 -->\n                <template v-slot=\"scope\">\n                  <span>{{ scope.row.status.availableReplicas>0?scope.row.status.availableReplicas:0  }} / {{ scope.row.spec.replicas>0?scope.row.spec.replicas:0 }} </span>\n                </template>\n              </el-table-column>\n              <!-- 创建时间 -->\n              <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                <!-- timeTrans函数用于将格林威治时间转成北京时间 -->\n                <template v-slot=\"scope\">\n                  <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                </template>\n              </el-table-column>\n              <!-- 容器镜像 -->\n              <el-table-column align=center label=\"镜像\">\n                <!-- 与label的显示逻辑一致 -->\n                <template v-slot=\"scope\">\n                  <div v-for=\"(val, key) in scope.row.spec.template.spec.containers\" :key=\"key\">\n                    <el-popover\n                        placement=\"right\"\n                        :width=\"200\"\n                        trigger=\"hover\"\n                        :content=\"val.image\">\n                      <template #reference>\n                        <el-tag style=\"margin-bottom: 5px\">{{ ellipsis(val.image.split('/')[2]==undefined?val.image:val.image.split('/')[2]) }}</el-tag>\n                      </template>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <!-- 操作列，放按钮 -->\n              <el-table-column align=center label=\"操作\" width=\"400\">\n                <template v-slot=\"scope\">\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getDeploymentDetail(scope)\">YAML</el-button>\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Plus\" type=\"primary\" @click=\"handleScale(scope)\">扩缩</el-button>\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"RefreshLeft\" type=\"primary\" @click=\"handleConfirm(scope, '重启', restartDeployment)\">重启</el-button>\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delDeployment)\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <!-- 分页配置 -->\n            <!-- background 背景色灰 -->\n            <!-- size-change 单页大小改变后触发 -->\n            <!-- current-change 页数改变后触发 -->\n            <!-- current-page 当前页 -->\n            <!-- page-size 单页大小 -->\n            <!-- layout 分页器支持的功能 -->\n            <!-- total 数据总条数 -->\n            <el-pagination\n                class=\"deploy-body-pagination\"\n                background\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n                :current-page=\"currentPage\"\n                :page-sizes=\"pagesizeList\"\n                :page-size=\"pagesize\"\n                layout=\"total, sizes, prev, pager, next, jumper\"\n                :total=\"deploymentTotal\">\n            </el-pagination>\n          </el-card>\n        </div>\n      </el-col>\n    </el-row>\n    <!-- 抽屉：创建Deployment的表单 -->\n    <!-- v-model 值是bool，用于显示与隐藏 -->\n    <!-- direction 显示的位置 -->\n    <!-- before-close 关闭时触发，点击关闭或者点击空白都会触发 -->\n    <el-drawer\n        v-model=\"createDeploymentDrawer\"\n        :direction=\"direction\"\n        :before-close=\"handleClose\">\n      <!-- 插槽，抽屉标题 -->\n      <template #title>\n        <h4>创建Deployment</h4>\n      </template>\n      <!-- 插槽，抽屉body -->\n      <template #default>\n        <!-- flex布局,居中 -->\n        <el-row type=\"flex\" justify=\"center\">\n          <el-col :span=\"20\">\n            <!-- ref绑定控件后，js中才能用this.$ref获取该控件 -->\n            <!-- rules 定义form表单校验规则 -->\n            <el-form ref=\"createDeployment\" :rules=\"createDeploymentRules\" :model=\"createDeployment\" label-width=\"80px\">\n              <!-- prop用于rules中的校验规则的key -->\n              <el-form-item class=\"deploy-create-form\" label=\"名称\" prop=\"name\">\n                <el-input v-model=\"createDeployment.name\"></el-input>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"命名空间\" prop=\"namespace\">\n                <el-select v-model=\"createDeployment.namespace\" filterable placeholder=\"请选择\">\n                  <el-option\n                      v-for=\"(item, index) in namespaceList\"\n                      :key=\"index\"\n                      :label=\"item.metadata.name\"\n                      :value=\"item.metadata.name\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n              <!-- 数字输入框，最小为1，最大为10 -->\n              <el-form-item class=\"deploy-create-form\" label=\"副本数\" prop=\"replicas\">\n                <el-input-number v-model=\"createDeployment.replicas\" :min=\"1\" :max=\"10\"></el-input-number>\n                <!-- 气泡弹出框用于提醒上限 -->\n                <el-popover\n                    placement=\"top\"\n                    :width=\"100\"\n                    trigger=\"hover\"\n                    content=\"申请副本数上限为10个\">\n                  <template #reference>\n                    <el-icon style=\"width:2em;font-size:18px;color:#4795EE\"><WarningFilled/></el-icon>\n                  </template>\n                </el-popover>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"镜像\" prop=\"image\">\n                <el-input v-model=\"createDeployment.image\"></el-input>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"标签\" prop=\"label_str\">\n                <el-input v-model=\"createDeployment.label_str\" placeholder=\"示例: project=ms,app=gateway\"></el-input>\n              </el-form-item>\n              <!-- 下拉框，用于规格的选择，之后用/分割，得到cpu和内存 -->\n              <el-form-item class=\"deploy-create-form\" label=\"资源配额\" prop=\"resource\">\n                <el-select v-model=\"createDeployment.resource\" placeholder=\"请选择\">\n                  <el-option value=\"0.5/1\" label=\"0.5C1G\"></el-option>\n                  <el-option value=\"1/2\" label=\"1C2G\"></el-option>\n                  <el-option value=\"2/4\" label=\"2C4G\"></el-option>\n                  <el-option value=\"4/8\" label=\"4C8G\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"容器端口\" prop=\"container_port\">\n                <el-input v-model=\"createDeployment.container_port\" placeholder=\"示例: 80\"></el-input>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"健康检查\" prop=\"health\">\n                <el-switch v-model=\"createDeployment.health_check\" />\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"检查路径\" prop=\"healthPath\">\n                <el-input v-model=\"createDeployment.health_path\" placeholder=\"示例: /health\"></el-input>\n              </el-form-item>\n            </el-form>\n          </el-col>\n        </el-row>\n      </template>\n      <!-- 插槽，抽屉footer -->\n      <template #footer>\n        <!-- 点击后赋值false，隐藏抽屉 -->\n        <el-button @click=\"createDeploymentDrawer = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm('createDeployment')\">立即创建</el-button>\n      </template>\n    </el-drawer>\n    <!-- 展示YAML信息的弹框 -->\n    <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"2%\">\n      <!-- codemirror编辑器 -->\n      <!-- border 带边框 -->\n      <!-- options  编辑器配置 -->\n      <!-- change 编辑器中的内容变化时触发 -->\n      <codemirror\n          v-model:value=\"contentYaml\"\n          border\n          :options=\"cmOptions\"\n          :style=\"{ height: '500px' }\"\n          :autofocus=\"true\"\n          :tab-size=\"2\"\n          @change=\"onChange\"\n      ></codemirror>\n      <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"this.yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updateDeployment()\">更 新</el-button>\n                </span>\n      </template>\n    </el-dialog>\n    <!-- 调整副本数的弹框 -->\n    <el-dialog title=\"副本数调整\" v-model=\"scaleDialog\" width=\"25%\">\n      <div style=\"text-align:center\">\n        <span>实例数: </span>\n        <el-input-number :step=\"1\" v-model=\"scaleNum\" :min=\"0\" :max=\"30\" label=\"描述文字\"></el-input-number>\n      </div>\n      <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"scaleDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"scaleDeployment()\">更 新</el-button>\n                </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {\n  createDeployment, deleteDeployment,\n  getdeploymentdetail,\n  getdeploymentlist,\n  restartdeployment,\n  scaledeployment,\n  updatedeployment\n} from \"@/api/deployment\";\nimport {getNamespecelist} from \"@/api/namespace\";\n\n\n\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: {\n        // 语言及语法模式\n        mode: 'text/yaml',\n        // 主题\n        theme: 'darcula',\n        // 显示行数\n        lineNumbers: true,\n        smartIndent: true, //智能缩进\n        indentUnit: 4, // 智能缩进单元长度为 4 个空格\n        styleActiveLine: true, // 显示选中行的样式\n        matchBrackets: true, //每当光标位于匹配的方括号旁边时，都会使其高亮显示\n        readOnly: false,\n        lineWrapping: true //自动换行\n      },\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //搜索框内容\n      searchInput: '',\n      //命名空间\n      namespaceValue: 'default',\n      namespaceList: [],\n      //列表\n      appLoading: false,\n      deploymentList: [],\n      deploymentTotal: 0,\n      getDeploymentsData: {\n        url: common.k8sDeploymentList,\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: '',\n        }\n      },\n      //创建\n      fullscreenLoading: false,\n      direction: 'rtl',\n      createDeploymentDrawer: false,\n      createDeployment: {\n        name: '',\n        namespace: '',\n        replicas: 1,\n        image: '',\n        resource: '',\n        health_check: false,\n        health_path: '',\n        label_str: '',\n        label: {},\n        container_port: ''\n      },\n      //创建请求的参数\n      createDeploymentData: {\n        url: common.k8sDeploymentCreate,\n        params: {}\n      },\n      //创建deployment的表单校验规则\n      createDeploymentRules: {\n        name: [{\n          required: true,\n          message: '请填写名称',\n          trigger: 'change'\n        }],\n        image: [{\n          required: true,\n          message: '请填写镜像',\n          trigger: 'change'\n        }],\n        namespace: [{\n          required: true,\n          message: '请选择命名空间',\n          trigger: 'change'\n        }],\n        resource: [{\n          required: true,\n          message: '请选择配额',\n          trigger: 'change'\n        }],\n        label_str: [{\n          required: true,\n          message: '请填写标签',\n          trigger: 'change'\n        }],\n        container_port: [{\n          required: true,\n          message: '请填写容器端口',\n          trigger: 'change'\n        }],\n      },\n      //详情\n      deploymentDetail: {},\n      getDeploymentDetailData: {\n        params: {\n          deployment_name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateDeploymentData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //扩缩容\n      scaleNum: 0,\n      scaleDialog: false,\n      scaleDeploymentData: {\n        params: {\n          deployment_name: '',\n          namespace: '',\n          scale_num: ''\n        }\n      },\n      //重启\n      restartDeploymentData: {\n        params: {\n          deployment_name: '',\n          namespace: '',\n        }\n      },\n      //删除\n      delDeploymentData: {\n        params: {\n          deployment_name: '',\n          namespace: '',\n        }\n      },\n    }\n  },\n  methods: {\n    //json转yaml方法\n    transYaml(content) {\n      return json2yaml.stringify(content)\n    },\n    //yaml转对象\n    transObj(content) {\n      return yaml2obj.load(content)\n    },\n    //编辑器内容变化时触发的方式,用于将更新的内容复制到变量中\n    onChange(val) {\n      this.contentYaml = val\n    },\n    //页面大小发生变化时触发，赋值并重新获取列表\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getDeployments()\n    },\n    //页数发生变化时触发，复制并重新获取列表\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getDeployments()\n    },\n    //处理抽屉的关闭，增加体验感\n    handleClose(done) {\n      this.$confirm('确认关闭？')\n          .then(() => {\n            done();\n          })\n          .catch(() => {});\n    },\n    //字符串截取、拼接并返回\n    ellipsis(value) {\n      return value.length>15?value.substring(0,15)+'...':value\n    },\n    //格林威治时间转为北京时间\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ')\n      return date\n    },\n    //获取Namespace列表\n    getNamespaces() {\n      getNamespecelist().then(res => {\n            this.namespaceList = res.data.items\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //获取Deployment列表\n    getDeployments() {\n      //表格加载动画开启\n      this.appLoading = true\n      //getDeploymentsData是用于发起deployment列表请求的专用的对象，里面有url和params参数,以下是赋值\n      this.getDeploymentsData.params.filter_name = this.searchInput\n      this.getDeploymentsData.params.namespace = this.namespaceValue\n      this.getDeploymentsData.params.page = this.currentPage\n      this.getDeploymentsData.params.limit = this.pagesize\n      getdeploymentlist(this.getDeploymentsData.params).then(res => {\n            //响应成功，获取deployment列表和total\n            this.deploymentList = res.data.items\n            this.deploymentTotal = res.data.total\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //加载动画关闭\n      this.appLoading = false\n    },\n    //获取deployment详情，e参数标识传入的scope插槽，.row是该行的数据\n    getDeploymentDetail(e) {\n      this.getDeploymentDetailData.params.deployment_name = e.row.metadata.name\n      this.getDeploymentDetailData.params.namespace = this.namespaceValue\n      getdeploymentdetail(this.getDeploymentDetailData.params).then(res => {\n            //响应成功，获得deployment详情\n            this.deploymentDetail = res.data\n            //将对象转成yaml格式的字符串\n            this.contentYaml = this.transYaml(this.deploymentDetail)\n        console.log(this.contentYaml)\n            //打开弹出框\n            this.yamlDialog = true\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //更新deployment\n    updateDeployment() {\n      //将yaml格式的deployment对象转为json\n      let content = JSON.stringify(this.transObj(this.contentYaml))\n      this.updateDeploymentData.params.namespace = this.namespaceValue\n      this.updateDeploymentData.params.content = content\n      updatedeployment(this.updateDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            //更新后重新获取列表\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //关闭弹出框\n      this.yamlDialog = false\n    },\n    //扩缩容的中间方法，用于赋值及打开弹出框\n    handleScale(e) {\n      this.scaleDialog = true\n      this.deploymentDetail = e.row\n      this.scaleNum = e.row.spec.replicas\n    },\n    //扩缩容deployment\n    scaleDeployment() {\n      this.scaleDeploymentData.params.deployment_name = this.deploymentDetail.metadata.name\n      this.scaleDeploymentData.params.namespace = this.namespaceValue\n      this.scaleDeploymentData.params.scale_num = this.scaleNum\n      scaledeployment(this.scaleDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            //更新后重新获取列表\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //关闭弹出框\n      this.scaleDialog = false\n    },\n    //重启deployment\n    restartDeployment(e) {\n      this.restartDeploymentData.params.deployment_name = e.row.metadata.name\n      this.restartDeploymentData.params.namespace = this.namespaceValue\n      restartdeployment(this.restartDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //删除deployment\n    delDeployment(e) {\n      this.delDeploymentData.params.deployment_name = e.row.metadata.name\n      this.delDeploymentData.params.namespace = this.namespaceValue\n      deleteDeployment(this.delDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //弹出确认框，用于危险操作的double check\n    //obj是行数据，opeateName是操作名，fn是操作的方法\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n      //$confirm用于弹出确认框\n      this.$confirm(this.confirmContent,'提示',{\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n      })\n          .then(() => {\n            fn(obj)\n          })\n          .catch(() => {\n            this.$message.info({\n              message: '已取消操作'\n            })\n          })\n    },\n    //创建deployment，加Func的原因是因为createDeploy用于属性了\n    createDeployFunc() {\n      //正则匹配，验证label的合法性\n      let reg = new RegExp(\"(^[A-Za-z]+=[A-Za-z0-9]+).*\")\n      if (!reg.test(this.createDeployment.label_str)) {\n        this.$message.warning({\n          message: \"标签填写异常，请确认后重新填写\"\n        })\n        return\n      }\n      //加载loading动画\n      this.fullscreenLoading = true\n      //定义label、cpu和memory变量\n      let label = new Map()\n      let cpu, memory\n      //将label字符串转成数组\n      let a = (this.createDeployment.label_str).split(\",\")\n      //将数组转成map\n      a.forEach(item => {\n        let b = item.split(\"=\")\n        label[b[0]] = b[1]\n      })\n      //将deployment的规格转成cpu和memory\n      let resourceList = this.createDeployment.resource.split(\"/\")\n      cpu = resourceList[0]\n      memory = resourceList[1] + \"Gi\"\n      //赋值\n      this.createDeploymentData.params = this.createDeployment\n      this.createDeploymentData.params.container_port = parseInt(this.createDeployment.container_port)\n      this.createDeploymentData.params.label = label\n      this.createDeploymentData.params.cpu = cpu\n      this.createDeploymentData.params.memory = memory\n      createDeployment(this.createDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            //创建后重新获取列表\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //重置表单\n      this.resetForm('createDeployment')\n      //关闭加载动画\n      this.fullscreenLoading = false\n      //关闭抽屉\n      this.createDeploymentDrawer = false\n    },\n    //重置表单方法，element plus课程讲过的\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    //提交表单，校验参数合法性\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.createDeployFunc()\n        } else {\n          return false;\n        }\n      })\n    }\n  },\n  watch: {\n    //监听namespace的值,若发生变化，则执行handler方法中的内容\n    namespaceValue: {\n      handler() {\n        //将namespace的值存入本地，用于path切换时依旧能获取得到\n        localStorage.setItem('namespace', this.namespaceValue)\n        //重置当前页为1\n        this.currentPage = 1\n        //获取deployment列表\n        this.getDeployments()\n      }\n    },\n  },\n  beforeMount() {\n    //加载页面时先获取localStorage中的namespace值，若获取不到则默认default\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace')\n    }\n    this.getNamespaces()\n    this.getDeployments()\n  }\n}\n</script>\n\n\n<style scoped>\n/* 卡片属性 */\n.deploy-head-card,.deploy-body-card {\n  border-radius: 1px;\n  margin-bottom: 5px;\n}\n/* 搜索框 */\n.deploy-head-search {\n  width:160px;\n  margin-right:10px;\n}\n/* 数据表格deployment名颜色 */\n.deploy-body-deployname {\n  color: #4795EE;\n}\n/* deployment名鼠标悬停 */\n.deploy-body-deployname:hover {\n  color: rgb(84, 138, 238);\n  cursor: pointer;\n  font-weight: bold;\n}\n</style>"]},"metadata":{},"sourceType":"module"}