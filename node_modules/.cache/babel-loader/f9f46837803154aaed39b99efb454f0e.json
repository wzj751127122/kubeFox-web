{"ast":null,"code":"import common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport { DeletePersistentVolume, GetPersistentVolume, GetPersistentVolumeDetail, UpdatePersistentVolume } from \"@/api/pv\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: '',\n      namespaceValue: 'default',\n      namespaceList: [],\n      namespaceListUrl: common.k8sNamespaceList,\n      appLoading: false,\n      pvList: [],\n      pvTotal: 0,\n      getPvsData: {\n        url: common.k8sPvList,\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: ''\n        }\n      },\n      //详情\n      pvDetail: {},\n      getPvDetailData: {\n        url: common.k8sPvDetail,\n        params: {\n          name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updatePvData: {\n        url: common.k8sPvUpdate,\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //删除\n      delPvData: {\n        url: common.k8spvDel,\n        params: {\n          name: '',\n          namespace: ''\n        }\n      }\n    };\n  },\n\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n\n    onChange(val) {\n      this.contentYaml = val;\n    },\n\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getPvs();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getPvs();\n    },\n\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(() => {\n        done();\n      }).catch(() => {});\n    },\n\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + '...' : value;\n    },\n\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ');\n      return date;\n    },\n\n    specTrans(str) {\n      if (str.indexOf('Ki') == -1) {\n        return str;\n      }\n\n      let num = str.slice(0, -2) / 1024 / 1024;\n      return num.toFixed(0);\n    },\n\n    getNamespaces() {\n      getNamespecelist().then(res => {\n        this.namespaceList = res.data.items;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    getPvs() {\n      this.appLoading = true;\n      this.getPvsData.params.filter_name = this.searchInput;\n      this.getPvsData.params.namespace = this.namespaceValue;\n      this.getPvsData.params.page = this.currentPage;\n      this.getPvsData.params.limit = this.pagesize;\n      GetPersistentVolume(this.getPvsData.params).then(res => {\n        this.pvList = res.data.items;\n        this.pvTotal = res.data.total;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.appLoading = false;\n    },\n\n    getPvDetail(e) {\n      this.getPvDetailData.params.name = e.row.metadata.name;\n      this.getPvDetailData.params.namespace = this.namespaceValue;\n      GetPersistentVolumeDetail(this.getPvDetailData.params).then(res => {\n        this.pvDetail = res.data;\n        this.contentYaml = this.transYaml(this.pvDetail);\n        this.yamlDialog = true;\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    updatePv() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updatePvData.params.namespace = this.namespaceValue;\n      this.updatePvData.params.content = content;\n      UpdatePersistentVolume(this.updatePvData.params).then(res => {\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n      this.yamlDialog = false;\n    },\n\n    delPv(e) {\n      this.delPvData.params.name = e.row.metadata.name;\n      this.delPvData.params.namespace = this.namespaceValue;\n      DeletePersistentVolume(this.delPvData.params).then(res => {\n        this.getPvs();\n        this.$message.success({\n          message: res.msg\n        });\n      }).catch(res => {\n        this.$message.error({\n          message: res.msg\n        });\n      });\n    },\n\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？';\n      this.$confirm(this.confirmContent, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(() => {\n        fn(obj);\n      }).catch(() => {\n        this.$message.info({\n          message: '已取消操作'\n        });\n      });\n    }\n\n  },\n\n  beforeMount() {\n    this.getPvs();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["common","yaml2obj","json2yaml","DeletePersistentVolume","GetPersistentVolume","GetPersistentVolumeDetail","UpdatePersistentVolume","data","cmOptions","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","namespaceListUrl","k8sNamespaceList","appLoading","pvList","pvTotal","getPvsData","url","k8sPvList","params","filter_name","namespace","page","limit","pvDetail","getPvDetailData","k8sPvDetail","name","yamlDialog","updatePvData","k8sPvUpdate","content","delPvData","k8spvDel","methods","transYaml","stringify","transObj","load","onChange","val","handleSizeChange","size","getPvs","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","value","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","specTrans","str","indexOf","num","slice","toFixed","getNamespaces","getNamespecelist","res","items","$message","error","message","msg","total","getPvDetail","e","row","metadata","updatePv","JSON","success","delPv","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","beforeMount"],"sourceRoot":"","sources":["/Users/allen/kubemanage-web/src/views/persistentvolume/PersistentVolume.vue"],"sourcesContent":["<template>\n    <div class=\"pv\">\n        <el-row>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pv-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n                        <el-row>\n                            <el-col :span=\"2\">\n                                <div>\n                                    <el-button disabled style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\">创建</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"6\">\n                                <div>\n                                    <el-input class=\"pv-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getPvs()\">搜索</el-button>\n                                </div>\n                            </el-col>\n                            <el-col :span=\"2\" :offset=\"14\">\n                                <div>\n                                    <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getPvs()\">刷新</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"24\">\n                <div>\n                    <el-card class=\"pv-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n                        <el-table\n                        style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                        :data=\"pvList\"\n                        v-loading=\"appLoading\">\n                            <el-table-column width=\"20\"></el-table-column>\n                            <el-table-column align=left label=\"PV名\">\n                                <template v-slot=\"scope\">\n                                    <a class=\"pv-body-pvname\">{{ scope.row.metadata.name }}</a>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"状态\">\n                                <template v-slot=\"scope\">\n                                    <span :class=\"[scope.row.status.phase === 'Bound' ? 'success-status' : 'error-status']\">{{ scope.row.status.phase }}</span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center prop=\"spec.accessModes[0]\" label=\"访问模式\"></el-table-column>\n                            <el-table-column align=center prop=\"spec.capacity.storage\" label=\"容量\"></el-table-column>\n                            <el-table-column align=center prop=\"spec.claimRef.name\" label=\"PVC\"></el-table-column>\n                            <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                                <template v-slot=\"scope\">\n                                    <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                                </template>\n                            </el-table-column>\n                            <el-table-column align=center label=\"操作\" min-width=\"120\">\n                                <template v-slot=\"scope\">\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getPvDetail(scope)\">YAML</el-button>\n                                    <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delPv)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <el-pagination\n                        class=\"pv-body-pagination\"\n                        background\n                        @size-change=\"handleSizeChange\"\n                        @current-change=\"handleCurrentChange\"\n                        :current-page=\"currentPage\"\n                        :page-sizes=\"pagesizeList\"\n                        :page-size=\"pagesize\"\n                        layout=\"total, sizes, prev, pager, next, jumper\"\n                        :total=\"pvTotal\">\n                        </el-pagination>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n            <codemirror\n                :value=\"contentYaml\"\n                border\n                :options=\"cmOptions\"\n                height=\"500\"\n                style=\"font-size:14px;\"\n                @change=\"onChange\"\n            ></codemirror>\n            <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"yamlDialog = false\">取 消</el-button>\n                    <el-button disabled type=\"primary\" @click=\"updatePv()\">更 新</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {DeletePersistentVolume, GetPersistentVolume, GetPersistentVolumeDetail, UpdatePersistentVolume} from \"@/api/pv\";\nexport default {\n    data() {\n        return {\n            //编辑器配置\n            cmOptions: common.cmOptions,\n            contentYaml: '',\n            //分页\n            currentPage: 1,\n            pagesize: 10,\n            pagesizeList: [10, 20, 30],\n            //\n            searchInput: '',\n            namespaceValue: 'default',\n            namespaceList: [],\n            namespaceListUrl: common.k8sNamespaceList,\n            appLoading: false,\n            pvList: [],\n            pvTotal: 0,\n            getPvsData: {\n                url: common.k8sPvList,\n                params: {\n                    filter_name: '',\n                    namespace: '',\n                    page: '',\n                    limit: '',\n                }\n            },\n            //详情\n            pvDetail: {},\n            getPvDetailData: {\n                url: common.k8sPvDetail,\n                params: {\n                    name: '',\n                    namespace: ''\n                }\n            },\n            //yaml更新\n            yamlDialog: false,\n            updatePvData: {\n                url: common.k8sPvUpdate,\n                params: {\n                    namespace: '',\n                    content: ''\n                }\n            },\n            //删除\n            delPvData: {\n                url: common.k8spvDel,\n                params: {\n                    name: '',\n                    namespace: '',\n                }\n            }\n        }\n    },\n    methods: {\n        transYaml(content) {\n            return json2yaml.stringify(content)\n        },\n        transObj(content) {\n            return yaml2obj.load(content)\n        },\n        onChange(val) {\n            this.contentYaml = val\n        },\n        handleSizeChange(size) {\n            this.pagesize = size;\n            this.getPvs()\n        },\n        handleCurrentChange(currentPage) {\n            this.currentPage = currentPage;\n            this.getPvs()\n        },\n        handleClose(done) {\n            this.$confirm('确认关闭？')\n            .then(() => {\n                done();\n            })\n            .catch(() => {});\n        },\n        ellipsis(value) {\n            return value.length>15?value.substring(0,15)+'...':value\n        },\n        timeTrans(timestamp) {\n            let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n            date = date.toJSON();\n            date = date.substring(0, 19).replace('T', ' ')\n            return date \n        },\n        specTrans(str) {\n            if ( str.indexOf('Ki') == -1 ) {\n                return str\n            }\n            let num = str.slice(0,-2) / 1024 / 1024\n            return num.toFixed(0)\n        },\n        getNamespaces() {\n          getNamespecelist()\n            .then(res => {\n                this.namespaceList = res.data.items\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        getPvs() {\n            this.appLoading = true\n            this.getPvsData.params.filter_name = this.searchInput\n            this.getPvsData.params.namespace = this.namespaceValue\n            this.getPvsData.params.page = this.currentPage\n            this.getPvsData.params.limit = this.pagesize\n          GetPersistentVolume(this.getPvsData.params)\n            .then(res => {\n                this.pvList = res.data.items\n                this.pvTotal = res.data.total\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.appLoading = false\n        },\n        getPvDetail(e) {\n            this.getPvDetailData.params.name = e.row.metadata.name\n            this.getPvDetailData.params.namespace = this.namespaceValue\n          GetPersistentVolumeDetail(this.getPvDetailData.params)\n            .then(res => {\n                this.pvDetail = res.data\n                this.contentYaml = this.transYaml(this.pvDetail)\n                this.yamlDialog = true\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        updatePv() {\n            let content = JSON.stringify(this.transObj(this.contentYaml))\n            this.updatePvData.params.namespace = this.namespaceValue\n            this.updatePvData.params.content = content\n          UpdatePersistentVolume(this.updatePvData.params)\n            .then(res => {\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n            this.yamlDialog = false\n        },\n        delPv(e) {\n            this.delPvData.params.name = e.row.metadata.name\n            this.delPvData.params.namespace = this.namespaceValue\n          DeletePersistentVolume(this.delPvData.params)\n            .then(res => {\n                this.getPvs()\n                this.$message.success({\n                message: res.msg\n                })\n            })\n            .catch(res => {\n                this.$message.error({\n                message: res.msg\n                })\n            })\n        },\n        handleConfirm(obj, operateName, fn) {\n            this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n            this.$confirm(this.confirmContent,'提示',{\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            })\n            .then(() => {\n                fn(obj)\n                })\n            .catch(() => {\n                this.$message.info({\n                    message: '已取消操作'\n                })          \n            })\n        },\n    },\n    beforeMount() {\n        this.getPvs()\n    }\n}\n</script>\n\n\n<style scoped>\n    .pv-head-card,.pv-body-card {\n        border-radius: 1px;\n        margin-bottom: 5px;\n    }\n    .pv-head-search {\n        width:160px;\n        margin-right:10px; \n    }\n    .pv-body-pvname {\n        color: #4795EE;\n    }\n    .pv-body-pvname:hover {\n        color: rgb(84, 138, 238);\n        cursor: pointer;\n        font-weight: bold;\n    }\n    .success-status {\n        color: rgb(27, 202, 21);\n    }\n    .warning-status {\n        color: rgb(233, 200, 16);\n    }\n    .error-status {\n        color: rgb(226, 23, 23);\n    }\n</style>"]},"metadata":{},"sourceType":"module"}