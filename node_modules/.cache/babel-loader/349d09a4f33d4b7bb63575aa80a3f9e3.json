{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6a23b46c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"float\": \"left\",\n    \"padding-top\": \"20%\"\n  }\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"home-node-card-title\"\n}, \"命名空间: Active/总量\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"home-node-card-num\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"home-node-card-title\"\n}, \"服务数\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  class: \"home-node-card-num\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"home-node-card-title\"\n}, \"实例数\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = {\n  class: \"home-node-card-num\"\n};\nconst _hoisted_9 = {\n  style: {\n    \"float\": \"left\",\n    \"padding-top\": \"20%\"\n  }\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"home-node-card-title\"\n}, \"节点: Ready/总数量\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = {\n  class: \"home-node-card-num\"\n};\nconst _hoisted_12 = {\n  style: {\n    \"float\": \"left\",\n    \"padding-top\": \"20%\"\n  }\n};\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"home-node-card-title\"\n}, \"CPU: 可分配/容量\", -1\n/* HOISTED */\n));\n\nconst _hoisted_14 = {\n  class: \"home-node-card-num\"\n};\nconst _hoisted_15 = {\n  style: {\n    \"float\": \"left\",\n    \"padding-top\": \"20%\"\n  }\n};\n\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"home-node-card-title\"\n}, \"内存: 可分配/容量\", -1\n/* HOISTED */\n));\n\nconst _hoisted_17 = {\n  class: \"home-node-card-num\"\n};\nconst _hoisted_18 = {\n  style: {\n    \"float\": \"left\",\n    \"padding-top\": \"20%\"\n  }\n};\n\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"home-node-card-title\"\n}, \"POD: 可分配/容量\", -1\n/* HOISTED */\n));\n\nconst _hoisted_20 = {\n  class: \"home-node-card-num\"\n};\n\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"podNumDash\",\n  style: {\n    \"height\": \"300px\"\n  }\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"deployNumDash\",\n  style: {\n    \"height\": \"300px\"\n  }\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_progress = _resolveComponent(\"el-progress\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\");\n\n  const _component_el_collapse = _resolveComponent(\"el-collapse\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <KeepAlive> \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 折叠面板 \"), _createVNode(_component_el_collapse, {\n    modelValue: $data.activeNames,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.activeNames = $event)\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 面板1 集群资源卡片 \"), _createVNode(_component_el_collapse_item, {\n      title: \"集群资源\",\n      name: \"1\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, {\n        gutter: 10,\n        style: {\n          \"margin-bottom\": \"10px\"\n        }\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 命名空间数量 \"), _createVNode(_component_el_col, {\n          span: 5\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-node-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 进度条 \"), _createCommentVNode(\" stroke-width 进度条的宽度 \"), _createCommentVNode(\" show-text 是否显示文字描述 \"), _createCommentVNode(\" percentage 进度百分比 \"), _createVNode(_component_el_progress, {\n              \"stroke-width\": 20,\n              \"show-text\": false,\n              type: \"circle\",\n              percentage: $data.namespaceActive / $data.namespaceTotal * 100\n            }, null, 8\n            /* PROPS */\n            , [\"percentage\"])]), _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"p\", _hoisted_4, _toDisplayString($data.namespaceActive) + \"/\" + _toDisplayString($data.namespaceTotal), 1\n            /* TEXT */\n            )])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createCommentVNode(\" 服务数量 单个namespace中deployment的数量 \"), _createVNode(_component_el_col, {\n          span: 5\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-node-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_hoisted_5, _createElementVNode(\"p\", _hoisted_6, _toDisplayString($data.deploymentTotal), 1\n            /* TEXT */\n            )])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createCommentVNode(\" 实例数 单个namespace中pod的数量 \"), _createVNode(_component_el_col, {\n          span: 5\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-node-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_hoisted_7, _createElementVNode(\"p\", _hoisted_8, _toDisplayString($data.podTotal), 1\n            /* TEXT */\n            )])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" 面板2 节点资源卡片 \"), _createVNode(_component_el_collapse_item, {\n      title: \"节点资源\",\n      name: \"2\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, {\n        gutter: 10,\n        style: {\n          \"margin-bottom\": \"10px\"\n        }\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 节点数量 \"), _createVNode(_component_el_col, {\n          span: 5\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-node-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_progress, {\n              \"stroke-width\": 20,\n              \"show-text\": false,\n              type: \"circle\",\n              percentage: $data.nodeTotal / $data.nodeTotal * 100\n            }, null, 8\n            /* PROPS */\n            , [\"percentage\"])]), _createElementVNode(\"div\", null, [_hoisted_10, _createElementVNode(\"p\", _hoisted_11, _toDisplayString($data.nodeTotal) + \"/\" + _toDisplayString($data.nodeTotal), 1\n            /* TEXT */\n            )])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createCommentVNode(\" CPU资源统计 \"), _createVNode(_component_el_col, {\n          span: 5\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-node-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_el_progress, {\n              \"stroke-width\": 20,\n              \"show-text\": false,\n              type: \"circle\",\n              percentage: $data.nodeCpuAllocatable / $data.nodeCpuCapacity * 100\n            }, null, 8\n            /* PROPS */\n            , [\"percentage\"])]), _createElementVNode(\"div\", null, [_hoisted_13, _createElementVNode(\"p\", _hoisted_14, _toDisplayString($data.nodeCpuAllocatable) + \"/\" + _toDisplayString($data.nodeCpuCapacity), 1\n            /* TEXT */\n            )])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createCommentVNode(\" 内存资源统计 \"), _createVNode(_component_el_col, {\n          span: 5\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-node-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_el_progress, {\n              \"stroke-width\": 20,\n              \"show-text\": false,\n              type: \"circle\",\n              percentage: $data.nodeMemAllocatable / $data.nodeMemCapacity * 100\n            }, null, 8\n            /* PROPS */\n            , [\"percentage\"])]), _createElementVNode(\"div\", null, [_hoisted_16, _createElementVNode(\"p\", _hoisted_17, _toDisplayString($options.specTrans($data.nodeMemAllocatable)) + \"Gi/\" + _toDisplayString($options.specTrans($data.nodeMemCapacity)) + \"Gi \", 1\n            /* TEXT */\n            )])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createCommentVNode(\" POD资源统计 \"), _createVNode(_component_el_col, {\n          span: 5\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-node-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_el_progress, {\n              \"stroke-width\": 20,\n              \"show-text\": false,\n              type: \"circle\",\n              percentage: $data.nodePodAllocatable / $data.nodePodAllocatable * 100\n            }, null, 8\n            /* PROPS */\n            , [\"percentage\"])]), _createElementVNode(\"div\", null, [_hoisted_19, _createElementVNode(\"p\", _hoisted_20, _toDisplayString($data.nodePodAllocatable) + \"/\" + _toDisplayString($data.nodePodAllocatable), 1\n            /* TEXT */\n            )])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" 面板3 资源统计画图 \"), _createVNode(_component_el_collapse_item, {\n      title: \"资源统计\",\n      name: \"3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, {\n        gutter: 10\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 每个namspace中pod数量的作图统计 \"), _createVNode(_component_el_col, {\n          span: 24,\n          style: {\n            \"margin-bottom\": \"10px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-dash-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_createCommentVNode(\" 这个div就是画图的内容，echarts初始化后会绑定到这个id上展示出来 \"), _hoisted_21]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createCommentVNode(\" 每个namespace中deployment数量的作图统计 \"), _createVNode(_component_el_col, {\n          span: 24\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"home-dash-card\",\n            \"body-style\": {\n              padding: '10px'\n            }\n          }, {\n            default: _withCtx(() => [_hoisted_22]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])]), _createCommentVNode(\" </KeepAlive> \")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","style","_createElementVNode","id","_createCommentVNode","_createVNode","_component_el_collapse","$data","$event","_component_el_collapse_item","title","name","_component_el_row","gutter","_component_el_col","span","_component_el_card","padding","_component_el_progress","type","percentage","_hoisted_3","_toDisplayString","_hoisted_5","_hoisted_7","_hoisted_10","_hoisted_13","_hoisted_16","$options","_hoisted_19","_hoisted_21","_hoisted_22"],"sourceRoot":"","sources":["/Users/allen/kubemanage-web/src/views/home/HomeView.vue"],"sourcesContent":["<template>\n  <!-- <KeepAlive> -->\n    <div class=\"home\">\n      <!-- 折叠面板 -->\n      <el-collapse v-model=\"activeNames\">\n        <!-- 面板1 集群资源卡片 -->\n        <el-collapse-item title=\"集群资源\" name=\"1\">\n          <el-row :gutter=\"10\" style=\"margin-bottom: 10px;\">\n            <!-- 命名空间数量 -->\n            <el-col :span=\"5\">\n              <el-card class=\"home-node-card\" :body-style=\"{ padding: '10px' }\">\n                <div style=\"float:left;padding-top:20%\">\n                  <!-- 进度条 -->\n                  <!-- stroke-width 进度条的宽度 -->\n                  <!-- show-text 是否显示文字描述 -->\n                  <!-- percentage 进度百分比 -->\n                  <el-progress :stroke-width=\"20\" :show-text=\"false\" type=\"circle\"\n                    :percentage=\"namespaceActive / namespaceTotal * 100\"></el-progress>\n                </div>\n                <div>\n                  <p class=\"home-node-card-title\">命名空间: Active/总量</p>\n                  <p class=\"home-node-card-num\">{{ namespaceActive }}/{{ namespaceTotal }}</p>\n                </div>\n              </el-card>\n            </el-col>\n            <!-- 服务数量 单个namespace中deployment的数量 -->\n            <el-col :span=\"5\">\n              <el-card class=\"home-node-card\" :body-style=\"{ padding: '10px' }\">\n                <div>\n                  <p class=\"home-node-card-title\">服务数</p>\n                  <p class=\"home-node-card-num\">{{ deploymentTotal }}</p>\n                </div>\n              </el-card>\n            </el-col>\n            <!-- 实例数 单个namespace中pod的数量 -->\n            <el-col :span=\"5\">\n              <el-card class=\"home-node-card\" :body-style=\"{ padding: '10px' }\">\n                <div>\n                  <p class=\"home-node-card-title\">实例数</p>\n                  <p class=\"home-node-card-num\">{{ podTotal }}</p>\n                </div>\n              </el-card>\n            </el-col>\n          </el-row>\n        </el-collapse-item>\n        <!-- 面板2 节点资源卡片 -->\n        <el-collapse-item title=\"节点资源\" name=\"2\">\n          <el-row :gutter=\"10\" style=\"margin-bottom: 10px;\">\n            <!-- 节点数量 -->\n            <el-col :span=\"5\">\n              <el-card class=\"home-node-card\" :body-style=\"{ padding: '10px' }\">\n                <div style=\"float:left;padding-top:20%\">\n                  <el-progress :stroke-width=\"20\" :show-text=\"false\" type=\"circle\"\n                    :percentage=\"nodeTotal / nodeTotal * 100\"></el-progress>\n                </div>\n                <div>\n                  <p class=\"home-node-card-title\">节点: Ready/总数量</p>\n                  <p class=\"home-node-card-num\">{{ nodeTotal }}/{{ nodeTotal }}</p>\n                </div>\n              </el-card>\n            </el-col>\n            <!-- CPU资源统计 -->\n            <el-col :span=\"5\">\n              <el-card class=\"home-node-card\" :body-style=\"{ padding: '10px' }\">\n                <div style=\"float:left;padding-top:20%\">\n                  <el-progress :stroke-width=\"20\" :show-text=\"false\" type=\"circle\"\n                    :percentage=\"nodeCpuAllocatable / nodeCpuCapacity * 100\"></el-progress>\n                </div>\n                <div>\n                  <p class=\"home-node-card-title\">CPU: 可分配/容量</p>\n                  <p class=\"home-node-card-num\">{{ nodeCpuAllocatable }}/{{ nodeCpuCapacity }}</p>\n                </div>\n              </el-card>\n            </el-col>\n            <!-- 内存资源统计 -->\n            <el-col :span=\"5\">\n              <el-card class=\"home-node-card\" :body-style=\"{ padding: '10px' }\">\n                <div style=\"float:left;padding-top:20%\">\n                  <el-progress :stroke-width=\"20\" :show-text=\"false\" type=\"circle\"\n                    :percentage=\"nodeMemAllocatable / nodeMemCapacity * 100\"></el-progress>\n                </div>\n                <div>\n                  <p class=\"home-node-card-title\">内存: 可分配/容量</p>\n                  <p class=\"home-node-card-num\">{{ specTrans(nodeMemAllocatable) }}Gi/{{ specTrans(nodeMemCapacity) }}Gi\n                  </p>\n                </div>\n              </el-card>\n            </el-col>\n            <!-- POD资源统计 -->\n            <el-col :span=\"5\">\n              <el-card class=\"home-node-card\" :body-style=\"{ padding: '10px' }\">\n                <div style=\"float:left;padding-top:20%\">\n                  <el-progress :stroke-width=\"20\" :show-text=\"false\" type=\"circle\"\n                    :percentage=\"nodePodAllocatable / nodePodAllocatable * 100\"></el-progress>\n                </div>\n                <div>\n                  <p class=\"home-node-card-title\">POD: 可分配/容量</p>\n                  <p class=\"home-node-card-num\">{{ nodePodAllocatable }}/{{ nodePodAllocatable }}</p>\n                </div>\n              </el-card>\n            </el-col>\n          </el-row>\n        </el-collapse-item>\n        <!-- 面板3 资源统计画图 -->\n        <el-collapse-item title=\"资源统计\" name=\"3\">\n          <el-row :gutter=\"10\">\n            <!-- 每个namspace中pod数量的作图统计 -->\n            <el-col :span=\"24\" style=\"margin-bottom: 10px;\">\n              <el-card class=\"home-dash-card\" :body-style=\"{ padding: '10px' }\">\n                <!-- 这个div就是画图的内容，echarts初始化后会绑定到这个id上展示出来 -->\n                <div id=\"podNumDash\" style=\"height: 300px;\">\n                </div>\n              </el-card>\n            </el-col>\n            <!-- 每个namespace中deployment数量的作图统计 -->\n            <el-col :span=\"24\">\n              <el-card class=\"home-dash-card\" :body-style=\"{ padding: '10px' }\">\n                <div id=\"deployNumDash\" style=\"height: 300px;\">\n                </div>\n              </el-card>\n            </el-col>\n          </el-row>\n        </el-collapse-item>\n      </el-collapse>\n    </div>\n  <!-- </KeepAlive> -->\n</template>\n\n<script>\n//引入echarts\nimport * as echarts from 'echarts'\nimport { getNamespecelist } from \"@/api/namespace\";\nimport { getNodeList } from \"@/api/node\";\nimport { getDeploymentByNs, getdeploymentlist } from \"@/api/deployment\";\nimport { GetPodByNS, getPodList } from \"@/api/pod\";\nexport default {\n  data () {\n    return {\n      //控制折叠面板的展开，表示打开所有的折叠面板\n      activeNames: [\"1\", \"2\", \"3\"],\n      //获取namespace的属性\n      namespaceActive: 0,\n      namespaceValue: 'default',\n      namespaceTotal: 0,\n      //获取node的属性\n      nodeTotal: 0,\n      //cpu可分配\n      nodeCpuAllocatable: 0,\n      //cpu总量\n      nodeCpuCapacity: 0,\n      //内存可分配\n      nodeMemAllocatable: 0,\n      //内存总量\n      nodeMemCapacity: 0,\n      //pod可分配\n      nodePodAllocatable: 0,\n      //pod总量\n      nodePodCapacity: 0,\n      getNodesData: {\n        params: {}\n      },\n      //获取deployment的数量\n      deploymentTotal: 0,\n      getDeploymentsData: {\n        params: {\n          namespace: '',\n        }\n      },\n      //获取pod的数量\n      podTotal: 0,\n      getPodsData: {\n        params: {\n          namespace: '',\n        }\n      },\n      //每个namespace中pod的数量[{namespace:\"default\",pod_num:5}]\n      podNumNp: [],\n      //每个namespace中deployment的数量[{namespace:\"default\",deployment_num:5}]\n      deploymentNumNp: [],\n    }\n  },\n  methods: {\n    //获取namespace的数量\n    getNamespaces () {\n      getNamespecelist()\n        .then(res => {\n          this.namespaceTotal = res.data.total\n          let namespaceList = res.data.items\n          //处理namespace active的数量\n          let index\n          for (index in namespaceList) {\n            if (namespaceList[index].status.phase === \"Active\") {\n              this.namespaceActive = this.namespaceActive + 1\n            }\n          }\n        })\n        .catch(res => {\n          this.$message.error({\n            message: res.msg\n          })\n        })\n    },\n    //用于内存数据的转换\n    specTrans (num) {\n      let a = num / 1024 / 1024\n      //四舍五入保留小数点0位，也就是去除小数点\n      return a.toFixed(0)\n    },\n    //获取node属性\n    getNodes () {\n      getNodeList(this.getNodesData.params)\n        .then(res => {\n          this.nodeTotal = res.data.total\n          let nodeList = res.data.items\n          let index\n          for (index in nodeList) {\n            //正则匹配纯数字，如果不是纯数字则跳过\n            let isnum = /^\\d+$/.test(nodeList[index].status.allocatable.cpu);\n            if (!isnum) {\n              continue\n            }\n            //计算node的cpu mem和pod的可分配及总容量数据\n            this.nodeCpuAllocatable = parseInt(nodeList[index].status.allocatable.cpu) + this.nodeCpuAllocatable\n            this.nodeCpuCapacity = parseInt(nodeList[index].status.capacity.cpu) + this.nodeCpuCapacity\n            this.nodeMemAllocatable = parseInt(nodeList[index].status.allocatable.memory) + this.nodeMemAllocatable\n            this.nodeMemCapacity = parseInt(nodeList[index].status.capacity.memory) + this.nodeMemCapacity\n            this.nodePodAllocatable = parseInt(nodeList[index].status.allocatable.pods) + this.nodePodAllocatable\n            this.nodePodCapacity = parseInt(nodeList[index].status.capacity.pods) + this.nodePodCapacity\n          }\n        })\n        .catch(res => {\n          this.$message.error({\n            message: res.msg\n          })\n        })\n    },\n    //获取命名空间下的deployment总数\n    getDeployments () {\n      this.getDeploymentsData.params.namespace = this.namespaceValue\n      getdeploymentlist(this.getDeploymentsData.params)\n        .then(res => {\n          this.deploymentTotal = res.data.total\n        })\n        .catch(res => {\n          this.$message.error({\n            message: res.msg\n          })\n        })\n    },\n    //获取命名空间下的pod总数\n    getPods () {\n      this.getPodsData.params.namespace = this.namespaceValue\n      getPodList(this.getPodsData.params)\n        .then(res => {\n          this.podTotal = res.data.total\n        })\n        .catch(res => {\n          this.$message.error({\n            message: res.msg\n          })\n        })\n    },\n    //获取每个namespace中deployment的数量\n    getDeploymentNumNp () {\n      getDeploymentByNs()\n        .then(res => {\n          this.deploymentNumNp = res.data\n          //echarts作图\n          this.getDeployNumDash()\n        })\n        .catch(res => {\n          this.$message.error({\n            message: res.msg\n          })\n        })\n    },\n    //获取每个namespace中pod的数量\n    getPodNumNp () {\n      GetPodByNS()\n        .then(res => {\n          this.podNumNp = res.data\n          //echarts作图\n          this.getPodNumDash()\n        })\n        .catch(res => {\n          this.$message.error({\n            message: res.msg\n          })\n        })\n    },\n    getPodNumDash () {\n      //若实例已经初始化了，则销毁实例\n      if (this.podNumDash != null && this.podNumDash != \"\" && this.podNumDash != undefined) {\n        this.podNumDash.dispose()\n      }\n      //初始化实例，绑定到dom上\n      this.podNumDash = echarts.init(document.getElementById('podNumDash'));\n      console.log(this.podNumNp)\n      //echarts作图配置\n      this.podNumDash.setOption({\n        //标题及字体颜色\n        title: { text: 'Pods per Namespace', textStyle: { color: 'rgb(134, 135, 136)' } },\n        //图表颜色\n        color: ['#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\n        //提示框\n        tooltip: {\n          //触发类型坐标轴触发\n          trigger: \"axis\",\n          //'cross' 十字准星指示器\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#76baf1\"\n            }\n          }\n        },\n        //图表中的数据类型解释\n        legend: {\n          data: ['Pods']\n        },\n        //图表数据集\n        dataset: {\n          //维度定义，默认第一个元素表示x轴的数据，其他都是y轴数据\n          dimensions: ['namespace', 'pod_num'],\n          //源数据\n          source: this.podNumNp\n        },\n        //x轴属性\n        xAxis: {\n          //category类目轴，value数值轴，time时间轴，log对数轴\n          type: 'category',\n          //轴标签\n          axisLabel: {\n            //坐标轴刻度标签的显示间隔，在类目轴中有效.0显示所有\n            interval: 0,\n            //格式化轴标签\n            formatter: function (value) {\n              return value.length > 5 ? value.substring(0, 5) + '...' : value\n            }\n          },\n        },\n        //y轴属性\n        yAxis: [\n          //数值轴\n          { type: 'value' }\n        ],\n        //定义系列，用于指定一组数值以及他们映射成的图\n        series: [{\n          //name是legend对应的值\n          name: 'Pods',\n          //bar柱状图，line折线图，pie饼图等等\n          type: 'bar',\n          //每个类目的值标签，配置\n          label: {\n            //是否显示值\n            show: true,\n            //显示的位置\n            position: 'top'\n          }\n        }\n        ]\n      });\n    },\n    getDeployNumDash () {\n      if (this.deployNumDash != null && this.deployNumDash != \"\" && this.deployNumDash != undefined) {\n        this.deployNumDash.dispose()\n      }\n      this.deployNumDash = echarts.init(document.getElementById('deployNumDash'));\n\n      this.deployNumDash.setOption({\n        title: { text: 'Deployments per Namespace', textStyle: { color: 'rgb(134, 135, 136)' } },\n        color: ['#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\n        tooltip: { trigger: \"axis\", axisPointer: { type: \"cross\", label: { backgroundColor: \"#76baf1\" } } },\n        legend: {\n          data: ['Deployments']\n        },\n        dataset: {\n          // 提供一份数据。\n          dimensions: ['namespace', 'deployment_num'],\n          source: this.deploymentNumNp\n        },\n        xAxis: {\n          type: 'category',\n          axisLabel: {\n            interval: 0,\n            formatter: function (value) {\n              return value.length > 5 ? value.substring(0, 5) + '...' : value\n            }\n          },\n        },\n        yAxis: [\n          { type: 'value' }\n        ],\n        // 声明多个 bar 系列，默认情况下，每个系列会自动对应到 dataset 的每一列。\n        series: [{\n          name: 'Deployments',\n          type: 'bar',\n          label: {\n            show: true,\n            position: 'top'\n          }\n        }\n        ]\n      });\n    },\n  },\n  beforeMount () {\n    this.getNamespaces()\n    this.getNodes()\n    this.getDeployments()\n    this.getPods()\n    this.getDeploymentNumNp()\n    this.getPodNumNp()\n  }\n}\n</script>\n\n<style scoped>\n/deep/ .el-collapse-item__header {\n  font-size: 16px;\n}\n\n.home-node-card {\n  border-radius: 1px;\n  text-align: center;\n  background-color: rgb(250, 253, 255);\n}\n\n.home-dash-card {\n  border-radius: 1px;\n}\n\n.home-node-card-title {\n  font-size: 12px;\n}\n\n.home-node-card-num {\n  font-size: 22px;\n  font-weight: bold;\n  color: rgb(63, 92, 135);\n}\n\n/deep/ .el-progress-circle {\n  height: 50px !important;\n  width: 50px !important;\n}</style>"]},"metadata":{},"sourceType":"module"}