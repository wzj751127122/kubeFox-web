import type { Editor, EditorConfiguration } from "codemirror";
import type { PropType } from "vue";
declare const _default: import("vue").DefineComponent<{
    options: {
        type: PropType<EditorConfiguration>;
        default: () => {};
    };
    cminstance: {
        type: PropType<Editor | null>;
        default: () => {};
    };
}, {
    mergeView: import("vue").Ref<HTMLElement | undefined>;
    initialize: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:cminstance" | "ready")[], "ready" | "update:cminstance", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    options?: unknown;
    cminstance?: unknown;
} & {
    options: EditorConfiguration;
    cminstance: Editor | null;
} & {}> & {
    onReady?: ((...args: any[]) => any) | undefined;
    "onUpdate:cminstance"?: ((...args: any[]) => any) | undefined;
}, {
    options: EditorConfiguration;
    cminstance: Editor | null;
}>;
export default _default;
