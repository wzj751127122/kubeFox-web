import type { Editor } from "codemirror";
import type { ComponentInternalInstance, Ref } from "vue";
import type { MergeView } from "codemirror/addon/merge/merge";
import type { CmProps } from '../..src/types/props';
declare type UseEventsParams = {
    props: CmProps;
    cminstance: Ref<Editor | MergeView>;
    emit: ((event: "ready", cm: Editor) => void) & ((event: "update:value", value: string) => void) & ((event: "change", value: string, cm: Editor) => void) & ((event: "input", value: string) => void) & ((event: string, ...args: any[]) => void);
    internalInstance: ComponentInternalInstance | null;
    content: Ref<string>;
};
export declare function scrollToEnd(cm: Editor): void;
declare const useEvents: ({ props, cminstance, emit, internalInstance, content, }: UseEventsParams) => {
    listenerEvents: () => void;
};
export { useEvents };
